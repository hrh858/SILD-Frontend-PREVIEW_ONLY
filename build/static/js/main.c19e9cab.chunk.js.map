{"version":3,"sources":["zComponents/MyModal.tsx","Shared/GlobalStyle.tsx","Shared/Themes.js","Elements/ElementStyledTooltip.tsx","Shared/Shadows.ts","Shared/Colors.ts","Models/cPackFE.ts","Elements/ElementBagdeTreeItem.tsx","zComponents/CustomTree.tsx","zPages/MainPage/DeactivableTooltipIcon.tsx","Services/auxFunctions.tsx","Services/api.ts","zPages/MainPage/AvailableDatabases.tsx","zComponents/LogoClinic/LogoClinic.tsx","zPages/LoginPage/LoginPage.tsx","zComponents/Navbar.tsx","zPages/MainPage/zMainPage.tsx","ComponentsProgressDisplayers/ElementDisplay/ElementText.tsx","ComponentsProgressDisplayers/TileSelectionProgressDisplayer.tsx","ComponentsProgressDisplayers/ElementDisplay/ElementMyDisplayFieldset.tsx","ComponentsProgressDisplayers/InputStringProgressDisplayer.tsx","ComponentsProgressDisplayers/ElementDisplay/ElementDescription.tsx","ComponentsProgressDisplayers/IntervalTimeSelectionProgressDisplayer.tsx","ComponentsProgressDisplayers/BooleanSelectionProgressDisplayer.tsx","ComponentsProgressDisplayers/MultiBooleanSelectionProgressDisplayer.tsx","ComponentsProgressDisplayers/ValueInsertProgressDisplayer.tsx","ComponentsProgressDisplayers/VarIntervalSelectionProgressDisplayer.tsx","ComponentsProgressDisplayers/ElementDisplay/ElementAccordion.tsx","Shared/NestedSearchMultipleConditions.tsx","Elements/ElementSearchBoxV2.tsx","ComponentsProgressDisplayers/GroupMultiTileSelectProgressDisplayer.tsx","ComponentsProgressDisplayers/MultiTileSelectProgressDisplayer.tsx","ComponentsProgressDisplayers/RenderProgressScreenOutputs.tsx","zComponents/RenderScreenToShow.tsx","zPages/SeeDatabasePage/zSeeDatabasePage2.tsx","zPages/V2_CreateDatabasePage/CompRenameBase.tsx","Models/CreateDatabaseVizStructures.tsx","zPages/V2_CreateDatabasePage/FoldersPicker.tsx","zPages/V2_CreateDatabasePage/SearchResultModal.tsx","zPages/V2_CreateDatabasePage/SelectNewVariableDisplayer.tsx","Elements/ElementInputText.tsx","Elements/ElementTitleC.tsx","Elements/ElementInfoIcon.tsx","Elements/ElementInformativeTextWithHover.tsx","Elements/ElementSwitch.tsx","Elements/ElementSearchBoxV3.tsx","Elements/ElementSelectALLSwitchV3.tsx","Elements/ESelectALLBuscadorV2.tsx","Elements/LayoutElement.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/ValueInsert.tsx","Elements/ElementExpandibleTitle.tsx","Elements/ElementTile.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/TileSelectionV3.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/MultiTileSelectV2.tsx","Shared/Attributes.ts","zPages/V2_CreateDatabasePage/ScreenComponents/GroupMultiTileSelectV2.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/VarIntervalSelectionV3.tsx","Elements/ElementHorizontalTile.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/BooleanSelectionV2.tsx","Elements/ElementMyFieldset.tsx","Elements/ElementTextField.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/InputString.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/IntervalTimesSelection.tsx","Elements/ElementInfoCard.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/InfoScreen.tsx","Elements/ElementTextSide.tsx","zPages/V2_CreateDatabasePage/ScreenComponents/MultiBooleanSelection.tsx","zPages/V2_CreateDatabasePage/Popup.tsx","Elements/ElementInputDefineBaseName.tsx","zPages/V2_CreateDatabasePage/FinishCreationPopUp.tsx","Models/DataStructure.ts","Models/SchemaScreenComponent.tsx","Models/SchemaScreen.ts","zPages/V2_CreateDatabasePage/zV2_CreateDatabasePage.tsx","zPages/ErrorPage/zErrorPage.tsx","Elements/ElementSpreadsheet.tsx","App.tsx","index.js"],"names":["MyModalIcon","GlobalStyles","createGlobalStyle","Container","styled","div","Row","spin","button","props","danger","theme","background","text","backgroundSecondary","keyframes","Loader","Icon","span","lightTheme","backgroundLight","textSecondary","body","TooltipNAV","withStyles","arrow","backgroundColor","transitionDuration","tooltip","color","palette","common","white","fontSize","paddingTop","paddingBottom","paddingRight","paddingLeft","maxWidth","popper","Tooltip","defShadow","DivCloseButton","bgColor","MyButton","MyModal","useEffect","onOpenCallback","onCloseCallback","style","position","width","height","showOverEverything","display","justifyContent","alignItems","backdropFilter","zIndex","minHeight","gridTemplateRows","noTop","topColor","fontWeight","gap","padding","minWidth","onCloseButtonCallback","onClick","cursor","icon","None","Alert","titleText","textColor","flexDirection","borderBottom","margin","middleElements","bottomElements","MyModalButton","onClickCallback","displayText","GroupMode","cPackFE","idPack","folder","group","type","linkTO","screens","this","currentScreen","screenProg","screenId","id","screenTitle","title","outputs","push","output","aux","i","length","out","componentId","componentType","outputKey","output_key","values","idScreen","slice","pop","console","log","getColor","Master","Associated","Filter","ElementBagdeTreeItem","Object","includes","placement","size","borderRadius","desaturate","alignContent","justifyItems","getLetter","TreeItemType","IconContainer","CustomTreeContainer","CustomTreeItem","pack","label","newName","name","screenRename","find","scr","undefined","selectedName","getNamePack","extraLabel","filters","toString","setViewScreenCallback","onEdit","setEditingFunctionCallback","onFilter","setFilteringFunctionCallback","onDelete","setDeletingFunctionCallback","hideActions","isScreen","preVisualization","map","screen","idxComp","idx","filter","nodeId","verticalAlign","textAlign","overflow","whiteSpace","textOverflow","e","stopPropagation","collapseIcon","expandIcon","children","MyTreeItem","StyledComponent","root","selected","content","styles","TreeItem","ButtonOptions","DeactivableTooltipIcon","tooltipText","onClickActivatedFunction","diameter","visible","border","getButtonsStatus","status","CrearBase","VisualizarBase","Descargar","Informacion","EliminarBase","EditBase","MyDBOptions","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","onClose","visibleStates","visibility","some","el","event","onOpen","currentTarget","Menu","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","onClickEdit","onClickBuild","onClickDownload","onClickVisualizar","Divider","onClickDelete","fcn_moveToErrorPage","idError","window","location","href","origin","base_url","login","user","password","a","fetch","method","headers","JSON","stringify","response","ok","json","res","token","localStorage","setItem","success","Error","errorMessage","getDatabases","getItem","msg","deletetDatabases","idBase","endpVAR1_getAllVariables","endpVAR2_searchFolderGroupVar","endA1_getBase","endA2_deleteBase","endA3_setNameBase","baseName","endB1_createPack","groupId","endB2_deletePack","endC1_nextScreen","endC2_previousScreen","endC3_changeScreen","endC4_getScreen","endD1_finishBase","nameDB","endD2_getDatabase","databaseID","endD3_loadBaseInServerCache","endD4_getUserPermisosDownload","endI1_loadTextInfoMessage","endDB2_downloadDatabase","base_url_download","endDB3_BuildBase","replace","endDB4_updatePrivilegies","permiso","endDB5_deleteDatabasesAndDownload","CustomFieldset","fieldset","CustomLegend","legend","DatabaseRowR","ButtonCrearteDB","MyCardHeader","MyCardBody","IconFiltroActivo","StyledInput","input","CardDB","InfoDBStructure","statusInfo","getStatus","key","onClickDb","borderTop","split","gridTemplateColumns","justifySelf","animation","edit","autoplay","speed","loop","strokeColor","arrowDownCircle","dbName","marginLeft","dbDate","Date","toLocaleDateString","buttons","AvailableDatabases","ssModalState","setModalState","ssSelectedBase","setSelectedBase","ssModalText","setModalText","ssBuscadorText","setBuscadorText","ssFiltroSeleccionado","setFiltroSeleccionado","ssBaseAllInfo","setBaseAllInfo","dbID","then","createdAt","base","database","data","packs","ssBaseSelected","setBaseSelected","ssDownloadPerm","setDownloadPerm","ssDownloadOptionSelected","setDownloadOptionSelected","history","useHistory","changePath","path","getFiltredDB","filterStatus","databases","elDB","temp","link","fcn_BuildBase","databasesToRender","dataBaseFiltrado","elDb","toLowerCase","forEach","date","getBaseDetails","idDatabase","getUserDownloadPerm","onClickDatabase","permDownload","restartStates","onDeleteBase","Form","Control","as","value","onChange","parseInt","target","fcn_downloadBase","reload","fcn_DarPermisosVisulizacionBase","onClickTrashCacheBase","renderModal","colorDef","placeholder","maxHeight","overflowY","catcheBase","isGetCacheBaseSuccess","tooltipKey","boxShadow","disabled","isGetDatabaseSuccess","TreeView","expanded","pck","pckA","pckList","screenRef","LogoClinic","LoginStatus","className","Nav","nav","NavContainer","NavSpanSILD","NavSubContainer","NavSubContainerUser","NavSpanUser","NavLinkSimple","Link","NavMyLink","Navbar","to","transform","removeItem","MainPage","setDatabases","ssCatcheBase","setCatcheBase","ssLoading","setLoading","ssGetDatabaseSuccess","setGetDatabaseSuccess","ssGetCacheBaseSuccess","setGetCacheBaseSuccess","loadData","resBase","databaseId","databaseName","pathname","indexOf","err","deleteCurrentCacheBase","LoginPage","initial","loginStatus","setLoginStatus","setUser","setPassword","executeLogin","loading","succeded","failed","variant","faUser","faTimes","faLock","Spinner","role","ElementText","TileSelectionProgressDisplayer","outputObj","hoverText","ElementMyFieldset","getLegendText","legendText","marginBottom","legendFontSize","InputStringProgressDisplayer","ElementMyDisplayFieldset","realName","propsElem","IntervalTimeSelectionProgressDisplayer","flexWrap","ElementDescription","dateINI","dateEND","BooleanSelectionProgressDisplayer","MultiBooleanSelectionProgressDisplayer","varSelected","varSelec","ValueInsertProgressDisplayer","condition","VarIntervalSelectionProgressDisplayer","getTextDays","days","Math","abs","alignSelf","ini","fin","frec","ref","ContainerDetails","ElementAccordion","Accordion","AccordionSummary","ExpandMore","aria-controls","summaryElement","AccordionDetails","numColumns","round","unboundedMaxHeigh","overflowX","detailElement","ElementSearchBoxV2","setText","newText","nestedSearch","object","searchConditions","levelsFieldName","nestingDepth","match","result","found","iterableItems","obj","rawResultInterpretation","filterOutput","searchResult","childenName","outputFil","chidrenElements","newOutput","NestedSearchMultipleConditions","GroupMultiTileSelectProgressDisplayer","searchStr","useRef","setSearchResult","txt","current","runNestedSearch","outputFiltred","Typography","varSel","idx2","max","inVarSel","renderOutput","MultiTileSelectProgressDisplayer","ContainerVisualizacion","RenderProgress","progOuts","progressOutput","progOut","renderSelectedScreen","screenToShow","componentIdxToShow","ScrollDiv","SeeDatabasePage2","ssBaseName","setBaseName","ssBaseStatus","setBaseStatus","ssBaseCreatedAt","setBaseCreatedAt","ssBase","setBase","ssScreenToShowRef","setScreenToShowRef","isBaseEditable","scrnToRender","scn","renderRighVisualizacionSeeDataBase","MyDivRename","CompRenameBase","GroupFilteringType","onClickRename","VizGroup","canBeMaster","canBeAssociated","canBeFilter","active","VizFolder","isFather","isChild","NonLeafVizFolder","deselect","reactivate","LeafVizFolder","groups","isActive","keepType","deactivate","getActiveGroups","VizFoldersStructure","rawFolders","folders","getChildrenOfFatherFolder","searchId","f","father","rawFolder","vizFolder","filterGroupsByType","selectFather","childFolder","select","selectedFolder","isSelected","childId","FoldersContainer","FolderButton","SubFolderButton","FoldersPicker","SearchState","miniView","onSelectFolder","InsideModalContainer","SearchInput","PerformSearchButton","ResultsContainer","ResultsTable","table","TableHeader","th","TableElement","td","p","shadowed","SearchResultModal","currentSeatchStr","showPerformSearchButton","setShowPerformSearchButton","searchResults","setSearchResults","Inintial","searchState","setSearchState","performSearch","Searching","searchRes","sections","Results","NoResults","renderTable","nameCarpeta","nameGroup","nameVar","canBe","elements","Number","possible","renderVariableTypeViz","removeAltert","newValue","onKeyDown","state","stateRenderSwitch","ChangeFolderButton","SearchBoxContainer","SearchBoxInput","TilesContainer","VariableTile","VariableTileText","SelectNewVariableDisplayer","groupFilteringStr","setGroupFilteringStr","shortenDisplayName","original","maxChars","finalStr","trimEnd","onShowFolderSelector","parentFolder","searchText","document","getElementById","onSelectGroup","TextFieldCustom","valid","ElementTextInput","regex","inputType","defaultInput","test","setValid","newValid","ElementTitleC","H5Html","dangerouslySetInnerHTML","__html","ElementInfoIcon","hover","contrast","fcn_buildHover","ElementInformativeTextWithHover","descrip","ElementSwitch","checked","onColor","offColor","backGrColor","ElementSelectALLSwitchV3","element","StyledDiv","ESelectALLBuscadorV2","infoSearch","search","infoSelec","ScreenContainer","LayoutElement","propsComp","stringDescrip","hoverDescrip","singleChoice","elementRender","ValueInsert","previousInput","ssOptionSelec","setOptionSelec","ssVar1","setVar1","ssVar2","setVar2","ssValid1","setValid1","ssValid2","setValid2","visibleValues","setVisibleValues","arrayOptions","arrayVariable1","arrayVariable2","arrayValid1","arrayValid2","val","elem","tOption","tVar1","tVar2","arrayVal","onValidate","index","v","parseFloat","hideSinRestric","every","arrayOutputData","outputData","output1","output2","fcn_buildIntervalComp","row","handleChange","fieldNumber","newVal","newVar1","newVar2","newValid2","options","ElementExpandibleTitle","onClickTitle","hoverInfo","allSelected","ElementTile","transition","showFullText","TileSelectionV3","addedValues","setAddedValues","selectAllActive","setSelectAllActive","defaultSwitchState","toAdd","prevVal","keys","isInAdded","selectAll","maxHeighTileContainer","effect","place","data-tip","description","addSingle","findIndex","splice","addMultiple","MultiTileSelect","ssExpandedGroups","setExpandedGroups","ssOutput","setOutput","arrayExpanded","initOutput","prevValue","varList","addOutput","prev","newSelected","indexRow","expandGroup","oEL","GroupMultiTileSelect","isExpanded","el2","rowGroup","listOptions","optionGroup","VarIntervalSelectionV2","visualContrains","qProps","ssPeriodSelected","setPeriodSelected","arrayPeriod","arrayVar","refVar","outV","handleKeyDown","newArray","handleInputChange","handleComboChange","valOption","comp","e2","newOption","handleInputFrecChange","tempFECIN","vl","tempFECAL","tempFECMA","indR","numOp","fcn_ListOptions","Autocomplete","disableClearable","getOptionLabel","option","lElm","renderInput","params","TextField","handleFormRefVal","refL","indexRef","BooleanSelectionTile","MySpan","ElementHorizontalTile","BooleanSelectionV2","defaultValue","ElementTextField","defaultText","isValid","maxLenght","validateInput","leftText","negColor","InputString","setValues","canBeEmpty","tempAux","changeInput","IntervalTimeSelection","today","toISOString","ssDateIni","setDateIni","ssDateEnd","setDateEnd","arrayDateIni","arrayDateFin","defaultOp","defaultOptionValue","prevIn","idxE","newVal1","newVal2","preventDefault","handleKeydownEvent","min","arrayIni","arrayFin","ElementInfoCard","InfoScreen","valueText","ElementTextSide","boldText","MultiBooleanSelection","currentOutput","setCurrentOutput","expandedGroups","arrayOutput","inExpandedGroups","inSelectedOptions","optionId","groupIdx","varia","optionIdx","varGroupId","varGroupName","varId","varName","varIdx","addVar","GeneralContainer","CancelButton","CardsContainer","LeftCardContainerV2","RightCardContainer","NavigationButtonsContainer","NavigationButton","TitleContainer","TitleContainerV2","ProgressValuesContainer","Popup","canProceed","setCanProceed","ssCurrentCompIndex","setCurrentCompIndex","arrayFalse","components","fcn_RestartCanProceeed","fcn_UpdateCanProceeed","procComp","idK","outputIndex","outputInner","maxComp","fcn_StringCurrentComponent","component","prevInputsBE","prevValues","validationWasCorrect","renderComponent","colorTitle","progress","getColorTitleContainer","marginTop","progScreen","auxCompIndex","isNewComp","onBack","fcn_Anterior","onHide","editingMode","onSave","fcn_Siguiente","CompInputName","ssCurrentName","setCurrentName","initialName","onChangeName","sanitizedName","sanitizeNameAndCallback","FinishPopupBackground","FinishPopupContainer","FinishPopupButtonAccept","FinishPopupButtonCancel","FinishCreationPopUp","setDatabaseName","onClearMessage","onSaveDatabase","closePopup","errorString","Group","Folder","groupConstructData","SchemaScreenComponent","componentJson","SchemaScreen","screenJson","GeneralLayout","blurred","BottomButtonsContainer","BottomButton","CentralDisplayContainer","TreeDisplayContainer","ComponentDisplayContainer","Header","FloatingChangeViewButton","CloseComponentViewButton","SearchInfoButton","SelectFolderFloatingContainer","V2_CreateDatabasePage","innerWidth","setMiniView","miniViewShowTree","setMiniViewShowTree","showSearchResultModal","setShowSearchResultModal","showFinishPopup","setShowFinishPopup","ssErrorFinishPopup","setErrorFinishPopup","showDailyInfoModal","setShowDailyInfoModal","textDailyInfoModal","setTextDailyInfoModal","ssCurrentPack","setCurrentPack","ssCurrentScreen","setCurrentScreen","ssEditingMode","setEditingMode","ssNewBaseName","setNewBaseName","handleClickOnChangeFolder","setShowFolderSelector","editPack","indxScreen","apiBE","responseScreen","nextScreen","createScreen","error","deletePack","idPackDelete","tempBase","startCreation","responseCreation","newPack","tipologia","firstScreen","addOnlyOutputToScreen","indxBase","newFinishedPack","successDeleteScreen","goPreviousScreen","cleanCreation","goToMainPage","saveDataBase","getNewBaseName","renderRighVisualizacion","foldersStructure","setFoldersStructure","activeFolders","setActiveFolders","setSelectedFolder","showFolderSelector","filterFoldersByType","selectFolder","getActiveFolders","getSelectedFolder","folderId","dateInMsg","dateInStg","trueBase","resScreen","resPackep","curPack","currScreen","checkBaseInCache","loadFolders","addEventListener","loadTextInfoDaily","message","fcn_saveNewDBName","responseB2","getResponse","isFilter","Popover","ErrorPage","errorID","getMiddleText","ElementSpreadsheetCell","onSelect","onValueChange","ElementSpreadsheet","selectedPosition","setSelectedPosition","rows","columns","pos1","pos2","r","c","j","col","pos","renderCells","String","prototype","croppedVersion","cropAt","App","exact","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c19e9cab.chunk.js","sourcesContent":["import React, { ReactElement, useEffect } from 'react'\nimport styled from \"styled-components\";\nimport { FaTimesCircle, FaExclamationTriangle, FaInfoCircle } from \"react-icons/fa\"\n\n//SHARE\nimport * as  colorDef from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\n\n\ninterface DivCloseButtonProps {\n    bgColor?:string\n}\n\nconst DivCloseButton = styled.div<DivCloseButtonProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 1.3rem;\n    height: 1.3rem;\n    color: white;\n    background-color:${({bgColor})=>bgColor?bgColor:colorDef.defMainThemeColor};\n    align-items: center;\n    transition: 0.1s;\n    animation-timing-function: ease-in-out;\n    position:absolute;\n    top: 5px;\n    right:5px;\n\n    &:hover{\n        transform: scale(1.15);\n        transition: 0.1s;\n        animation-timing-function: ease-in-out;\n    }\n`\n\nconst MyButton = styled.button`\n    border: 0;\n    margin: 0;\n    border-radius: 0.2rem;\n    box-shadow: ${defShadow};\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.1s;\n    animation-timing-function: ease-in-out;\n\n    &:hover{       \n        transform: scale(1.15);\n        transition: 0.1s;\n        animation-timing-function: ease-in-out;\n    }\n`\n\nexport enum MyModalIcon {\n    Alert,\n    Info,\n    None\n}\n\ninterface MyModalProps {\n    showOverEverything?: boolean\n    style?: {\n        width?: string\n        height?: string\n        zIndex?: number\n        textColor?: string\n        fontSize?: string\n    }\n    removeAltert?: boolean\n    titleText?: string\n    icon?: MyModalIcon\n    topColor?: string\n    middleElements: ReactElement\n    bottomElements: ReactElement<MyModalButtonProps> | ReactElement<MyModalButtonProps>[]\n    noTop?: boolean\n    // displayText: string\n    onOpenCallback?: () => void\n    onCloseCallback?: () => void\n    onCloseButtonCallback?: () => void\n}\n\nexport function MyModal(props: MyModalProps) {\n    useEffect(() => {\n        if (props.onOpenCallback) props.onOpenCallback()\n        return () => {\n            if (props.onCloseCallback) props.onCloseCallback()\n        }\n    }, [])\n\n    return (\n        <div style={{\n            position: \"absolute\",\n            width: \"100vw\",\n            height: props.showOverEverything ? \"100%\" : \"calc(100% - 60px)\", // 60px corresponden a la Navbar\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backdropFilter: \"blur(1rem) brightness(70%)\",\n            zIndex: props.style && props.style.zIndex ? props.style.zIndex : 1500\n        }}>\n            <div style={{\n                width: props.style && props.style.width ? props.style.width : \"40rem\",\n                minHeight: props.style && props.style.height ? props.style.height : \"15rem\",\n                backgroundColor: colorDef.defWhiteColor,\n                zIndex: props.style && props.style.zIndex ? props.style.zIndex : 1500,\n                display: \"grid\",\n                gridTemplateRows: !props.noTop ? \"5rem 1fr 5rem\" : \"1fr 5rem\",\n            }}>\n                { !props.noTop ? <div\n                    style={{\n                        color: \"white\",\n                        backgroundColor: !props.topColor ? colorDef.defMainThemeColor : props.topColor,\n                        // backgroundColor: !props.topColor ? colorDef.defRedColor : props.topColor,\n                        fontSize: \"2rem\",\n                        fontWeight: 600,\n                        display: \"inline-flex\",\n                        justifyContent: \"flex-start\",\n                        alignItems: 'center',\n                        gap: '1.5rem',\n                        padding: \"0rem 1.5rem\",\n                        minWidth: '100%',\n                        height: '100%',\n                        position: 'relative',\n                    }}\n\n                >\n                    {props.onCloseButtonCallback &&\n                        <DivCloseButton  bgColor = {props.topColor} onClick={props.onCloseButtonCallback}>\n                            <FaTimesCircle style={{ cursor: \"pointer\" }} />\n                        </DivCloseButton>\n                    }\n                    {\n                        props.icon === MyModalIcon.None ? \"\" :\n                        props.icon === MyModalIcon.Alert ? <FaExclamationTriangle style={{ color: \"white\" }} /> :\n                        <FaInfoCircle style= {{ color: \"white\" }} />\n                    }\n                    <span>{props.titleText ? props.titleText : \"ALERTA\"}</span>\n                </div> : null}\n                <div style={{\n                    color: props.style && props.style.textColor ? props.style.textColor : colorDef.defBlackColor,\n                    fontSize: props.style && props.style.fontSize ? props.style.fontSize : \"1.2em\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: 'center',\n                    borderBottom: \"1px solid \" + colorDef.defLineSeparatorColor,\n                    padding: \"1rem 0rem\",\n                    margin: \"0 1rem\",\n                    maxWidth: '100%',\n                    gap: \"0.7rem\"\n                }}>\n                    {props.middleElements}\n                </div>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-evenly\",\n                    width: \"100%\"\n                }}>\n                    {props.bottomElements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface MyModalButtonProps {\n    style?: {\n        width?: string\n        height?: string\n        color?: string\n        textColor?: string\n    }\n    displayText: string\n    onClickCallback: () => void\n}\n\nexport function MyModalButton(props: MyModalButtonProps) {\n    return (\n        <MyButton style={{\n            width: props.style && props.style.width ? props.style.width : \"8rem\",\n            height: props.style && props.style.height ? props.style.height : \"2.5rem\",\n            backgroundColor: props.style && props.style.color ? props.style.color : colorDef.defButtonDefaultColor,\n            color: props.style && props.style.textColor ? props.style.textColor : \"black\",\n        }}\n            onClick={props.onClickCallback}>\n            {props.displayText}\n        </MyButton>\n    )\n}\n","import styled, { createGlobalStyle, keyframes } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: #fff;\n    color: #fff;\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: color 0.50s linear, background-color 0.50s linear;\n    text-align: center;\n  }\n  `\n\nexport const Container = styled.div`\n  padding: 2rem;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`\n\nexport const MainContainer = styled(Container)`\n  height: calc( 100vh - 100px);\n`\n\nexport const Row = styled.div`\n  padding: 2rem;\n  display:flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n\n  @media (max-width: 960px){\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n`\n\nexport const RowE = styled(Row)`\ndisplay: flex;\n  justify-content: space-between;\n`\n\nexport const RowELItems = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  margin-left: 1rem;\n  align-items: center;\n`\n\nexport const RowERItems = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: 1rem;\n  align-items: center;\n`\n\nexport const Column = styled.div`\n  padding: 2rem;\n  display:flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  \n  @media (max-width: 960px){\n  width: 100% !important;\n  max-width: 100% !important;\n  }\n`\n\ninterface ButtonProps {\n  danger?: Boolean\n}\n\nexport const Button = styled.button`\n  background: ${(props: ButtonProps) => props.danger ? ({ theme }) => theme.danger : ({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  padding: 1rem 2rem;\n  border-radius: 1rem;\n  border: none;\n  outline: none !important;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n\n  &:hover{\n    opacity: 0.9;\n    box-shadow: 0.5rem 0.5rem 1rem 0rem ${({ theme }) => theme.backgroundSecondary};\n  }\n`\n\nconst spin = keyframes`\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n`\n\nexport const Loader = styled.div`\n    border: 3px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 3px solid rgb(20, 149, 131);\n    width: 50px;\n    height: 50px;\n    -webkit-animation: ${spin} 2s linear infinite; /* Safari */\n    animation: ${spin} 2s linear infinite;\n`\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: inherit;\n`\n\nexport const ListHeader = styled.span`\n  padding: 1rem;\n  font-weight: bold;\n  border-bottom: 1px solid gray;\n  margin-bottom: 1rem;\n`\n\nexport const ListContent = styled.div`\n  overflow-y: auto;\n`\n\nexport const ListItem = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  cursor: pointer;\n  padding: 0.5rem;\n  \n  &:hover{\n    background-color: #c0c0c0;\n  }\n`\n\nexport const ListGroup = styled.div`\npadding: 1rem;\ndisplay: flex;\nflex-wrap: wrap;\n`\n\nexport const ListGroupItem = styled.div`\npadding: 1rem;\nmargin: 1rem;\nheight: 100px;\nwidth: 200px;\ndisplay: flex;\nalign-items: center;\ncursor: pointer;\nborder: 1px solid transparent;\nborder: 1px solid ${({ theme }) => theme.background};\nborder-radius: 2rem;\n\n&:hover{\n    background-color: ${({theme}) => theme.background};\n    color: \"white\";\n  }\n`\n\nexport const ListGroupItemIcon = styled.div`\nfont-size: 3rem;\n`\n\nexport const ListGroupItemText = styled.span`\nwidth: 100%;\ntext-overflow: ellipsis;\noverflow: hidden;\ndisplay: -webkit-box;\n-webkit-line-clamp: 2;\n-webkit-box-orient: vertical;\nfont-size: 1.5rem;\n`\n\nexport const Popup = styled.div`\n  z-index: 999;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  background-color: rgba(50,50,50,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: fixed;\n`\n\nexport const PopupContainer = styled.div`\n  background-color: white;\n  cursor: default;\n  width: 900px;\n  max-height: 70vh;\n  overflow-y: auto;\n`\n\nexport const PopupHeader = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 2rem;\n  border-bottom: 1px solid gray;\n  font-size: xx-large;\n  font-weight: bold;\n`\n\nexport const PopupFooter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 2rem;\n`\n\nexport const Icon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.background};\n`\n\nexport const IconSelect = styled(Icon)`\n  cursor: pointer;\n  &:hover{\n    opacity: 0.7;\n  }\n`","export const lightTheme = {\n    background: \"rgb(20, 149, 131)\",\n    backgroundLight: \"#f3f3f3\",\n    backgroundSecondary: \"#303030\",\n    text: \"#fff\",\n    danger: \"#f03004\",\n    textSecondary: \"#303030\",\n    body: \"#fff\",\n\n}\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, Theme } from '@material-ui/core/styles';\n\n\nexport const TooltipNAV = withStyles((theme: Theme) => ({\n    arrow: {       \n        // color: \"#4A4A4A\",\n        \"&::before\": {\n            backgroundColor: '#343a40',\n        // border: \"2px solid red\"\n        },\n        transitionDuration: \"0s !important\",\n    },\n    tooltip: {\n    //   backgroundColor: theme.palette.common.black,\n    // backgroundColor: theme.palette.common.white,\n    //   color: '#343a40',\n    //   boxShadow: theme.shadows[1],\n    backgroundColor: '#343a40',\n    color: theme.palette.common.white,\n    fontSize: '15px',\n    paddingTop:'7px',\n    paddingBottom:'7px',\n    paddingRight:'10px',\n    paddingLeft:'10px',\n    maxWidth:\"30rem\",\n    transitionDuration: \"0s !important\",\n    //   margin:\"5px\",\n    //   border:\"2px solid #1d1e1f\",\n     \n    },\n    popper:{\n        transitionDuration: \"0s !important\",\n    }\n  }))(Tooltip);\n","export const defShadow = \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\"","\nexport const defMainThemeColor    = \"#149583\"\n// export const defMainThemeColor    = \"#343a40\"\n\nexport const defWhiteColor = \"#fff\"\nexport const defBlackColor = \"black\"\nexport const defBlackColor2 = \"#343a40\"\nexport const defGreenColor = \"#149583\"\nexport const defFaintGreenColor = \"#149583\"\nexport const defGrayColor = \"#888888\"\nexport const defGrayLightColor = \"#aaaaaa\"\nexport const defGrayHoverColor = \"#dddddd\"\nexport const defRedColor = \"#ff0000\"\nexport const defSelectedElem = \"#1E90FF\"\n// export const defSelectedElem = \"#4169E1\"\n// export const defSelectedElem = \"#00BFFF\"\nexport const defSeachBackground = \"#343a40\"\nexport const defInfoIcon= \"RoyalBlue\"\nexport const defInfoBackground= \"#0000000d\"\nexport const defBackGSubComp = \"#f7f7f7\"\nexport const defScrollBar = \"#babac0\"\n\nexport const defLineSeparatorColor = \"#0000001a\"\nexport const defButtonDefaultColor = \"#0000000d\"\n\nexport const defFilterColor = \"#9538a0\"\nexport const defComponentColor = \"#ffa500\"\nexport const defAsociadaColor = \"#5b72e7\"\nexport const defMasterColor = \"#f53131\"\n\n\nexport const defStatusCreandoEstruc = \"#ff0000\"\nexport const defStatusEstrucRdy = \"#aaaaaa\"\nexport const defStatusRellenando = \"#f17e1c\"\nexport const defStatusDescargando = \"#f17e1c\"\nexport const defStatusCreada = \"#20a731\"\n\n//-----------------------------------------------\n// COLORS DISPLAY\nexport const defCDGreenColorAlpha = \"#14958310\"\n\n//-----------------------------------------------\n// COLORS TREE\n// export const defTagGroupTreColor = \"#a56b3c\"\nexport const defTagGroupTreColor = \"#343a40\"\n//-----------------------------------------------\n\n//-----------------------------------------------\n// COLORS MAIN PAGE\n// export const defButtonMainPageColorBackground = \"#f9e4b7\"\n// export const defButtonMainPageColorBackground = \"#fdd37d70\"\n// export const defButtonMainPageColorIcon = \"#343a40b1\"\n// export const defButtonMainPageColorBackground = \"#676E7B\"\n// export const defButtonMainPageColorBackground = \"#383c44\"\n// export const defButtonMainPageColorBackground = \"#343a40\"\n// export const defButtonMainPageColorBackground = \"#149583\"\nexport const defButtonMainPageColorBackground = \"#666666\"\nexport const defButtonMainPageColorIcon = \"white\"\nexport const defIconAnimations = \"#fd7e14e3\"\n//-----------------------------------------------\n\n//-----------------------------------------------\n// COLORS CARD IZQ. FILTROS\n// export const defBorderCardizqColor = \"rgba(0,0,0,.125)\"\n// export const defSearchCardizqColor = \"#17a2b8\"\n\nexport const defBorderCardizqColor = \"rgba(0,0,0,.125)\"\nexport const defSearchCardizqColor = \"#343a40\"\nexport const defSelectedCardizqColor = \"#1E90FF\"\n\n// COLORS CARD DB\nexport const defCardDBHoverColor = \"rgba(0, 0, 0, 0.04)\"\n//-----------------------------------------------\n\n\n// Colors Creación Base\nexport const defCreateBaseSalirSinGuardarButton = \"#D43B3B\"\nexport const defCreateBaseFinalizarButton = \"#000000\"\n\nexport const defBoxShadow = \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\"\nexport const defBorderRadius = \"1rem\"\n\n// COLORS NOMBRE DB - V2_CreateDatabasePage\n// export const defCreateBaseNombreBaseButton = \"white\"\n// // export const defCreateBaseNombreBaseButtonBackground = \"#343a40\"\n// export const defCreateBaseNombreBaseButtonBackground = \"#149583\"\n\nexport const defCreateBaseNombreBaseButton = \"black\"\nexport const defCreateBaseNombreBaseButtonBackground = \"#0000000d\"\n\n\n// BUTTONS\nexport const defButtonAccept        = \"#27873ce3\"\n// export const defButtonAccept        = \"#343a40\" // 28a745\nexport const defButtonAcceptText    = \"white\"\nexport const defButtonCancel        = \"#D43B3B\"\nexport const defButtonCancelText    = \"white\"\n\n\n// FoldersPicker.tsx\nexport const defFolderButton    = \"#149583\"\nexport const defFolderButtonHover    = \"#14958388\"","import SchemaScreen from \"./SchemaScreen\"\nimport { GroupSimp, FolderSimp } from \"./DataStructure\"\n\nexport interface SchemaProgressOutput {\n    componentId: string\n    componentType: string\n    outputKey: string\n    values: any\n}\n\nexport interface SchemaProgressScreen {\n    screenId: string\n    screenTitle: string\n    outputs: SchemaProgressOutput[]\n}\n\nexport enum GroupMode {\n    Master = \"Master\",\n    Associated = \"Asociada\",\n    Filter = \"Filtro\"\n}\n\nexport class cPackFE {\n    idPack: string \n    folder: FolderSimp\n    group: GroupSimp\n    type: string\n    screens: SchemaProgressScreen[] = []\n    linkTO: string // id del pack sobre el que este subpack está actuando (undefined si es un pack)\n\n    constructor(idPack:string, folder: FolderSimp, group: GroupSimp, type: string, linkTO:string,screens:SchemaProgressScreen[]) {\n        this.idPack = idPack \n        this.folder = folder\n        this.group = group\n        this.type = type   \n        this.screens = screens  \n        this.linkTO = linkTO\n    }\n\n    isFilter(): boolean { return this.linkTO != \"\" }\n\n    //-------------------------------------------------------------------//\n    // NEW Bend \n    //-------------------------------------------------------------------//\n    createScreen(currentScreen: SchemaScreen) {       \n        let screenProg: SchemaProgressScreen = {\n            screenId: currentScreen.id,\n            screenTitle: currentScreen.title,\n            outputs: [],\n        }\n        this.screens.push(screenProg);\n    }\n\n    addOnlyOutputToScreen(\n        currentScreen: SchemaScreen,\n        output: [{ componentId: string, componentType:string, output_key: string, values: any[] }],\n    ) {\n        let aux: SchemaProgressOutput[] = []\n        for (let i = 0; i < output.length; i++) {\n            let out: SchemaProgressOutput = {\n                componentId: output[i].componentId,\n                componentType: output[i].componentType,\n                outputKey: output[i].output_key,\n                values: output[i].values\n            }\n            aux.push(out)\n        }\n        this.screens[this.screens.length-1].outputs = aux;\n\n    }\n\n    goPreviousScreen(idScreen:string) {\n        if(this.screens.slice(-1)[0].screenId === idScreen){\n            this.screens.pop();\n            this.screens.slice(-1)[0].outputs = [];            \n            return true;\n        }\n        else console.log('Error going to previous screen')\n        return false;\n    }\n}","import React from 'react'\nimport  * as colorDef from '../Shared/Colors'\nimport { GroupMode } from '../Models/cPackFE'\nimport {TooltipNAV} from './ElementStyledTooltip';\n\n// COLORS\nfunction getLetter(type: string) {\n    switch (type) {\n        case GroupMode.Master:\n            return 'M'\n        case GroupMode.Associated:\n            return 'A'\n        case GroupMode.Filter:\n            return 'F'\n        case \"Screen\":\n            return 'P'\n        case \"Component\":\n            return 'C'\n        default:\n            return 'E'\n    }\n}\n\nfunction getColor(type: string) {\n    switch (type) {\n        case GroupMode.Master:\n            return colorDef.defMasterColor\n        case GroupMode.Associated:\n            return colorDef.defAsociadaColor\n        case GroupMode.Filter:\n            return colorDef.defFilterColor\n        case \"Screen\":\n            return colorDef.defFaintGreenColor\n        case \"Component\":\n            return colorDef.defComponentColor\n        default:\n            return \"black\"\n    }\n}\n\n\n\nfunction getHoverText(type: string) {\n    if ((Object.values(GroupMode) as string[]).includes(type)) {\n        return type\n    }\n    return \"\"\n}\n\n//***********************************************************************************/\n// CUSTOM BADGE\n//***********************************************************************************/\ninterface Props {\n    type: string;\n    size: string;\n    desaturate?: boolean\n}\n\nexport function ElementBagdeTreeItem(props: Props) {\n    \n    return  <TooltipNAV\n            title={getHoverText(props.type)}\n            arrow={true}\n            placement={'top'}\n        >\n    <div style={{\n            minWidth: props.size,\n            minHeight: props.size,\n            borderRadius: \"calc(\"+props.size+\" / 2)\",\n            backgroundColor: props.desaturate ? \"gray\" : getColor(props.type),\n            color: 'white',\n            fontSize: \"calc(\"+props.size+\" *0.632 )\",\n            // fontWeight: 'bold',\n            fontWeight: 650,\n            display: \"inline-flex\",\n            alignItems: \"flex-end\",\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            justifyItems: 'center',\n            // paddingTop: '0.06rem',         \n            cursor:'default',\n\n        }}>\n            {getLetter(props.type)}\n        </div>\n        </TooltipNAV>\n    }\n","import React from 'react'\nimport { TreeItem } from '@material-ui/lab'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { MdEdit } from 'react-icons/md';\nimport { FaFilter, FaTrash } from 'react-icons/fa';\n\nimport styled from 'styled-components'\nimport { withStyles, Theme } from '@material-ui/core/styles';\n\n\n// MY COMPONENTS\nimport { ElementBagdeTreeItem} from '../Elements/ElementBagdeTreeItem';\n\n// ELEMENTS\nimport { TooltipNAV } from '../Elements/ElementStyledTooltip';\n\n// MODELS\nimport { cPackFE, GroupMode, SchemaProgressScreen } from '../Models/cPackFE'\n\n//SHARE\nimport { defMainThemeColor, defWhiteColor, defFilterColor,defGrayHoverColor ,defBlackColor2, defGrayColor,defTagGroupTreColor} from '../Shared/Colors'\n\n\nconst IconContainer = styled.div`\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 50%;\n    background-color: ${defMainThemeColor};\n    color:${defWhiteColor};\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    justify-items: center;\n    &:hover{\n        transform:scale(1.07);\n    }\n`\n\nexport enum TreeItemType {\n    Master,\n    Asociada,\n    Filtero,\n    Screen\n}\n\n//***********************************************************************************/\n// CUSTOM TREE VIEW\n//***********************************************************************************/\ninterface PropsView {\n    pack: cPackFE,\n    filters: cPackFE[],\n    setViewScreenCallback: (screenRef?:{idPack:string,idScreen:string,idxComp:number}) => void,\n    setEditingFunctionCallback?: (id: string, screen: string) => void,\n    setFilteringFunctionCallback?: (id: string) => void,\n    setDeletingFunctionCallback?: (id: string) => void,\n    hideActions?: boolean\n    preVisualization?:boolean\n}\n\nexport function CustomTreeContainer(props: PropsView) {\n    const getNamePack = ()=>{\n        let newName = [props.pack.group.name,props.pack.group.name];\n        \n        const screenRename = props.pack.screens.find((scr)=>scr.screenId === \"screen_packRename\");\n        if (screenRename !== undefined){\n            const selectedName = screenRename.outputs[0]?.values[0]?.name\n            if(selectedName !== undefined){\n                newName[0] = selectedName;\n            }\n        }\n        return newName;\n    }\n\n    return (\n        <CustomTreeItem\n            id={props.pack.idPack}\n            label={getNamePack()}\n            extraLabel={props.filters.length>0?props.filters.length.toString():\"\"}\n            type={props.pack.type}\n            onClick={() => { props.setViewScreenCallback(undefined) }}\n            onEdit={() => props.setEditingFunctionCallback ? props.setEditingFunctionCallback(props.pack.idPack, props.pack.screens[0].screenId) : \"\"}\n            onFilter={() => props.setFilteringFunctionCallback ? props.setFilteringFunctionCallback(props.pack.idPack) : \"\"}\n            onDelete={() => props.setDeletingFunctionCallback ? props.setDeletingFunctionCallback(props.pack.idPack) : \"\"}\n            hideActions={props.hideActions}\n            isScreen={false}            \n        >\n            {//SCREENS\n                !props.preVisualization && props.pack.screens.map((screen: SchemaProgressScreen) => {\n                    return screen.screenId!=='screen_0' && screen.screenId!=='screen_FIN' && <CustomTreeItem\n                        id={props.pack.idPack + screen.screenId}\n                        label={[screen.screenTitle]}\n                        type={\"Screen\"}\n                        onClick={screen.outputs.length < 2 ? () => {props.setViewScreenCallback({idPack:props.pack.idPack,idScreen:screen.screenId,idxComp:-1})} : () => {props.setViewScreenCallback(undefined)}}\n                        onEdit={() =>( props.setEditingFunctionCallback  )? props.setEditingFunctionCallback(props.pack.idPack, screen.screenId) :undefined}\n                        hideActions={screen.outputs.length === 1 || props.hideActions?props.hideActions:true}\n                        isScreen={screen.outputs.length < 2}\n                    >\n                        {\n                            screen.outputs.length > 1 ?\n                                screen.outputs.map((output, idx) => <CustomTreeItem\n                                    id={props.pack.idPack + screen.screenId + output.outputKey}\n                                    label={[screen.screenTitle + \" - Parte: \" + (idx+1)]}\n                                    type={\"Component\"}\n                                    onClick={() => { props.setViewScreenCallback({idPack:props.pack.idPack,idScreen:screen.screenId,idxComp:idx}) }}\n                                    isScreen={true}\n                                    onEdit={() => props.setEditingFunctionCallback ? props.setEditingFunctionCallback(props.pack.idPack, screen.screenId) : undefined}\n                                    hideActions={props.hideActions}\n                                />) : null\n                        }\n                    </CustomTreeItem>\n                })\n            }\n            { // FILTRO (SI HAY)\n                props.filters ?\n                    props.filters.map((filter: cPackFE) =>\n                        <CustomTreeContainer\n                            pack={filter}\n                            filters={[]}\n                            setViewScreenCallback={props.setViewScreenCallback}\n                            setEditingFunctionCallback={props.setEditingFunctionCallback}\n                            setDeletingFunctionCallback={props.setDeletingFunctionCallback}\n                            hideActions={props.hideActions}\n                        />)\n                    : null\n            }\n        </CustomTreeItem>\n    )\n}\n\n//***********************************************************************************/\n// CUSTOM TREE ITEM\n//***********************************************************************************/\ninterface Props {\n    children?: React.ReactNode\n    label: string[]\n    extraLabel?:string\n    id: string\n    type: string\n    isScreen:boolean\n    onClick?: () => void\n    onEdit?: () => void\n    onFilter?: () => void\n    onDelete?: () => void\n    hideActions?: boolean\n}\n\nexport function CustomTreeItem(props: Props) {\n    \n    return (\n        <MyTreeItem\n            isScreen ={props.isScreen}\n            nodeId={props.id}\n            label={\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    minHeight: \"2.5rem\",\n                    paddingRight: '0.5rem',\n                    paddingLeft: '0.2rem'\n                }}>\n                    <div style={{\n                        display: \"flex\",\n                        justifyContent: 'flex-start',\n                        gap: \"0.8rem\",\n                        alignItems: 'center',                        \n                    }}>\n                        <ElementBagdeTreeItem\n                            type={props.type}\n                            size={'1.3rem'}\n                        />\n                        {\n                        props.label.length>1  &&\n                            <TooltipNAV\n                                title={\"Grupo: \" +props.label[1]}\n                                arrow={true}\n                            >\n                            <span style={{\n                                verticalAlign: \"middle\",\n                                textAlign: \"center\",\n                                color:\"white\",\n                                backgroundColor:defTagGroupTreColor,\n                                padding: '0 0.2rem',                                \n                                fontSize:\"0.8rem\",\n                                borderRadius:'0.2rem',\n                                paddingTop:'0.07rem',\n                                fontWeight:500,\n                                width: \"4.5rem\",\n                                overflow: \"hidden\",\n                                whiteSpace: \"nowrap\",\n                                textOverflow: \"ellipsis\",\n                            }}>\n                                {props.label[1].length>6?props.label[1].slice(0,6)+\"...\":props.label[1]}\n                            </span>\n                            </TooltipNAV>\n                        }\n                        <span style={{\n                            verticalAlign: \"middle\",\n                            textAlign: \"left\",\n                            fontWeight: props.type === GroupMode.Master ? \"bold\" : \"normal\"\n                        }}>\n                            {props.label[0]}\n                        </span>\n                        {\n                        props.extraLabel &&\n                            <TooltipNAV\n                                title={'Número de filtros creados'}\n                                arrow={true}\n                            >\n                            <span style={{\n                                verticalAlign: \"middle\",\n                                textAlign: \"left\",\n                                color:\"white\",\n                                backgroundColor:defFilterColor,\n                                padding: '0 0.2rem',                                \n                                fontSize:\"0.8rem\",\n                                borderRadius:'0.2rem',\n                                paddingTop:'0.07rem',\n                                fontWeight:500,\n                            }}>{props.extraLabel}F</span>\n                            </TooltipNAV>\n                        }\n                    </div>                   \n                    <div style={{\n                        display: \"flex\",\n                        justifyContent: 'center',\n                        gap: \"0.5rem\",\n                        alignItems: 'center',\n                    }}>\n                        {/* {\n                            props.type !== GroupMode.Filter && props.onFilter && !props.hideActions ?\n                                <TooltipNAV\n                                    title={'Crear nuevo filtro'}\n                                    arrow={true}\n                                >\n                                    <IconContainer\n                                        style={{ backgroundColor: defFilterColor }}\n                                        onClick={\n                                            (e) => {\n                                                e.stopPropagation();\n                                                if (props.onFilter !== undefined) props.onFilter()\n                                            }\n                                        }\n                                    >\n                                        <   FaFilter style={{ width: \"0.75rem\", paddingTop: \"3px\" }} />\n                                    </IconContainer>\n                                </TooltipNAV>\n                                : null\n                        } */}\n                        {\n                            props.onEdit && !props.hideActions ?\n                                <TooltipNAV\n                                    title={'Editar'}\n                                    arrow={true}\n                                >\n                                    <IconContainer\n                                        onClick={\n                                            (e) => {\n                                                e.stopPropagation();\n                                                if (props.onEdit !== undefined) props.onEdit();\n                                            }\n                                        }\n                                    >\n                                        <MdEdit style={{ width: \"1.1rem\" }} />\n                                    </IconContainer>\n                                </TooltipNAV>\n                                : null\n                        }\n                        {\n                            props.onDelete && !(props.type === GroupMode.Master) && !props.hideActions ?\n                                <TooltipNAV\n                                    title={'Eliminar'}\n                                    arrow={true}\n                                >\n                                    <IconContainer\n                                        onClick={\n                                            (e) => {\n                                                e.stopPropagation();\n                                                if (props.onDelete !== undefined) props.onDelete()\n                                            }\n                                        }\n                                    >\n                                        <   FaTrash style={{ width: \"0.7rem\" }} />\n                                    </IconContainer>\n                                </TooltipNAV>\n                                : null\n                        }\n                    </div>\n                </div>\n            }\n            collapseIcon={<ArrowDropDownIcon />}\n            expandIcon={<ArrowRightIcon />}\n            onClick={() => props.onClick ? props.onClick() : {}}\n        >\n            {props.children}\n        </MyTreeItem>\n    )\n}\n\n\nconst styles = (props: Theme & {isScreen:boolean}) => ({\n    root: {\n        // '&$selected > $content $label': {\n        //   backgroundColor: 'red',\n        // },\n        '&$selected > $content $label, &$selected:focus > $content $label,&$selected:hover > $content $label': {\n          backgroundColor: props.isScreen?defBlackColor2:\"white\",\n          color: props.isScreen?'white':\"\",\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent',\n          },\n        },\n      },\n      /* Pseudo-class applied to the root element when selected. */\n      selected: {},\n      /* Styles applied to the tree node content. */\n      content: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n      },\n      /* Styles applied to the label element. */\n      label: {\n        '&:hover': {\n          backgroundColor: defGrayHoverColor,\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent',\n          },\n        },\n      },\n  })\n\n\n\n\nexport const MyTreeItem = (props: any) => {\n    const StyledComponent = withStyles((theme: Theme) => styles({ ...props, ...theme }))(\n        TreeItem\n    );\n    \n    return <StyledComponent {...props} />;\n    };","import React, { ReactElement } from 'react'\nimport styled from \"styled-components\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\nimport { FaDownload, FaTrash, FaDatabase, FaEye, FaList, FaBars,} from \"react-icons/fa\"\n\n// ELEMENTS\nimport { TooltipNAV } from \"../../Elements/ElementStyledTooltip\";\n\n//SHARE\nimport * as colorDef from '../../Shared/Colors'\n\n\nconst IconContainer = styled.div`\n    width: 1.9rem;\n    height: 1.9rem;\n    border-radius: 50%;\n    background-color: ${colorDef.defButtonMainPageColorBackground};\n    color:${colorDef.defButtonMainPageColorIcon};\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    justify-items: center;\n \n    &:hover{\n        transform:scale(1.1);\n        color: ${colorDef.defButtonMainPageColorBackground};\n        background-color:${colorDef.defButtonMainPageColorIcon};\n        border:1.5px solid ${colorDef.defButtonMainPageColorBackground}\n    }\n`\n\nconst ButtonOptions = styled.button`\n    width: 1.9rem;\n    height: 1.9rem;\n    border-radius: 50%;\n    border:0;\n    background-color: ${colorDef.defMainThemeColor};\n    color:${colorDef.defWhiteColor};\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    justify-items: center;\n \n    &:hover{\n        transform:scale(1.1);\n        color: ${colorDef.defMainThemeColor};\n        background-color:${colorDef.defWhiteColor};\n        border:1.5px solid ${colorDef.defMainThemeColor}\n    }\n`\n\ninterface Props {\n    visible: boolean\n    tooltipKey: string\n    tooltipText: string\n    icon: ReactElement\n    backgroundColor?:string\n    onClickActivatedFunction: () => void\n    diameter?: string\n}\n\nexport function DeactivableTooltipIcon(props: Props) {\n    return (\n        <TooltipNAV title={props.tooltipText} arrow>\n            <IconContainer \n                onClick={(e) => {e.stopPropagation();props.onClickActivatedFunction()}} \n                style={{\n                   cursor:\"pointer\",\n                   width: props.diameter? props.diameter:\"\",\n                   height: props.diameter? props.diameter:\"\",\n                   display:props.visible?\"\":\"none\",\n                   backgroundColor:props.backgroundColor?props.backgroundColor:\"\",\n                   color:props.backgroundColor?\"white\":\"\",\n                   border:props.backgroundColor?0:\"\",                \n            }}>\n                <>\n                {props.icon}\n                </>\n            </IconContainer>\n        </TooltipNAV>\n    )\n}\n\n//-----------------------------------------------------------\nconst getButtonsStatus = (status:number)=>{\n    switch (status) {\n        case  0:\n            return  { // Prepared\n                CrearBase: true,\n                VisualizarBase: false,\n                Descargar: false,\n                Informacion: false,\n                EliminarBase: true,\n                EditBase: true\n            }\n        case  1:\n            return  { // Prepared\n                CrearBase: false,\n                VisualizarBase: false,\n                Descargar: false,\n                Informacion: false,\n                EliminarBase: false,\n                EditBase: false\n            }   \n        case  2:\n            return  { // Prepared\n                CrearBase: true,\n                VisualizarBase: true,\n                Descargar: true,\n                Informacion: false,\n                EliminarBase: true,\n                EditBase: true\n            }    \n        case  3:\n            return  { // Prepared\n                CrearBase: false,\n                VisualizarBase: false,\n                Descargar: false,\n                Informacion: false,\n                EliminarBase: false,\n                EditBase: false\n            } \n        case  4:\n            return  { // Prepared\n                CrearBase: true,\n                VisualizarBase: true,\n                Descargar: true,\n                Informacion: false,\n                EliminarBase: true,\n                EditBase: true\n            }          \n    }\n    return { // Prepared\n        CrearBase: false,\n        VisualizarBase: false,\n        Descargar: false,\n        Informacion: false,\n        EliminarBase: false,\n        EditBase: false\n    }\n}\n//---------------------------------------------------------------------------\n\ninterface PropsMyDBOptions {\n    id:string;\n    status:number;\n    onOpen: () => void\n    onClose: () => void\n    onClickBuild: () => void\n    onClickDownload: () => void\n    onClickDelete: () => void\n    onClickVisualizar: () => void\n    onClickEdit: () => void\n}\n\n\nexport function MyDBOptions(props: PropsMyDBOptions) {     \n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n        props.onOpen();\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = (e:any) => {\n        e.stopPropagation();\n        props.onClose();\n        setAnchorEl(null);\n    };\n    \n    const visibleStates = getButtonsStatus(props.status);\n \n    return (\n        <div>\n            <ButtonOptions\n                style={{visibility:Object.values(visibleStates).some((el)=>el)?\"visible\":\"hidden\"}}\n                id={props.id+\"-button\"}\n                onClick={handleClick}\n            >\n                <FaBars size={\"85%\"} />\n            </ButtonOptions>\n            \n            <Menu\n                id={props.id+\"-menu\"}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                'aria-labelledby': 'basic-button',\n                }}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  \n            >\n                 {getButtonsStatus(props.status).EditBase &&\n                 <MenuItem \n                    style={{gap:\"0.8rem\",}}\n                    onClick={(e)=>{\n                        handleClose(e);\n                        props.onClickEdit();\n                    }}\n                    >\n                        <FaList size={\"1rem\"} />    \n                        <span>Detalles base</span> \n                </MenuItem>\n                }\n                {getButtonsStatus(props.status).CrearBase &&\n                 <MenuItem \n                    style={{gap:\"0.8rem\",}}\n                    onClick={(e)=>{\n                        handleClose(e);\n                        props.onClickBuild();\n                    }}\n                    >\n                        <FaDatabase size={\"1rem\"} />    \n                        <span>{props.status>0?\"Construir/Actualizar Base\":\"Construir Base\"}</span> \n                </MenuItem>\n                }\n                {getButtonsStatus(props.status).Descargar &&\n                 <MenuItem \n                    style={{gap:\"0.8rem\",}}\n                    onClick={(e)=>{\n                        handleClose(e);\n                        props.onClickDownload();\n                    }}\n                    >\n                        <FaDownload size={\"1rem\"} />    \n                        <span>Descargar</span> \n                </MenuItem>\n                }       \n                {getButtonsStatus(props.status).VisualizarBase &&\n                 <MenuItem \n                    style={{gap:\"0.8rem\",}}\n                    onClick={(e)=>{\n                        handleClose(e);\n                        props.onClickVisualizar();\n                    }}\n                    >\n                        <FaEye size={\"1rem\"} />    \n                        <span>Visualización en MySQL</span> \n                </MenuItem>\n                }                \n                <Divider />\n                {getButtonsStatus(props.status).EliminarBase &&\n                 <MenuItem \n                    style={{gap:\"0.8rem\",}}\n                    onClick={(e)=>{\n                        handleClose(e);\n                        props.onClickDelete();\n                    }}\n                    >\n                        <FaTrash size={\"1rem\"} />    \n                        <span>Eliminar base</span> \n                </MenuItem>\n                }\n            </Menu>\n        </div>\n    )\n}","\nexport const fcn_moveToErrorPage = (idError:number)=>\n{   \n    // console.log(window.location.href)\n    window.location.href = window.location.origin.toString()+\"/error/\"+idError;\n\n}","import {fcn_moveToErrorPage} from './auxFunctions'\n\n// LOCAL\n// const base_url = \"http://localhost:3013/api\"\n// const base_url_download = \"https://sildpre.clinic.cat/dev/api\"\n\n// SERVER\nconst base_url = \"https://sildpre.clinic.cat/api\"\nconst base_url_download = \"https://sildpre.clinic.cat/api\"\n\n//************************************************************************* */\n// Authenticate\n//************************************************************************* */\nexport async function login(user: string, password: string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/authenticate\",\n            {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    name: user,\n                    password: password\n                })\n            }\n        );\n        if (response.ok) {\n            let res = await response.json();\n            let token = res['token'];\n            localStorage.setItem('token', token)\n            return {\n                success: true,\n                token: token\n            }\n        }\n        else throw new Error(\"Error iniciando sesión\");\n    }\n    catch (err) {\n        //console.log(\"Error iniciando sesión:\", err);\n        return {\n            success: false,\n            errorMessage: \"Error en el inicio de sesión\"\n        };\n    }\n}\n\n//************************************************************************* */\n// DATABASES\n//************************************************************************* */\n//OK\nexport async function getDatabases(): Promise<any> {\n    try{\n        let response: Response = await fetch(base_url + \"/databases\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        });\n\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n\n        fcn_moveToErrorPage(response.status === 401?3:2) \n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <getDatabases>')  \n        fcn_moveToErrorPage(1)      \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n};\n\nexport async function deletetDatabases(idBase:string): Promise<void> {\n    try {\n        let response: Response = await fetch(base_url + \"/databases?idBase=\"+idBase, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n    } catch (err) {\n        //console.log(\"Error limpiando el progreso (delete base)\", err)\n        fcn_moveToErrorPage(1) \n        return;\n    }\n}\n\n//************************************************************************* */\n// VARIABLES\n//************************************************************************* */\n//OK\nexport async function endpVAR1_getAllVariables(): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/variables\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        });\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endpVAR1_getAllVariables>')     \n        fcn_moveToErrorPage(1)    \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//OK\nexport async function endpVAR2_searchFolderGroupVar(text:string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/variables/search?like=\"+text, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        });\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endpVAR2_searchFolderGroupVar>')        \n        fcn_moveToErrorPage(1) \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//************************************************************************* */\n// BASE DEFINITION\n//************************************************************************* */\n//OK\nexport async function endA1_getBase(): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/base\", {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    \n    } catch (err) {\n        console.log('Error <endA1_getBase>')        \n        fcn_moveToErrorPage(1) \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    }\n}\n\n//OK\nexport async function endA2_deleteBase(): Promise<void> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/base\", {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n    } catch (err) {\n        //console.log(\"Error limpiando el progreso (delete base)\", err)\n        fcn_moveToErrorPage(1) \n        return\n    }\n}\n\n//OK\nexport async function endA3_setNameBase(baseName:string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/base/setName?baseName=\"+baseName, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endA3_setNameBase>')       \n        fcn_moveToErrorPage(1)  \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//OK\nexport async function endB1_createPack(groupId: number,type:string,linkTO:string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/create/\" + groupId +\"?type=\"+type+\"&linkTO=\"+linkTO, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endB1_createPack>')    \n        fcn_moveToErrorPage(1)     \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//OK\nexport async function endB2_deletePack(idPack: string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/delete/\"+ idPack, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endB2_deletePack>')  \n        fcn_moveToErrorPage(1)       \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endC1_nextScreen(idPack: string, idScreen:string, output: any): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/screen/next/\" + idPack+ \"?screen=\"+idScreen, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n            body: JSON.stringify(output)\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endC1_nextScreen>')        \n        fcn_moveToErrorPage(1) \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endC2_previousScreen(idPack: string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/screen/previous/\"+idPack, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endC2_previousScreen>')     \n        fcn_moveToErrorPage(1)    \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endC3_changeScreen(idPack: string, idScreen:string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/screen/change/\" + idPack+ \"?screen=\"+idScreen, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endC3_changeScreen>')      \n        fcn_moveToErrorPage(1)   \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//OK\nexport async function endC4_getScreen(idPack?: string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/cache/pack/screen\" + (idPack?\"?idpack=\"+idPack:\"\"), {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            }\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endC4_getScreen>')       \n        fcn_moveToErrorPage(1)  \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endD1_finishBase(nameDB: string): Promise<any> {\n    try {\n        let response: Response = await fetch(base_url + \"/base-definition/finish\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n            body: JSON.stringify({\n                baseName: nameDB,\n            })\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endD1_finishBase>')  \n        fcn_moveToErrorPage(1)       \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endD2_getDatabase(databaseID: string): Promise<any> {\n    try{\n        let response: Response = await fetch(base_url + \"/base-definition/base?baseID=\" + databaseID, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endD2_getDatabase>') \n        fcn_moveToErrorPage(1)        \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n    }\n\n// OK\nexport async function endD3_loadBaseInServerCache(databaseID: string): Promise<any> {\n    try{\n        let response: Response = await fetch(base_url + \"/base-definition/cache/base/load?baseID=\" + databaseID, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endD3_loadBaseInServerCache>')    \n        fcn_moveToErrorPage(1)     \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//OK\nexport async function endD4_getUserPermisosDownload(): Promise<any> {\n    try{\n        let response: Response = await fetch(base_url + \"/base-definition/userPermDownload\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endD4_getUserPermisosDownload>')\n        fcn_moveToErrorPage(1)         \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\nexport async function endI1_loadTextInfoMessage( ): Promise<any> {\n    try{\n        let response: Response = await fetch(base_url + \"/base-definition/info\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endI1_loadTextInfoMessage>')    \n        fcn_moveToErrorPage(1)     \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n//************************************************************************* */\n// FASE 2\n//************************************************************************* */\n// OK\nexport async function endDB2_downloadDatabase(databaseID: number, aux:number): Promise<any> {\n    try{\n        // let response: Response = await fetch(base_url + \"/databases/download?databaseId=\" + databaseID);\n        // let response: Response = await fetch(\"https://sildpre.clinic.cat/dev/api/fase2/download?databaseId=\"+databaseID+\"&aux=\"+aux, {\n            // let response: Response = await fetch(base_url + \"/fase2/download?databaseId=\"+databaseID, {\n            let response: Response = await fetch(base_url_download+\"/fase2/download?databaseId=\"+databaseID+\"&aux=\"+aux, { \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endDB2_downloadDatabase>')        \n        fcn_moveToErrorPage(1) \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endDB3_BuildBase(databaseID: number,replace?: Boolean): Promise<any> {\n    try{\n        // let response: Response = await fetch(base_url + \"/databases/download?databaseId=\" + databaseID);\n        let response: Response = await fetch(base_url + \"/fase2/processData?databaseId=\"+databaseID +(replace?\"&replace=1\":\"\"), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endDB3_BuildBase>')  \n        fcn_moveToErrorPage(1)       \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\n// OK\nexport async function endDB4_updatePrivilegies(databaseID: number, permiso:number): Promise<any> {\n    try{\n        // let response: Response = await fetch(base_url + \"/databases/download?databaseId=\" + databaseID);\n        let response: Response = await fetch(base_url + \"/fase2/updatePermissions?databaseId=\"+databaseID+\"&perm=\"+permiso, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <getDatabases>')        \n        fcn_moveToErrorPage(1) \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n    }\n\nexport async function endDB5_deleteDatabasesAndDownload(): Promise<any> {\n    try{\n        // let response: Response = await fetch(base_url + \"/databases/download?databaseId=\" + databaseID);\n        let response: Response = await fetch(base_url + \"/fase2/setIntervalDeleteBases\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endDB5_deleteDatabasesAndDownload>')  \n        fcn_moveToErrorPage(1)       \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}\n\nexport async function endDB6_searchInMyBase(databaseID:number,pcntID:number): Promise<any> {\n    try{\n        // let response: Response = await fetch(base_url + \"/databases/download?databaseId=\" + databaseID);\n        let response: Response = await fetch(base_url + \"/fase2/searchInMyBase?dbID=\"+ databaseID +\"&searchID=\"+pcntID, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('token')\n            },\n        })\n        if (response.ok || response.status === 400 \n            || response.status === 500 ) return await response.json();\n        \n        \n        fcn_moveToErrorPage(response.status === 401?3:2)\n        return {success:-100, msg:\"Error: La respuesta servidor no es interpretable\"};    \n    }\n    catch(err){\n        console.log('Error <endDB6_searchInMyBase>')  \n        fcn_moveToErrorPage(1)       \n        return {success:-1, msg:\"Error: servidor no responde\"};\n    } \n}","import React, { ReactElement, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { TreeView } from '@material-ui/lab'\nimport Form from \"react-bootstrap/Form\";\nimport UseAnimations from \"react-useanimations\";\nimport arrowDownCircle from 'react-useanimations/lib/arrowDownCircle';\nimport edit from 'react-useanimations/lib/edit';\nimport styled from \"styled-components\";\nimport { FaTrash, FaDatabase, FaEye, FaCircle, FaFilter, FaSearch, FaTimesCircle, FaBan } from \"react-icons/fa\"\nimport { MdEdit } from 'react-icons/md';\n\n// MY COMPONENTS -  ELEMENTS\nimport { TooltipNAV } from \"../../Elements/ElementStyledTooltip\";\nimport { MyModal, MyModalButton, MyModalIcon } from \"../../zComponents/MyModal\"\nimport { DatabaseData } from \"./zMainPage\";\nimport { CustomTreeContainer } from '../../zComponents/CustomTree'\nimport { DeactivableTooltipIcon, MyDBOptions } from \"./DeactivableTooltipIcon\";\n\n// MODELS\nimport { cPackFE } from '../../Models/cPackFE'\n\n// SHARE\nimport * as colorDef from \"../../Shared/Colors\";\nimport { defShadow } from \"../../Shared/Shadows\";\n\n// API\nimport { endD4_getUserPermisosDownload, endDB2_downloadDatabase, endDB3_BuildBase, endDB4_updatePrivilegies } from \"../../Services/api\";\nimport { endD2_getDatabase } from '../../Services/api'\n\n\n\nconst CustomFieldset = styled.fieldset`\n    border: 3px solid ${colorDef.defMainThemeColor};\n    border-radius:0.5rem;\n    width: 100%;\n    justify-items: center;\n    color:black;\n    padding-top: 0.2rem;\n    padding-bottom: 1rem;\n    padding-left:1rem;\n    padding-right:1rem;\n     &::-webkit-scrollbar {\n        width: 0.35rem !important ; \n        display: flex;\n        padding-bottom: 5rem;\n    }\n    &::-webkit-scrollbar-thumb  {\n        background: ${colorDef.defScrollBar}; \n        border:none ;\n        border-radius: 0.3rem;\n    }\n    &::-webkit-scrollbar-track {\n        margin-bottom: ${colorDef.defBorderRadius};\n        }\n`\n\nconst CustomLegend = styled.legend`\n    color: ${colorDef.defMainThemeColor};\n    font-weight: bold;\n    width: auto;\n    font-size:1.5rem;\n    padding:0rem 0.7rem;\n    text-align: left;\n    margin-right: 1.5rem;\n    margin-left: 2.5rem;\n    margin-bottom: 0px;\n    display: flex;\n    gap:1rem;\n    white-space: nowrap;\n    text-overflow:  ellipsis;\n    cursor: default;\n    align-items: center;\n    justify-content: center;\n    \n`\n\nconst DatabaseRowR = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap:1rem;\n`\n\nconst ButtonCrearteDB = styled.button`\n    color: ${colorDef.defWhiteColor};\n    background-color: ${colorDef.defMainThemeColor};\n    height: 2.5rem;\n    width: 12rem;\n    min-height: 2.4rem;\n    border-radius: 1.2rem;\n    cursor: pointer;\n    font-weight: bold;\n    border: 0;\n    transition: 0.1s;\n    animation-timing-function: ease-in-out;\n\n    &:hover{\n        box-shadow: rgba(0, 0, 0, 0.6) 0 1px 10px;\n        transform: scale(1.02);\n        transition: 0.1s;\n        animation-timing-function: ease-in-out;\n    }\n`\n\nconst MyCardHeader = styled.div`\n    width:100%;\n    height: 3.2rem;\n    background-color:${colorDef.defMainThemeColor};\n    color: white;\n    text-align: center;\n    display:flex;\n    justify-content: center;\n    justify-items: center;\n    align-items: center;\n    align-content: center;\n    font-weight: 900;\n    font-size:1.3rem; \n    border: 1px solid ${colorDef.defBorderCardizqColor};\n`\n\nconst MyCardBody = styled.div`\n    width:100%;\n    height: 3rem;\n    background-color:white ;\n    color: black;\n    text-align: center;\n    display:flex;\n    justify-content: space-between;\n    justify-items: space-between;\n    align-items: center;\n    align-content: center;\n    border-bottom: 1px solid ${colorDef.defBorderCardizqColor};\n    border-left: 1px solid ${colorDef.defBorderCardizqColor};\n    border-right: 1px solid ${colorDef.defBorderCardizqColor};\n    padding: 0 1rem;\n    cursor: pointer;\n    &:hover{\n        background-color:lightgray;\n    }\n   \n`\n\nconst IconFiltroActivo = styled.div`\n    background-color:${colorDef.defRedColor};\n    width:1.5rem;\n    height:1.5rem;\n    border-radius:50%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    cursor:pointer;\n\n    transition: 0.1s;\n    animation-timing-function: ease-in-out;\n\n    &:hover{\n        transform: scale(1.1);\n        transition: 0.1s;\n        animation-timing-function: ease-in-out;\n    }\n`\n\nconst StyledInput = styled.input`\n  ::placeholder {\n    color: #eeeeee,\n  }\n  ::-webkit-input-placeholder {\n    color: #eeeeee;\n  }\n  :-ms-input-placeholder {\n     color: #eeeeee;\n  }\n`\n\n\n\ntype AvailableDatabasesProps = {\n    catcheBase: undefined | { name: string, date: string }\n    databases: Array<DatabaseData> | undefined\n    onClickDatabase: (id: number, name: string) => void\n    onDeleteBase: (idBase: string) => void\n    onClickTrashCacheBase: () => void\n    isGetDatabaseSuccess: boolean\n    isGetCacheBaseSuccess: boolean\n}\n\nconst AvailableDatabases = (props: AvailableDatabasesProps) => {\n\n    const [ssModalState, setModalState] = useState<number>(0)\n    const [ssSelectedBase, setSelectedBase] = useState<{ id: number, name: string, status: number }>({ id: -1, name: \"\", status: 0 })\n\n    const [ssModalText, setModalText] = useState<string>(\"\");\n    const [ssBuscadorText, setBuscadorText] = useState<string>(\"\");\n    const [ssFiltroSeleccionado, setFiltroSeleccionado] = useState<number>(0);\n\n    //---------------------------------------------------\n    const ssShowBaseDetails = true;\n    const [ssBaseAllInfo, setBaseAllInfo] = useState<{ id: number, name: string, createdAt: string, base: cPackFE[] } | undefined>(undefined)\n\n    async function getBaseDetails(dbID: number, dbName: string) {\n        endD2_getDatabase(dbID.toString()).then((res) => {\n            if (res.success <= -1) setBaseAllInfo({ id: -1, name: \"unknown (ERROR)\", createdAt: \"\", base: [] })\n            else {\n                const database = res.data;\n                setBaseAllInfo({ id: dbID, name: database.baseName, createdAt: database.createdAt, base: database.packs })\n            }\n        })\n\n    }\n\n    const [ssBaseSelected, setBaseSelected] = useState<number | undefined>(undefined)\n\n    //-------------------------------------------------------\n    const [ssDownloadPerm, setDownloadPerm] = useState<number>(-1)\n    const [ssDownloadOptionSelected, setDownloadOptionSelected] = useState<number>(0)\n\n    const history = useHistory();\n    const changePath = (path: string) => {\n        history.push(path);\n    }\n\n    const getFiltredDB = (filterStatus: number) => {\n        if (props.databases) {\n            if (filterStatus === 2) return props.databases?.filter((elDB => elDB.status === 0))\n            if (filterStatus === 3) return props.databases?.filter((elDB => elDB.status === 1))\n            if (filterStatus === 4) return props.databases?.filter((elDB => elDB.status === 3))\n            if (filterStatus === 5) return props.databases?.filter((elDB => elDB.status === 2 || elDB.status === 4))\n            if (filterStatus === 6) return props.databases?.filter((elDB => elDB.status === 4))\n            if (filterStatus === 7) return props.databases?.filter((elDB => elDB.status === 2))\n            return props.databases\n        }\n        return []\n    }\n\n    async function fcn_downloadBase() {\n        // OPEN INFO SCREEN\n        if (ssSelectedBase && ssSelectedBase.id !== -1) {\n            let temp = await endDB2_downloadDatabase(ssSelectedBase.id, ssDownloadOptionSelected);\n            if (temp.success === 1) setModalText(\"El proceso de descarga de la base \" + ssSelectedBase.name + \" ha comenzado. Cuando la base esté disponible recibirá un correo a su mail @clinc.cat. \" + temp.link)\n            else setModalText(\"Se ha producido un error. Vuelva a intentarlo más tarde.\")\n        }\n    }\n\n    async function fcn_BuildBase(replace?:Boolean) {\n        // OPEN INFO SCREEN\n        if (ssSelectedBase && ssSelectedBase.id !== -1) {\n            let temp = await endDB3_BuildBase(ssSelectedBase.id,replace);\n            setModalState(3);\n            if (temp.success === 1) setModalText(\"El proceso de construcción de la base \" + ssSelectedBase.name + \" ha comenzado. Cuando la base esté disponible recibirá un correo a su mail @clinc.cat.\")\n            else if (temp.success === -3){\n                setModalState(8);\n                setModalText(\"Se ha detectado un fichero de descarga de la base.\\n ¿ Desea borrar este fichero y constuir la nueva base ? \\n\" + (temp.link ? \"Link: \"+temp.link :\"\"))\n            }\n            else setModalText(\"Se ha producido un error. Vuelva a intentarlo más tarde. \\n\" + (temp.msg ? temp.msg : \"\"))\n        }\n\n    }\n\n    async function fcn_DarPermisosVisulizacionBase() {\n        if (ssSelectedBase && (ssSelectedBase.status === 2 || ssSelectedBase.status === 4)) {\n            // OPEN INFO SCREEN\n            let temp = await endDB4_updatePrivilegies(ssSelectedBase.id, ssSelectedBase.status === 2 ? 1 : 0);\n            setModalState(3);\n            if (temp.success === 1) setModalText(\"La base \" + ssSelectedBase.name + \" ya \" + (ssSelectedBase.status === 4 ? \"NO\" : \"\") + \" es visible en su cuenta MySQL\")\n            else setModalText(\"Se ha producido un error. Vuelva a intentarlo más tarde. \\n\" + (temp.msg ? temp.msg : \"\"))\n        }\n        else setModalText(\"Error 1\")\n    }\n\n    var databasesToRender: Array<ReactElement> = [];\n    let dataBaseFiltrado = getFiltredDB(ssFiltroSeleccionado);\n    if (ssBuscadorText !== \"\") dataBaseFiltrado = dataBaseFiltrado.filter((elDb) => elDb.name.toLowerCase().includes(ssBuscadorText.toLowerCase()))\n\n    if (dataBaseFiltrado) {\n        dataBaseFiltrado.forEach((database: DatabaseData, idx: number) => {\n            databasesToRender.push(\n                <InfoDBStructure\n                    id={\"d\" + idx.toString() + \";\" + database.name}\n                    status={database.status !== undefined ? database.status : -2}\n                    dbName={database.name}\n                    dbDate={database.date}\n                    onClickDb={\n                        () => { getBaseDetails(database.idDatabase, database.name) }\n                    }\n                    selected={ssBaseSelected ? database.idDatabase === ssBaseSelected : false}\n                    buttons={<DatabaseRowR>\n                        <MyDBOptions\n                            id={database.idDatabase.toString()}\n                            status={database.status}\n                            onOpen={() => setBaseSelected(database.idDatabase)}\n                            onClose={() => setBaseSelected(undefined)}\n                            onClickBuild={() => { setSelectedBase({ id: database.idDatabase, name: database.name, status: database.status }); setModalState(5); }}\n                            onClickDownload={() => { setSelectedBase({ id: database.idDatabase, name: database.name, status: database.status }); setModalState(2); getUserDownloadPerm() }}\n                            onClickDelete={() => { setSelectedBase({ id: database.idDatabase, name: database.name, status: database.status }); setModalState(1) }}\n                            onClickVisualizar={() => { setSelectedBase({ id: database.idDatabase, name: database.name, status: database.status }); setModalState(6); }}\n                            onClickEdit={() => { props.onClickDatabase(database.idDatabase, database.name) }}\n\n                        />\n                    </DatabaseRowR>}\n                />\n            )\n        });\n    }\n\n    const getUserDownloadPerm = async () => {\n        let response = await endD4_getUserPermisosDownload();\n        if (response.success === 1) setDownloadPerm(response.permDownload);\n        else {\n            setModalState(3);\n            setModalText(\"Se ha producido un error. \" + response.msg ? response.msg : \"\")\n        }\n    }\n\n    function renderModal() {\n        const restartStates = () => {\n            setModalText(\"\");\n            setSelectedBase({ id: -1, name: \"\", status: -10 });\n            setModalState(0)\n\n        }\n        if (ssModalState > 0) {\n            if (ssModalState === 1) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                titleText={\"Eliminar Base\"}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>\n                        ¿Desea eliminar la base \"{ssSelectedBase.name}\"?\n                    </span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Sí\"\n                            onClickCallback={() => { props.onDeleteBase(ssSelectedBase.id.toString()); restartStates() }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"No\"\n                            onClickCallback={() => { restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 2) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '18rem', zIndex: 1500 }}\n                titleText={\"Descarga Base\"}\n                middleElements={\n                    <>\n                        {ssDownloadPerm === -1 ?\n                            <span style={{ fontSize: \"1.3rem\" }}>\n                                Comprobando permisos...\n                            </span>\n                            :\n                            <>\n                                <span style={{ fontSize: \"1.3rem\" }}>\n                                    ¿Desea descargar la base <b>{ssSelectedBase.name}</b>?\n                                </span>\n                                {ssDownloadPerm === 1 &&\n                                    <div\n                                        style={{ display: \"flex\", justifyContent: \"start\", justifyItems: \"start\", gap: '15px', alignItems: 'center' }}\n                                    >\n                                        <span style={{ whiteSpace: 'nowrap', color: 'black' }}>{\"El fichero debe incluir:\"}</span>\n\n                                        <Form.Control\n                                            name={'selectRef'} as=\"select\" value={ssDownloadOptionSelected} onChange={(e) => setDownloadOptionSelected(parseInt(e.target.value))} >\n                                            <option value={0} > Nada</option>\n                                            <option value={1} > NHC</option>\n                                            <option value={2} > idEpisodio</option>\n                                            <option value={3} > NHC y idEpisodio </option>\n                                        </Form.Control>\n                                    </div>\n                                }\n                            </>\n                        }\n                    </>\n\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Sí\"\n                            onClickCallback={() => {\n                                fcn_downloadBase();\n                                setModalState(3);\n                                setModalText(\"Contactando con el servidor\")\n                            }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"No\"\n                            onClickCallback={() => { restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 3) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '18rem', zIndex: 1500 }}\n                titleText={\"Información\"}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\", whiteSpace:\"pre-line\" }}>\n                        {ssModalText}\n                    </span>\n\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"Cerrar\"\n                            onClickCallback={() => { window.location.reload(); restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 5) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '18rem', zIndex: 1500 }}\n                titleText={\"Construcción Base\"}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>\n                        ¿Desea construir la base <b>{ssSelectedBase.name}</b>?\n                    </span>\n\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Sí\"\n                            onClickCallback={() => {\n                                fcn_BuildBase();\n                                setModalState(3);\n                                setModalText(\"Contactando con el servidor\")\n                            }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"No\"\n                            onClickCallback={() => { restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 6) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '18rem', zIndex: 1500 }}\n                titleText={\"Visualización Base\"}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>\n                        ¿Desea {ssSelectedBase.status === 2 ? \"poder\" : \"dejar de\"} visualizar la base <b>{ssSelectedBase.name}</b> en su cuenta MySQL?\n                    </span>\n\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Sí\"\n                            onClickCallback={() => {\n                                fcn_DarPermisosVisulizacionBase(); setModalState(3);\n                                setModalText(\"Contactando con el servidor...\")\n                            }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"No\"\n                            onClickCallback={() => { restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 7) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                titleText={\"Eliminar Base\"}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>\n                        ¿Desea eliminar de memoria la base \"{ssSelectedBase.name}\"?\n                    </span>\n\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { restartStates() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Sí\"\n                            onClickCallback={() => { props.onClickTrashCacheBase(); restartStates() }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"No\"\n                            onClickCallback={() => { restartStates() }}\n                        />\n                    </>\n                }\n            />\n            else if (ssModalState === 8) return <MyModal\n            icon={MyModalIcon.Alert}\n            style={{ width: '37rem', height: '18rem', zIndex: 1500 }}\n            titleText={\"Información\"}\n            middleElements={\n                <span style={{ fontSize: \"1.3rem\", whiteSpace:\"pre-line\" }}>\n                    {ssModalText.split(\"Link\")[0]}\n                </span>\n\n            }\n            onCloseCallback={() => { }}\n            onOpenCallback={() => { }}\n            onCloseButtonCallback={() => { restartStates() }}\n            bottomElements={\n                <>\n                    <MyModalButton\n                        style={{\n                            width: '8rem', height: '2.5rem'\n                        }}\n                        displayText=\"Sí\"\n                        onClickCallback={() => {\n                            fcn_BuildBase(true);\n                            setModalState(3);\n                            setModalText(\"Contactando con el servidor\")\n                        }}\n                    />\n                     <MyModalButton\n                        style={{\n                            width: '8rem', height: '2.5rem'\n                        }}\n                        displayText=\"No\"\n                        onClickCallback={() => {       \n                            setModalState(3);\n                            setModalText(\"Recuerde descargue el fichero de la base antes de reconstruir una base. \\n Link de descarga: \"+ ssModalText.split(\"Link:\")[1])\n                         }}\n                    />\n                </>\n            }\n        />\n        }\n    }\n\n\n\n    return (\n        <div\n            style={{\n                display: \"grid\",\n                gridTemplateColumns: \"18rem minmax(40rem, 50rem) 1fr\",\n                width: \"100%\",\n                height: \"calc(100% - 60px)\",\n                gap: '0.7rem',\n            }}\n        >\n            {renderModal()}\n            <div style={{ padding: \"0.7rem 0.7rem\" }}>\n                <MyCardHeader>ESTADO</MyCardHeader>\n                <MyCardHeader style={{ backgroundColor: colorDef.defMainThemeColor + \"44\", color: colorDef.defBlackColor2, borderTop: 0 }} > Mis Bases  </MyCardHeader>\n                <MyCardBody\n                    style={{\n                        backgroundColor: 'white',\n                        cursor: \"default\",\n                        padding: \"0\",\n                        border: 0,\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignContent: \"center\",\n                            alignItems: \"center\",\n                            borderRadius: \"0\",\n                            backgroundColor: colorDef.defSearchCardizqColor,\n                            padding: \"0 0.7rem\",\n                            height: \"100%\",\n                            fontSize: \"1.1rem\",\n                        }}>\n                        <FaSearch\n                            color={colorDef.defWhiteColor}\n                            size=\"1.7rem\"\n                        />\n                        <StyledInput\n                            value={ssBuscadorText}\n                            placeholder={\"Buscar\"}\n                            onChange={(e) => setBuscadorText(e.target.value)}\n                            type=\"text\"\n                            style={{\n                                border: 0,\n                                width: \"100%\",\n                                backgroundColor: \"transparent\",\n                                color: colorDef.defWhiteColor,\n                                padding: \"0.4rem 0.8rem\",\n                                borderRadius: colorDef.defBorderRadius\n                            }}\n                        />\n                        <FaTimesCircle\n                            color={colorDef.defWhiteColor}\n                            size=\"2rem\"\n                            onClick={() => setBuscadorText(\"\")}\n                            style={{\n                                visibility: ssBuscadorText === \"\" ? \"hidden\" : \"visible\",\n                                cursor: \"pointer\"\n                            }}\n                        />\n                    </div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 0 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 0 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(0)}\n                >\n                    <div> Total </div>\n                    <div>{getFiltredDB(1).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 2 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 2 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado === 2 ? 0 : 2)}\n                >\n                    <div> Estructura creada </div>\n                    <div>{getFiltredDB(2).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 3 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 3 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado === 3 ? 0 : 3)}\n                >\n                    <div> En construcción </div>\n                    <div>{getFiltredDB(3).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 4 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 4 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado === 4 ? 0 : 4)}\n                >\n                    <div> Descargando </div>\n                    <div>{getFiltredDB(4).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado >= 5 && ssFiltroSeleccionado <= 7 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado >= 5 && ssFiltroSeleccionado <= 7 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado >= 5 && ssFiltroSeleccionado <= 7 ? 0 : 5)}\n                >\n                    <div> Disponible </div>\n                    <div>{getFiltredDB(5).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 6 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 6 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado === 6 ? 5 : 6)}\n                >\n                    <div style={{ marginLeft: \"1rem\" }}> - Visible </div>\n                    <div>{getFiltredDB(6).length}</div>\n                </MyCardBody>\n                <MyCardBody\n                    style={{\n                        backgroundColor: ssFiltroSeleccionado === 7 ? colorDef.defSelectedCardizqColor : \"\",\n                        color: ssFiltroSeleccionado === 7 ? 'white' : \"\"\n                    }}\n                    onClick={() => setFiltroSeleccionado(ssFiltroSeleccionado === 7 ? 5 : 7)}\n                >\n                    <div style={{ marginLeft: \"1rem\" }}> - No visible </div>\n                    <div>{getFiltredDB(7).length}</div>\n                </MyCardBody>\n            </div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    maxWidth: \"50rem\",\n                    height: \"100%\",\n                    justifyItems: 'center',\n                    maxHeight: \"100%\",\n                    alignItems: 'center',\n                    paddingBottom: '1rem',\n                    paddingTop: '0.5rem',\n                    paddingRight: '0.3rem',\n                    gap: '1rem',\n                    overflowY: 'scroll'\n                }}\n            >\n                <CustomFieldset\n                    style={{\n                    }}\n                >\n                    <CustomLegend\n                        style={{\n\n                        }}\n                    >\n                        {props.catcheBase ? \"Base en memoria\" : \"Nueva base\"}\n                    </CustomLegend>\n                    {\n                        !props.isGetCacheBaseSuccess ?\n                            <span>Error contactando con el servidor</span>\n                            :\n                            props.catcheBase ?\n                                <InfoDBStructure\n                                    id={\"c0\"}\n                                    status={-2}\n                                    dbName={props.catcheBase.name[0] === \"0\" && props.catcheBase.name[1] === \";\" ? props.catcheBase.name.slice(2) : props.catcheBase.name}\n                                    dbDate={\"\"}\n                                    onClickDb={() => changePath(\"/databases/new\")}\n                                    buttons={<DatabaseRowR>\n                                        <DeactivableTooltipIcon\n                                            visible={true}\n                                            tooltipKey={\"currentBase\"}\n                                            tooltipText=\"Editar base\"\n                                            icon={<MdEdit size={\"60%\"} />}\n                                            backgroundColor={colorDef.defMainThemeColor}\n                                            onClickActivatedFunction={() => changePath(\"/databases/new\")}\n                                        />\n                                        <DeactivableTooltipIcon\n                                            visible={true}\n                                            tooltipKey={\"currentBase\"}\n                                            tooltipText=\"Eliminar base\"\n                                            icon={<FaTrash size={\"60%\"} />}\n                                            onClickActivatedFunction={props.onClickTrashCacheBase}\n                                        />\n                                    </DatabaseRowR>}\n                                />\n                                :\n                                <ButtonCrearteDB\n                                    style={{\n                                        backgroundColor: props.catcheBase !== undefined ? colorDef.defGrayLightColor : colorDef.defMainThemeColor,\n                                        boxShadow: defShadow,\n                                    }}\n                                    disabled={props.catcheBase !== undefined}\n                                    onClick={() => changePath(\"/databases/new\")}\n                                >\n                                    <span>Crear Base</span>\n                                </ButtonCrearteDB>\n                    }\n                </CustomFieldset>\n\n                <CustomFieldset\n                    style={{\n                        overflowY: \"scroll\",\n                        minHeight: '40%',\n                        height: \"100%\",\n                    }}\n                >\n                    <CustomLegend>\n                        {(ssFiltroSeleccionado > 0) &&\n                            <TooltipNAV title=\"Filtro: ACTIVO\" arrow>\n                                <IconFiltroActivo style={{}}\n                                    onClick={() => { setFiltroSeleccionado(0); setBuscadorText(\"\") }}\n                                >\n                                    <FaFilter size={\"1rem\"}\n                                        color={\"white\"}\n                                        style={{ paddingTop: \"2px\" }}\n                                    />\n                                </IconFiltroActivo>\n                            </TooltipNAV>\n                        }\n                        {(ssBuscadorText !== \"\") &&\n                            <TooltipNAV title=\"Busqueda de base: ACTIVO\" arrow>\n                                <IconFiltroActivo style={{}}\n                                    onClick={() => { setFiltroSeleccionado(0); setBuscadorText(\"\") }}\n                                >\n                                    <FaSearch size={\"0.9rem\"}\n                                        color={\"white\"}\n                                    />\n                                </IconFiltroActivo>\n                            </TooltipNAV>\n                        }\n                        Mis Bases\n                    </CustomLegend>\n\n                    {!props.isGetDatabaseSuccess ?\n                        <span>Error contactando con el servidor</span>\n                        :\n                        databasesToRender}\n\n                </CustomFieldset>\n            </div>\n            {ssShowBaseDetails &&\n                <div\n                    style={{\n                        color: colorDef.defBlackColor, boxShadow: defShadow, margin: \"0.5rem 0.5rem 0.5rem 0.5rem\",\n                    }}\n                >\n                    {ssBaseAllInfo && ssBaseAllInfo.base.length > 0 ?\n                        <div\n                            style={\n                                {\n                                    width: \"100%\", height: \"100%\",\n                                    boxShadow: defShadow,\n                                    padding: \"1rem\",\n                                    color: colorDef.defBlackColor,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    gap: '0.5rem'\n                                }}\n                            onClick={() => props.onClickDatabase(ssBaseAllInfo.id, ssBaseAllInfo.name)}\n                        >\n                            <div style={{ width: \"100%\", color: \"white\", backgroundColor: colorDef.defMainThemeColor, display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", padding: \"0.75rem\", borderRadius: \"0.3rem\" }}>\n                                <span style={{ fontWeight: \"bolder\" }}>{ssBaseAllInfo.name}</span>\n                                <span style={{ fontWeight: \"lighter\" }}>{new Date(ssBaseAllInfo.createdAt).toLocaleDateString()}</span>\n                            </div>\n                            <TreeView\n                                expanded={ssBaseAllInfo.base.filter((pck: cPackFE) => pck.linkTO === \"\").map((pckA) => pckA.idPack)}\n                            >\n                                {ssBaseAllInfo.base.filter((pck: cPackFE) => pck.linkTO === \"\").map((pck) => {\n                                    return <CustomTreeContainer\n                                        pack={pck}\n                                        filters={ssBaseAllInfo.base.filter((pckList) => pckList.linkTO === pck.idPack)}\n                                        setViewScreenCallback={(screenRef) => { }}\n                                        hideActions\n                                        preVisualization\n                                    />\n                                }\n                                )}\n                            </TreeView>\n                        </div>\n                        :\n                        <div style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            flexDirection: \"column\",\n                            fontSize: \"2rem\",\n                            gap: \"2rem\",\n                            padding: \"2rem\"\n                        }}>\n                            {ssBaseAllInfo ?\n                                <>\n                                    <FaBan size={\"8rem\"} color={colorDef.defRedColor} />\n                                    <span style={{ color: colorDef.defRedColor, }}>Base NO disponible</span>\n\n                                </>\n                                :\n                                <>\n                                    <FaDatabase size={\"8rem\"} color={colorDef.defBlackColor2} />\n                                    <span style={{ color: colorDef.defBlackColor2, }}>Previsualización</span>\n                                </>\n                            }\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\n\n/************************************************************************************** */\n// CARD DB\n/************************************************************************************** */\nconst CardDB = styled.div`\n    width: 100%;\n    /* display: grid; */\n    display: flex;\n    flex-direction: row;\n    /* grid-template-columns: 1fr 5rem 1fr; */\n    padding: 1rem 1.5rem;\n    border: 2px solid rgba(0, 0, 0, 0.15);\n    transition: 0.1s;    \n    animation-timing-function: ease-in-out;\n    justify-content:center;\n    justify-items:center;\n    align-items: center;\n    cursor: pointer;\n\n    gap: 1rem;\n\n    &:hover{\n        box-shadow: rgba(0, 0, 0, 0.6) 0 1px 10px;\n        transform: scale(1.01);\n        transition: 0.1s;\n        animation-timing-function: ease-in-out;\n        background-color: ${colorDef.defCardDBHoverColor}\n    }\n`\n\n\ninterface iPropsInfoDBstructure {\n    id: string;\n    status: number;\n    dbName: string;\n    dbDate: string;\n    onClickDb: () => void;\n    buttons: ReactElement;\n    selected?: boolean;\n}\nconst InfoDBStructure = (props: iPropsInfoDBstructure) => {\n\n    const getStatus = () => {\n        switch (props.status) {\n            case -2:\n                return { color: colorDef.defStatusCreandoEstruc, text: \"Definición de la base NO finalizada\" };\n            case 0:\n                return { color: colorDef.defStatusEstrucRdy, text: \"Creación de la estructura de la base finalizada\" };\n            case 1:\n                return { color: colorDef.defStatusRellenando, text: \"Constuyendo base...\" };\n            case 2:\n                return { color: colorDef.defStatusCreada, text: \"Base Disponible\" };\n            case 3:\n                return { color: colorDef.defStatusDescargando, text: \"Descargando...\" };\n            case 4:\n                return { color: colorDef.defStatusCreada, text: \"Base Disponible/Visible\" };\n            default:\n                return { color: colorDef.defStatusEstrucRdy, text: \"Error?\" };\n        }\n    }\n\n    const statusInfo = getStatus()\n    return <CardDB\n        key={props.id}\n        onClick={props.onClickDb}\n        style={{\n            color: colorDef.defMainThemeColor,\n            borderTop: props.id.split(';')[0].slice(1, undefined) === \"0\" ? \"\" : \"0\",\n            backgroundColor: props.selected ? colorDef.defCardDBHoverColor : \"\",\n        }}\n    >\n        <div style={{ display: \"grid\", gridTemplateColumns: \"2rem 1fr\", justifyContent: \"flex-start\", alignItems: \"center\", gap: \"0.5rem\", justifySelf: \"flex-start\" }}>\n            <TooltipNAV title={\"Estado: \" + statusInfo.text} arrow>\n                <div style={{ justifySelf: \"center\", }}>\n                    {\n                        props.status === 1 ?\n                            <UseAnimations animation={edit} autoplay={true} speed={0.5} loop={true} strokeColor={colorDef.defIconAnimations} size={30} />\n                            : props.status === 3 ?\n                                <UseAnimations animation={arrowDownCircle} autoplay={true} speed={0.5} loop={true} strokeColor={colorDef.defIconAnimations} size={30} />\n                                :\n                                props.status === 4 ?\n                                    <div style={{ display: \"flex\", borderRadius: \"50%\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: statusInfo.color, height: \"1.1rem\", width: \"1.1rem\" }}>\n                                        <FaEye size={\"70%\"} color={\"white\"} />\n                                    </div>\n                                    :\n                                    <FaCircle size={\"1.1rem\"} color={statusInfo.color} />\n                    }\n                </div>\n            </TooltipNAV >\n            <span style={{ justifySelf: \"flex-start\", fontWeight: 900, fontSize: \"1.3rem\", color: props.status === -2 ? colorDef.defBlackColor : \"\" }}>\n                {props.dbName}\n            </span>\n        </div>\n        <span style={{ marginLeft: \"auto\", fontWeight: \"lighter\", paddingRight:'1rem' }}>\n            {props.dbDate === \"\" ? \"\" : new Date(props.dbDate).toLocaleDateString()}\n        </span>\n        <div style={{ justifySelf: \"flex-end\" }}>\n            {props.buttons}\n        </div>\n    </CardDB>\n}\nexport default AvailableDatabases;\n\n\n\n","import React from 'react';\nimport './LogoClinic.css'\n\nfunction LogoClinic() {\n    return(\n        <div className=\"logo-container\">\n            <div className=\"upper\">\n                <h1>CLÍNIC</h1>\n            </div>\n            <div className=\"middle\">\n                <h2>BARCELONA</h2>\n            </div>\n            <div className=\"bottom\">\n             <span>Hospital Universitari</span>\n            </div>\n        </div>\n    )\n}\n\nexport default LogoClinic","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUser, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\n\n// MY COMPONENTS -  ELEMENTS\nimport LogoClinic from '../../zComponents/LogoClinic/LogoClinic';\nimport './LoginPage.css';\nimport '../../zComponents/LogoClinic/LogoClinic';\n// MODELS\n\n// SHARE\n\n// API\nimport { login } from '../../Services/api';\n\n//---------------------------------------------------------------------------------//\n\nenum LoginStatus {\n    initial,\n    loading,\n    succeded,\n    failed\n}\n\nfunction LoginPage() {\n    const history = useHistory();\n    const [loginStatus, setLoginStatus] = useState<LoginStatus>(LoginStatus.initial);\n    const [user, setUser] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const executeLogin = async () => {\n        setLoginStatus(LoginStatus.loading);\n        var response = await login(user, password);\n        if (response.success) {\n            setLoginStatus(LoginStatus.succeded);\n            localStorage.setItem('user', user);\n            localStorage.setItem('token', response.token);\n            history.push(\"/databases\");\n            \n        } else {\n            setLoginStatus(LoginStatus.failed);\n            setPassword('');\n        }\n    }\n\n    return (\n        <>\n            {\n                loginStatus === LoginStatus.failed ?\n                    <Alert key={0} variant='danger' style={{ margin: \"5px 10px\" }}>\n                        No se ha podido iniciar sesión, por favor compruebe que las credenciales son válidas y hay conexión a internet.\n                    </Alert>\n                    : null\n            }\n            <div className=\"login-container\">\n                <div className=\"login-card\">\n                    <div className=\"card-upper\">\n                        <LogoClinic></LogoClinic>\n                    </div>\n                    <form className=\"card-form\">\n                        <div className=\"form-field-container\">\n                            <div className=\"form-icon\"><FontAwesomeIcon className=\"icon\" icon={faUser} /></div>\n                            <div className=\"form-input\">\n                                <input type=\"text\" placeholder=\"Usuario\" value={user} onChange={(event) => setUser(event.target.value)} />\n                            </div>\n                            <div className=\"form-delete\"><FontAwesomeIcon className=\"icon-delete\" icon={faTimes} /></div>\n                        </div>\n                        <div className=\"form-field-container\">\n                            <div className=\"form-icon\"><FontAwesomeIcon className=\"icon\" icon={faLock} /></div>\n                            <div className=\"form-input\">\n                                <input type=\"password\" placeholder=\"Contraseña\" value={password} onChange={(event) => setPassword(event.target.value)} />\n                            </div>\n                            <div className=\"form-delete\"><FontAwesomeIcon className=\"icon-delete\" icon={faTimes} /></div>\n                        </div>\n                        <div className=\"form-field-footer\">\n                            <span className=\"link\">He olvidado la contraseña</span>\n                        </div>\n                    </form>\n                    <div className=\"card-button\">\n                        {\n                        loginStatus === LoginStatus.loading ?\n                            <Spinner animation=\"border\" role=\"status\" style={{ margin: \"auto auto\", color: \"rgb(20, 149, 131)\" }}>\n                                <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                            :\n                            <button className=\"buttonMe\" onClick={() => executeLogin()} style={{ width: \"300px\", height: \"60px\" }}>Acceder</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default LoginPage\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nimport { FaHome, FaPowerOff, FaUser} from \"react-icons/fa\"\n\n// MY COMPONENTS\nimport LogoClinic from \"./LogoClinic/LogoClinic\"\n\n//SHARE\nimport * as colorDef from \"../Shared/Colors\";\n\nconst Nav = styled.nav`\n    font-size: 1.5rem;\n    top: 0;\n`\n\nconst NavContainer = styled.div`\n    padding-right: 1rem;\n    padding-left: 0.5rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 60px;\n    background-color: ${colorDef.defMainThemeColor};\n`\n\nconst NavSpanSILD = styled.span`\n    text-align: center;\n    font-size: 2rem;\n    font-weight: 700;\n`\nconst NavSubContainer = styled.div`\n    display: flex;\n    gap:0.5rem;\n    justify-content: center;\n    justify-items: center;\n    align-items: center;\n    align-content: center;\n`\n\nconst NavSubContainerUser = styled.div`\n    display: flex;\n    gap:1rem;\n    justify-content: center;\n    justify-items: center;\n    align-items: center;\n    align-content: center;\n    color: ${colorDef.defMainThemeColor};\n    background-color: ${colorDef.defWhiteColor};\n    padding: 2px 1.1rem 2px 1rem;\n    border-radius: 5px ;\n    max-width: 200px;\n    margin-right: 0.5rem;\n`\n\nconst NavSpanUser = styled.span`\n    text-align: center;\n    /* padding-right:1rem ; */\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow:  ellipsis;\n`\n\nconst NavLinkSimple = styled(Link)`\n    cursor: pointer; \n    display: flex;\n    justify-content: flex-end;\n    justify-items: flex-end;\n    align-items: center;\n    align-content: center;\n`\n\nconst NavMyLink = styled(Link)`\n    cursor: pointer; \n    display: flex;\n    justify-content: center;\n    justify-items: center;\n    align-items: center;\n    align-content: center;\n    background-color: ${colorDef.defMainThemeColor};\n    color: ${colorDef.defWhiteColor};\n    height: 40px;\n    width: 40px;\n\n    &:hover{\n        /* opacity:0.7; */\n        background-color: ${colorDef.defWhiteColor};\n        color: ${colorDef.defMainThemeColor};\n        border-radius: 50%;\n    }\n`\n\n\nconst Navbar = () => {\n    return (\n        <Nav>\n            <NavContainer>\n                <NavLinkSimple to=\"/databases\" style={{transform: \"scale(0.65)\"}}>               \n                    <LogoClinic />\n                </NavLinkSimple>\n                <NavSpanSILD>SILD</NavSpanSILD>\n                <NavSubContainer>\n                    <NavSubContainerUser style={{gap:\"0.8rem\"}}>\n                        <FaUser size={\"1.2rem\"}/>\n                        <NavSpanUser>\n                            {localStorage.getItem('user')}\n                        </NavSpanUser> \n                    </NavSubContainerUser>\n                    <NavMyLink to=\"/databases\">\n                        <FaHome />\n                    </NavMyLink>                    \n                    <NavMyLink to=\"/\" onClick={() => {localStorage.removeItem(\"token\");localStorage.removeItem('user');}}>\n                        <FaPowerOff />\n                    </NavMyLink>    \n                </NavSubContainer>\n            </NavContainer>\n        </Nav>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\n// MY COMPONENTS -  ELEMENTS\nimport AvailableDatabases from './AvailableDatabases';\nimport  Navbar  from '../../zComponents/Navbar'\n\n// MODELS\n\n\n// SHARE\nimport { Loader, Row } from \"../../Shared/GlobalStyle\";\n\n// API\nimport { endA1_getBase,endA2_deleteBase, getDatabases,deletetDatabases, endDB5_deleteDatabasesAndDownload } from \"../../Services/api\"\n\n\nexport interface DatabaseData {\n    date: string\n    idDatabase: number\n    name: string\n    status: number\n}\n\n\n\nconst MainPage = () => {\n\n    const [databases, setDatabases] = useState<DatabaseData[]>()\n    const [ssCatcheBase, setCatcheBase] = useState<{name:string,date:string}>()\n    const [ssLoading, setLoading] = useState<boolean>(true)\n\n    const [ssGetDatabaseSuccess, setGetDatabaseSuccess]   = useState<boolean>(true)\n    const [ssGetCacheBaseSuccess, setGetCacheBaseSuccess] = useState<boolean>(true)\n\n    const history = useHistory();\n\n    async function loadData() {\n        setLoading(true);\n\n        let res = await getDatabases()   \n        if(res.success === 1 ){   \n            setDatabases(res.databases) ;    \n            setGetDatabaseSuccess(true);\n        }\n        else{\n            setGetDatabaseSuccess(false);\n        }\n   \n        let resBase =  await endA1_getBase();\n        if(resBase.success >= 0){\n            setGetCacheBaseSuccess(true);\n            if(resBase !== undefined && resBase.packs !== undefined){\n                setCatcheBase({name:resBase.baseName===\"\"?\"Sin Nombre\":resBase.baseName,date:resBase.createdAt===null?\"\":resBase.createdAt})\n            }\n            else setCatcheBase(undefined)\n        } \n        else{            \n            setGetCacheBaseSuccess(false);\n            console.log(\"resBase\",'here')\n        }        \n        setLoading(false);\n    }\n\n    async function deleteBase(idBase:string) {\n        // OPEN INFO SCREEN\n        let res = await deletetDatabases(idBase);\n        let res2 = await endDB5_deleteDatabasesAndDownload();\n        loadData();\n    }\n\n    async function deleteCurrentCacheBase() {\n        // OPEN INFO SCREEN\n        let temp = await endA2_deleteBase();\n        loadData();\n    }\n\n    async function onClickDatabase(databaseId: number, databaseName: string) {   \n        try {            \n            let aux = history.location.pathname.indexOf(\"databases/\" + databaseId)\n            if (aux === -1)\n                aux = history.location.pathname.indexOf(\"/databases/\")\n                if (aux === -1)\n                    history.push(\"databases/\" + databaseId)\n                else\n                    history.push(databaseId.toString())\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n\n    return (\n        <div\n            style={{\n                height: \"100vh\",\n                display: 'flex',\n                flexDirection:\"column\",\n\n            }}\n        >\n            <Navbar />           \n            {\n            ssLoading ?\n                <Row>\n                    <Loader />\n                </Row>\n                :\n                <AvailableDatabases databases={databases} \n                    catcheBase={ssCatcheBase}\n                    onClickDatabase={(id: number, name: string) => { onClickDatabase(id, name) }} \n                    onDeleteBase={deleteBase}\n                    onClickTrashCacheBase={()=>deleteCurrentCacheBase()}\n                    isGetDatabaseSuccess={ssGetDatabaseSuccess}\n                    isGetCacheBaseSuccess={ssGetCacheBaseSuccess}\n                />\n            }\n        </div>\n    )\n}\n\n\nexport default MainPage;","import React from 'react'\nimport {TooltipNAV} from '../../Elements/ElementStyledTooltip';\nimport { defMainThemeColor, } from '../../Shared/Colors'\n\ninterface Props {\n    hoverText:string,\n    name:string\n}\n\nfunction ElementText(props: Props) {\n    return  <TooltipNAV\n                title={props.name}\n                arrow={true}\n            >\n                <div style={{\n                    backgroundColor: \"white\",\n                    color: defMainThemeColor,\n                    border:\"2px solid \"+defMainThemeColor ,\n                    fontWeight: \"bold\",\n                    boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                    borderRadius: \"1.1rem\",\n                    fontSize: \"0.9em\",\n                    height: \"2.2rem\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                    display:\"flex\",\n                    justifyContent:\"center\",\n                    justifyItems:\"center\",\n                    alignContent:\"center\",\n                    alignItems:\"center\",\n                    cursor: 'default',\n                }}>\n                    <span style={{\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                        whiteSpace: \"nowrap\",\n                        padding:\"0 0.5rem\"\n                    }}>\n                        {props.name}\n                    </span>\n                </div>\n            </TooltipNAV>\n\n}\n\nexport default ElementText\n","import React from 'react'\nimport ElementText from \"./ElementDisplay/ElementText\"\n\ninterface Props {\n    output: [{ id: number, name: string }]\n    outputKey:string\n}\n\nfunction TileSelectionProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gap: \"0.7rem\",\n        }}>\n            {\n                props.output.map((outputObj) => {\n                    return <ElementText\n                        hoverText={outputObj.name}\n                        name={outputObj.name}\n                    />               \n                })\n            }\n        </div>\n    )\n}\n\nexport default TileSelectionProgressDisplayer\n","import React, { ReactElement } from 'react'\nimport { defBlackColor, defBorderRadius, defMainThemeColor} from '../../Shared/Colors'\nimport { TooltipNAV } from '../../Elements/ElementStyledTooltip';\n\nimport styled from 'styled-components'\n\nconst CustomFieldset = styled.fieldset`\n    border: 2px solid ${defMainThemeColor};\n    border-radius: ${defBorderRadius};\n    margin-bottom: 0.35rem;\n`\n\nconst CustomLegend = styled.legend`\n    color: ${defBlackColor};\n    font-weight: bold;\n    width: auto;\n    font-size:0.7rem;\n    padding:0rem 0.2rem;\n    text-align: right;\n    margin-right: 1.5rem;\n    margin-bottom: 0px;\n    max-width: 10rem;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow:  ellipsis;\n    cursor: default;\n    \n`\n\ninterface Props {\n    legendFontSize?:string;\n    legendText?: string\n    children: ReactElement\n}\n\n\nfunction ElementMyFieldset(props: Props) {\n    const getLegendText= ()=>{\n        return props.legendText?props.legendText:'unknown'\n    }\n   \n    return (     \n            <CustomFieldset\n                style={{\n                    marginBottom:props.legendFontSize?\"calc(\"+props.legendFontSize+\"/2)\":\"\",\n                    borderRadius:\"30rem\",\n                    boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                }}\n            >  \n                <TooltipNAV\n                    title={getLegendText()}\n                    arrow={true}\n                    placement={'top'}\n\n                >   \n                    <CustomLegend\n                        style={{\n                            fontSize:props.legendFontSize?props.legendFontSize:\"\",\n                        }}\n                        >{getLegendText()}\n                    </CustomLegend>\n                </TooltipNAV>\n                <div\n                    style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        color: defMainThemeColor,\n                        padding: \"0rem 0.8rem 0.5rem 0.5rem\",\n                        \n                    }}\n                >\n                        {props.children}\n                </div>\n               \n\n            </CustomFieldset> \n    )\n}\n\nexport default ElementMyFieldset\n","import React from 'react'\n\nimport ElementMyDisplayFieldset from './ElementDisplay/ElementMyDisplayFieldset'\n\ninterface iOutput {\n    id: number,\n    name: string,\n    realName?: string\n}\n\n\ninterface Props {\n    output: iOutput[]\n    outputKey: string\n}\n\nfunction InputStringProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns:  props.output.length===1? \"\":\"repeat(2, 1fr)\",\n            gap: \"0.5rem\"\n        }}>\n            {\n                props.output.map((outputObj) => {\n                    return (\n                        <ElementMyDisplayFieldset\n                            legendText={outputObj.realName!}\n                        >\n                            <span style={{\n                            }}>\n                                {outputObj.name ? outputObj.name : \"Sin assignación\"}\n                            </span>\n                        </ElementMyDisplayFieldset>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default InputStringProgressDisplayer\n","import React,{ReactElement} from 'react'\nimport { defWhiteColor, defMainThemeColor } from '../../Shared/Colors'\n\ninterface Props {\n    propsElem?:{justifyContent?:string}\n    children:ReactElement\n}\n\nfunction ElementText(props: Props) {\n    return  <div style={{\n                    backgroundColor: defWhiteColor,\n                    color: defMainThemeColor,\n                    border: \"2px solid \"+defMainThemeColor,\n                    padding: \"0.7rem 1.5rem\",\n                    boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                    borderRadius: \"1rem\",\n                    fontSize: \"0.9em\",\n                    width: \"100%\",\n                    justifyContent:props.propsElem?.justifyContent?props.propsElem?.justifyContent:\"center\",\n                    display:\"flex\"\n                }}>\n                    {props.children}\n            </div>\n\n\n}\n\nexport default ElementText\n","import React from 'react'\nimport ElementDescription from './ElementDisplay/ElementDescription'\n\n\ninterface Props {\n    output: [{ dateEND: string, dateINI: string, id: number, name: string }]\n    outputKey:string\n}\n\nfunction IntervalTimeSelectionProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            gap: \"0.7rem\"\n        }}>\n            {\n                props.output.map((outputObj) => {\n                    return (\n                        <ElementDescription>\n                        {\n                            outputObj.dateINI === \"undefined\" && outputObj.dateEND === \"undefined\" ? \n                            <span><b>Sin restricciones</b></span>\n                            : outputObj.dateINI !== \"undefined\" && outputObj.dateEND !== \"undefined\" ?\n                            <span >Desde <b>{outputObj.dateINI}</b> hasta <b>{outputObj.dateEND}</b></span>\n                            : outputObj.dateINI !== \"undefined\" ?\n                            <span>Desde <b>{outputObj.dateINI}</b></span>\n                            : <span>Hasta <b>{outputObj.dateEND}</b></span>\n                        }\n                        </ElementDescription>                       \n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default IntervalTimeSelectionProgressDisplayer\n","import React from 'react'\nimport { defWhiteColor } from '../Shared/Colors'\n\ninterface Props {\n    output: { id: number, name: string }[]\n    outputKey:string\n}\n\nfunction BooleanSelectionProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2,1fr)\",\n            gap: \"0.7rem\"\n        }}>\n            {\n                props.output.length === 0 ?\n                    <div style={{\n                        backgroundColor: defWhiteColor,\n                        color: \"#149583\",\n                        border: \"2px solid #149583\",\n                        padding: \"0.7rem\",\n                        boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                        borderRadius: \"1rem\",\n                        fontSize: \"0.8em\"\n                    }}>\n                        Sin selección\n                </div>\n                    : props.output.map((outputObj) => {\n                        return (\n                            <div style={{\n                                backgroundColor: defWhiteColor,\n                                color: \"#149583\",\n                                border: \"2px solid #149583\",\n                                padding: \"0.7rem\",\n                                boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                                borderRadius: \"1rem\",\n                                fontSize: \"0.8em\"\n                            }}>\n                                <b>{outputObj.name}</b>\n                            </div>\n                        )\n                    })\n            }\n        </div>)\n}\n\nexport default BooleanSelectionProgressDisplayer\n","import React from 'react'\nimport ElementDescription from './ElementDisplay/ElementDescription'\n\ninterface Props {\n    output: { id: number, name: string, varSelected: { id: string, name: string }[] }[]\n    outputKey: string\n}\n\nfunction MultiBooleanSelectionProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"0.7rem\"\n        }}>\n            {\n            props.output.length === 0 ?\n                <ElementDescription>\n                    <span>Sin selección</span>\n                </ElementDescription>\n                : \n                props.output.map((outputObj) => {\n                    return (\n                        <ElementDescription\n                            propsElem={{justifyContent:\"flex-start\"}}\n                        >\n                            <div style={{\n                                width: \"100%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                gap: \"0.3rem\"\n                            }}>\n                            <span style={{textAlign:\"left\", fontSize:\"1rem\"}}>\n                                <b>{outputObj.name}</b>\n                            </span>                            \n                                {outputObj.varSelected.map((varSelec) => <span style={{ color: \"#149583\",textAlign:\"left\"}}> &nbsp;&nbsp;- {varSelec.name}</span>)}\n                            \n                            </div>\n                        </ElementDescription>\n                    )\n                })                  \n            }\n        </div>)\n}\n\nexport default MultiBooleanSelectionProgressDisplayer\n","import React from 'react'\nimport ElementDescription from './ElementDisplay/ElementDescription'\n\ninterface Props {\n    output: [{ id: number, name: string, condition: string }]\n    outputKey:string\n}\n\nfunction ValueInsertProgressDisplayer(props: Props) {\n\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"wrap\",\n            gap: \"0.7rem\"\n        }}>           \n        {\n            props.output.map((outputObj) => {\n                return (\n                    <ElementDescription>\n                    {\n                        outputObj.condition.includes('>') && outputObj.condition.includes('<') ?\n                        <span>El valor de <b>{outputObj.name}</b> debe encontrarse <b>entre {outputObj.condition.replace(/;.*/, '').replace('>','')} y {outputObj.condition.replace(/.*;/, '').replace('<','')}</b></span>\n                        // ENTRE ___ y ____ \n                        :\n                        outputObj.condition.includes('!') && outputObj.condition.includes('=') ?\n                        <span>El valor de <b>{outputObj.name}</b> debe ser <b>diferente de {outputObj.condition.replace('!=', '')}</b></span>\n                        // DIFERENTE DE \n                        :\n                        outputObj.condition.includes('>') ?\n                        <span>El valor de <b>{outputObj.name}</b> debe ser <b>mayor o igual a {outputObj.condition.replace('>', '')}</b></span>\n                        // MAYOR O IGUAL\n                        :\n                        outputObj.condition.includes('<') ?\n                        <span>El valor de <b>{outputObj.name}</b> debe ser <b>menor o igual a {outputObj.condition.replace('<', '')}</b></span>\n                        // MENOR O IGUAL\n                        :\n                        outputObj.condition.includes('=') ?\n                        <span>El valor de <b>{outputObj.name}</b> debe ser <b>igual a {outputObj.condition.replace('=', '')}</b></span>\n                        // IGUAL A \n                        :\n                        <span>No se han aplicado restricciones al valor de <b>{outputObj.name}</b></span>\n                        // SIN RESTRICCIONES\n                    }\n                    </ElementDescription>                        \n                )\n            })\n        }\n        </div>\n    )\n}\n\nexport default ValueInsertProgressDisplayer\n","import React from 'react'\nimport { defMainThemeColor, defWhiteColor } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\n\n\ninterface Props {\n    output: [{ id: string, name: string, frec: number, ref: { id: string, name: string }, ini: { id: string, name: string, days: number }, fin: { id: string, name: string, days: number } }]\n    outputKey: string\n}\n\nexport default function VarIntervalSelectionProgressDisplayer(props: Props) {\n    function getTextDays(days:number){\n        if(days !== 0)\n        {\n            if(days > 0) return \" + \" +days +\" día/s\"\n            else return \" - \" + Math.abs(days) +\" día/s\"\n        }\n        return \"\" \n\n    }\n\n    function render() {\n        return props.output.map((out) => {\n            if (out.ini.id === out.fin.id && out.ini.days === out.fin.days) { // Día concreto\n                return <span>- Captación: el día <b>{out.ini.name+getTextDays(out.ini.days)}.</b></span>\n            }\n            else{                \n                return <span>- Captación periodo de <b>{out.ini.name+getTextDays(out.ini.days)}</b> a <b>{out.fin.name+getTextDays(out.fin.days)}</b> {out.frec === 0?\".\":(\"con una frecuencia de \"+out.frec+ \" día/s.\")}</span>\n            }\n        })\n    }\n\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"0.7rem\"\n        }}>\n            {}\n            {props.output.map((out) => {\n                return (\n                    <div style={{\n                        backgroundColor: defWhiteColor,\n                        color: \"#149583\",\n                        border: \"2px solid #149583\",\n                        boxShadow: defShadow,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignItems: \"flex-start\",\n                        borderRadius: \"1rem\",\n                        padding: \"0 1.5rem\"\n                    }}>\n                        <span style={{\n                            alignSelf: \"center\",\n                            padding: \"0.7rem 0\",\n                            fontSize: \"1.1em\",\n                            width: '100%',\n                            borderBottom:\"1px solid \"+defMainThemeColor,\n                        }}><b>{out.name}</b></span>\n                         <div style={{\n \n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"flex-start\",\n                            padding: \"0.85rem 0\",\n                            gap:\"0.4rem\",\n                            textAlign:\"left\",\n                        }}>\n                            {render()}                            \n                            <span>- Estudio realizado respecto a <b>{out.ref.name}.</b></span>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n","import React,{ReactElement} from 'react'\nimport { Accordion, AccordionDetails, AccordionSummary,  } from '@material-ui/core'\nimport { ExpandMore } from '@material-ui/icons'\nimport { defMainThemeColor, defWhiteColor,defBorderRadius ,defScrollBar} from '../../Shared/Colors'\nimport { defShadow } from '../../Shared/Shadows'\n\nimport styled from \"styled-components\"\n\nexport const ContainerDetails = styled.div`\n\n&::-webkit-scrollbar {\n        width: 0.35rem !important ; \n        display: flex;\n    }\n&::-webkit-scrollbar-thumb  {\n    background: ${defScrollBar}; \n    border:none ;\n    border-radius: 0.3rem;\n}\n&::-webkit-scrollbar-track {\n      margin-bottom: ${defBorderRadius};\n      margin-top: 0.5rem;\n    }  \n`\n\n\ninterface Props {\n    id:string;\n    summaryElement:ReactElement\n    detailElement:ReactElement[]\n    propsElem?:{numColumns?:number, backgroundColor?:string, unboundedMaxHeigh?:boolean }\n}\n\nfunction ElementAccordion(props: Props) {\n    return  <Accordion \n        id={props.id}     \n        style={{\n        borderRadius: \"1rem\",\n        backgroundColor: props.propsElem?.backgroundColor? props.propsElem.backgroundColor:defWhiteColor,\n        color: defMainThemeColor,\n        border: \"2px solid \"+ defMainThemeColor,\n        boxShadow: defShadow,\n        width:\"100%\",\n        \n    }}>\n        <AccordionSummary\n            expandIcon={<ExpandMore style={{ color: defMainThemeColor }} />}\n            aria-controls=\"panel1a-content\"\n            id={props.id}            \n            style={{maxHeight:\"3rem\", minHeight:\"0px\", textAlign:\"left\"}}  \n        >\n           {props.summaryElement}           \n        </AccordionSummary>\n        <AccordionDetails style={{\n             paddingTop: \"0px\",\n             paddingBottom:\"0px\" ,\n             paddingRight:\"5px\" ,\n             paddingLeft:\"5px\" ,\n            \n        }}>\n            <ContainerDetails style={{\n                    width: \"100%\",\n                    display: \"grid\",\n                    gridTemplateColumns: props.propsElem?.numColumns?\"repeat(\"+props.propsElem?.numColumns+\",\"+Math.round(100/props.propsElem?.numColumns)+\"%)\": \"repeat(2,50%)\",\n                    gap: \"0.5rem\",\n                    padding: \"1.3rem 0.5rem\",\n                    borderTop: '1px solid rgba(0, 0, 0, .125)',  \n                    justifyContent:\"center\",\n                    maxHeight: props.propsElem?.unboundedMaxHeigh?\"\":\"15rem\",   \n                    overflowY:\"auto\",         \n                    overflowX: \"hidden\",            \n                }}\n            >\n                {props.detailElement}\n            </ContainerDetails>\n            \n        </AccordionDetails>\n    </Accordion>\n\n}\n\nexport default ElementAccordion\n","// Mirar en cada nivel (boolean) + searchConditions para cada nivel\n// Si hay una searchCondition, usar la misma para todos los niveles\n// Que se puedan devolver objetos (completos) que cumplen la condición\n\nexport namespace NestedSearchMultipleConditions {\n\n    type NestedSearchResult = {\n        match: boolean,\n        children: Array<NestedSearchResult>\n    }\n\n    export function runNestedSearch(\n        object: any,\n        searchConditions: ((value: any) => boolean)[],\n        levelsFieldName: string[],\n        rawResultInterpretation?: (objectrawSearchResult: any) => any\n    ) {\n        let found = []\n        for (let obj of object) {\n            found.push(nestedSearch(obj, searchConditions, levelsFieldName, 0))\n        }\n        return rawResultInterpretation ? rawResultInterpretation(found) : found\n    }\n\n    function nestedSearch(\n        object: any,\n        searchConditions: ((value: any) => boolean)[],\n        levelsFieldName: string[],\n        nestingDepth: number\n    ): NestedSearchResult {\n        if (nestingDepth === levelsFieldName.length - 1) {\n            let currentFieldName = levelsFieldName[nestingDepth]\n            let name = object[currentFieldName] as string\n            return { match: searchConditions[nestingDepth](name), children: [] }\n        } else {\n            let match = searchConditions[nestingDepth](object)\n            let result: { match: boolean, children: Array<any> } = { match: false, children: [] }\n            if (match) result.match = true\n            let found = []\n            let iterableItems = object[levelsFieldName[nestingDepth]]\n            for (let obj of iterableItems) found.push(nestedSearch(obj, searchConditions, levelsFieldName, nestingDepth + 1))\n            result.children = found\n            return result\n        }\n    }\n\n   /*  export namespace ResultInterpretationFunctions {\n\n        export function filterObjectWithSearchResult(initialObject: any, searchResult: any, levelsFieldName: string[]) {\n            for (let [idx, obj] of (initialObject).entries()) {\n                filterObjectWithSearchResultRec(obj, searchResult[idx], 0, levelsFieldName)\n                if ((obj[levelsFieldName[0]] as Array<any>).length < 1) delete initialObject[idx]\n            }\n            initialObject = initialObject.filter((a: any) => a)\n        }\n\n        function filterObjectWithSearchResultRec(object: any, searchResults: any, nestingDepth: number, levelsFieldName: string[]) {\n            if (nestingDepth === levelsFieldName.length - 2) {\n                for (let [idx, result] of searchResults.entries()) {\n                    if (result !== true) delete object[levelsFieldName[nestingDepth]][idx]\n                }\n            } else {\n                let res: Array<any> = searchResults as Array<any>\n                let iterableItems = object[levelsFieldName[nestingDepth]]\n                for (let i = 0; i < iterableItems.length; i++) {\n                    filterObjectWithSearchResultRec(iterableItems[i], res[i], nestingDepth + 1, levelsFieldName)\n                    iterableItems[i][levelsFieldName[nestingDepth + 1]] = iterableItems[i][levelsFieldName[nestingDepth + 1]].filter((a: any) => a)\n                    if ((iterableItems[i][levelsFieldName[nestingDepth + 1]] as Array<any>).length < 1) delete iterableItems[i]\n                }\n                object[levelsFieldName[nestingDepth]] = iterableItems.filter((a: any) => a)\n            }\n        }\n\n        export function compactResults(results: NestedSearchResult[]) {\n            return results.map((res) => compactResultsRec(res))\n        }\n\n        function compactResultsRec(result: NestedSearchResult) {\n            if (result.children.length == 0) {\n                return result.match\n            } else {\n                result.children.map((c) => compactResultsRec(c))\n                if (result.children.some((c) => c.match)) {\n                    // result.children.forEach((c) => c.match = true)\n                    result.match = true\n                }\n            }\n        }\n    } */\n\n    export function filterOutput(\n        object: any,\n        searchResult: NestedSearchResult[],\n        childenName: string,\n    ) \n    {\n        var outputFil:any[] = []\n        searchResult.forEach((el,idx)=>{\n            if (el.match)\n            {\n                outputFil.push({...object[idx]})\n            }\n            else\n            {\n                if (object[idx][childenName] !== undefined)\n                {\n                    const chidrenElements = filterOutput([...object[idx][childenName]],[...el.children],childenName)\n                    if (chidrenElements.length > 0)\n                    {\n                        const newOutput = {...object[idx]}\n                        newOutput[childenName] = [...chidrenElements]\n                        outputFil.push(newOutput)\n                    }\n                }                                    \n            }\n        })\n\n        return [...outputFil];\n\n    }\n}","import { green } from '@material-ui/core/colors'\nimport React, { useState } from 'react'\nimport { FaSearch, FaTimesCircle } from 'react-icons/fa'\nimport { defBlackColor, defBorderRadius, defMainThemeColor, defWhiteColor } from '../Shared/Colors'\nimport styled from 'styled-components'\n\n\ninterface Props {\n    onChange: (text: string) => void\n}\n\nexport default function ElementSearchBoxV2(props: Props) {\n    const [text, setText] = useState<string>(\"\")\n\n    const onChange = (newText: string) => {\n            props.onChange(newText)\n            setText(newText)\n    }\n\n    return (\n        <div style={{\n            height: \"3rem\",\n            display: \"flex\",\n            gap: \"1rem\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }}>\n            <FaSearch\n                color={defBlackColor}\n                size=\"1.2rem\"\n            />\n\n            {/* <StyledInput\n                value={text}\n                placeholder = {\"Buscar\"}\n                onChange={(e) => onChange(e.target.value)}\n                type=\"text\"\n                style={{\n                    border: 0,\n                    width: \"100%\",\n                    backgroundColor: defMainThemeColor,\n                    color: defWhiteColor,\n                    padding: \"0.4rem 0.8rem\",\n                    borderRadius: defBorderRadius\n                }}\n            />                        \n            <FaTimesCircle\n                color={\"red\"} \n                size=\"2rem\"                 \n                onClick={()=>onChange(\"\")}\n                style={{visibility:text===\"\"?\"hidden\":\"visible\"}}\n            /> */}\n            <div\n            style={{\n                display: \"flex\",\n                alignContent:\"center\",\n                alignItems:\"center\",\n                borderRadius: defBorderRadius,\n                backgroundColor: defMainThemeColor,\n                paddingRight:\"0.5rem\",\n            }}>\n            <StyledInput\n                value={text}\n                placeholder = {\"Buscar\"}\n                onChange={(e) => onChange(e.target.value)}\n                type=\"text\"\n                style={{\n                    border: 0,\n                    width: \"100%\",\n                    backgroundColor: defMainThemeColor,\n                    color: defWhiteColor,\n                    padding: \"0.4rem 0.8rem\",\n                    borderRadius: defBorderRadius\n                }}\n            />                        \n            <FaTimesCircle\n                color={defWhiteColor} \n                size=\"2rem\"                 \n                onClick={()=>onChange(\"\")}\n                style={{visibility:text===\"\"?\"hidden\":\"visible\", \n                        cursor:\"pointer\"}}\n            />\n            </div>\n             \n\n\n\n           \n        </div>\n    )\n}\n\n\n\nconst StyledInput = styled.input`\n  ::placeholder {\n        color: lightgray,\n  }\n  ::-webkit-input-placeholder {\n    color: lightgray;\n  }\n  :-ms-input-placeholder {\n     color: lightgray;\n  }\n`\n","import React, { useRef, useState } from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport ElementAccordion from './ElementDisplay/ElementAccordion'\nimport ElementText from './ElementDisplay/ElementText'\n\n//SHARE\nimport { defMainThemeColor, defWhiteColor, defCDGreenColorAlpha } from '../Shared/Colors'\nimport { NestedSearchMultipleConditions } from '../Shared/NestedSearchMultipleConditions'\nimport { FilterDrama } from '@material-ui/icons'\nimport ElementTextField from '../Elements/ElementTextField'\nimport ElementSearchBoxV2 from '../Elements/ElementSearchBoxV2'\n\n\ninterface outputStruc {\n    id: string,\n    name: string, \n    varSelected: [{ id: string, name: string, max: number, varSelected: [{ id: string, name: string, max: number }] }] \n}\n\ninterface Props {\n    output: outputStruc[]\n    outputKey: string\n}\n\ninterface SearchResultProps {\n    match:boolean;\n    children:SearchResultProps[]\n}\n\nexport default function GroupMultiTileSelectProgressDisplayer(props: Props) {\n\n    const searchStr = useRef<string>(\"\")\n    const [searchResult, setSearchResult] = useState<SearchResultProps[]>([])\n\n    function performSearch() {\n        NestedSearchMultipleConditions.runNestedSearch(\n            props.output,\n            [\n                (value) => {\n                    let aux = value.name as string\n                    return aux.toLowerCase().includes(searchStr.current.toLowerCase())\n                    // return aux.includes(searchStr.current.toLowerCase()) || aux.includes(searchStr.current.toUpperCase())\n                },\n                (value) => {\n                    let aux = value.name as string\n                    return aux.toLowerCase().includes(searchStr.current.toLowerCase())\n                    // return aux.includes(searchStr.current.toLowerCase()) || aux.includes(searchStr.current.toUpperCase())\n                },\n                (value) => { // Should get the last object\n                    let aux = value as string\n                    return aux.toLowerCase().includes(searchStr.current.toLowerCase())\n                    // return aux.includes(searchStr.current.toLowerCase()) || aux.includes(searchStr.current.toUpperCase())\n                }\n            ],\n            [\"varSelected\", \"varSelected\", \"name\"],\n            (res) => {\n                // NestedSearchMultipleConditions.ResultInterpretationFunctions.compactResults(res)\n                // NestedSearchMultipleConditions.ResultInterpretationFunctions.compactResults(res)\n                // console.log('resAAA',res) \n                // Aqui puedes ver como queda el resultado, por favor úsalo para la renderización del componente\n                console.log(\"Resultado NestedSearch - \", res)\n                setSearchResult(res) // Queda guardado aquí\n            }\n        )\n    }\n\n    const renderOutput = () => {\n        const outputFiltred:outputStruc[] = searchResult.length ===0?[...props.output]:NestedSearchMultipleConditions.filterOutput([...props.output],[...searchResult],\"varSelected\")\n        \n        return (\n            <>\n            {\n            outputFiltred.map((out, idx) => {\n                return (\n                    <ElementAccordion\n                        id={out.name+idx.toString()}\n                        propsElem={{ numColumns: 1, backgroundColor: defCDGreenColorAlpha, unboundedMaxHeigh: true }}\n                        summaryElement={<Typography style={{ fontWeight: \"bold\" }}>{out.name}</Typography>}\n                        detailElement={\n                            out.varSelected.map((varSel, idx2) => {\n                                    return (\n                                        <ElementAccordion\n                                            id={varSel.name+idx2.toString()}\n                                            summaryElement={\n                                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\", height: \"100%\", alignItems: \"center\", gap: \"0.5rem\" }}>\n                                                    <Typography style={{\n                                                        fontWeight: \"bold\",\n                                                        textAlign: \"left\",\n                                                    }}>\n                                                        {varSel.name}\n                                                    </Typography>\n                                                    {varSel.varSelected.length === varSel.max ?\n                                                        <div style={{ backgroundColor: defMainThemeColor, borderRadius: \"1rem\", minWidth: \"4.5rem\", height: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                                            <span style={{ color: defWhiteColor, fontSize: \"0.9em\" }}>Todo</span>\n                                                        </div>\n                                                        : null}\n\n                                                </div>\n                                            }\n                                            detailElement={\n                                                varSel.varSelected.map((inVarSel) => {\n                                                    return (\n                                                        <ElementText\n                                                            name={inVarSel.name}\n                                                            hoverText={inVarSel.name}\n                                                        />\n                                                    )\n                                                })\n                                            }\n                                        />\n                                    )\n                            })\n                        }\n                    />\n                )\n            })}\n            </>\n            )\n    }\n\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"wrap\",\n            gap: \"0.7rem\"\n        }}>\n            <ElementSearchBoxV2 onChange={(txt) => {\n                searchStr.current = txt\n                performSearch()\n            }} />\n            {renderOutput()}\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport { Typography } from '@material-ui/core'\nimport ElementAccordion from './ElementDisplay/ElementAccordion'\n\nimport { defMainThemeColor, defWhiteColor } from '../Shared/Colors'\nimport ElementText from './ElementDisplay/ElementText'\n\ninterface Props {\n    output: [{ id: string, name: string, max: number, varSelected: [{ id: string, name: string }] }]\n    outputKey: string\n}\n\nexport default function MultiTileSelectProgressDisplayer(props: Props) {\n    return (\n        <div style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"wrap\",\n            gap: \"0.7rem\"\n        }}>\n            {\n            props.output.map((out, idx) => {\n                return (<ElementAccordion\n                    id ={idx.toString()}                    \n                    summaryElement={\n                        <div style={{display:\"flex\", justifyContent:\"space-between\", width:\"100%\",height:\"100%\",alignItems:\"center\"}}>\n                            <Typography style={{\n                                fontWeight: \"bold\"\n                            }}>\n                                {out.name}\n                            </Typography>\n                            {out.varSelected.length === out.max ?\n                                <div style={{ backgroundColor: defMainThemeColor, borderRadius: \"1rem\",  width: \"5rem\", height: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    <span style={{ color: defWhiteColor, fontSize: \"0.9em\" }}>Todo</span>\n                                </div>\n                                : null}\n                        \n                        </div>\n                    }\n                    detailElement={\n                        out.varSelected.map((varSel, idx) => {\n                            return (\n                                <ElementText\n                                    name= {varSel.name}\n                                    hoverText ={varSel.name}\n                                    />\n                            )\n                        })\n                    }\n\n                />\n                )\n            })}\n        </div>\n    )\n}\n","import React from 'react'\nimport styled from \"styled-components\"\n\n// MY COMPONENTS\nimport TileSelectionProgressDisplayer from './TileSelectionProgressDisplayer'\nimport InputStringProgressDisplayer from './InputStringProgressDisplayer'\nimport IntervalTimeSelectionProgressDisplayer from './IntervalTimeSelectionProgressDisplayer'\nimport BooleanSelectionProgressDisplayer from './BooleanSelectionProgressDisplayer'\nimport MultiBooleanSelectionProgressDisplayer from './MultiBooleanSelectionProgressDisplayer'\nimport ValueInsertProgressDisplayer from './ValueInsertProgressDisplayer'\nimport VarIntervalSelectionProgressDisplayer from './VarIntervalSelectionProgressDisplayer'\nimport GroupMultiTileSelectProgressDisplayer from './GroupMultiTileSelectProgressDisplayer'\nimport MultiTileSelectProgressDisplayer from './MultiTileSelectProgressDisplayer'\n\n// MODELS\nimport { SchemaProgressOutput} from '../Models/cPackFE'\n\n//SHARE\nimport { defScrollBar,defBorderRadius } from '../Shared/Colors'\n\n\nconst ContainerVisualizacion = styled.div`\n    overflow-y: auto;\n    height: 100%;\n    padding: 0.5rem;\n    overflow-y: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    gap:1.5rem;\n\n    &::-webkit-scrollbar {\n        width: 0.35rem !important ; \n        display: flex;\n    }\n    &::-webkit-scrollbar-thumb  {\n        background: ${defScrollBar}; \n        border:none ;\n        border-radius: 0.3rem;\n    }\n    &::-webkit-scrollbar-track {\n        margin-bottom: ${defBorderRadius};\n        margin-top: 0.5rem;\n    }  \n`\n\ninterface Props {\n    progressOutput: SchemaProgressOutput[]\n}\n\nfunction RenderProgress(props: Props) {    \n    const progOuts = props.progressOutput;\n\n    return <ContainerVisualizacion>\n        {progOuts.map((progOut) => {\n        if (progOuts.values != null ) {\n            switch (progOut.componentType) {\n                case 'InfoScreen':\n                    return null\n                case \"TileSelection\":\n                    console.log(\"TileSelection\")\n                    return (\n                        <TileSelectionProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"InputString\":\n                    console.log(\"InputString\")\n                    return (\n                        <InputStringProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"IntervalTimeSelection\":\n                    console.log(\"IntervalTimeSelection\")\n                    return (\n                        <IntervalTimeSelectionProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"BooleanSelection\":\n                    console.log(\"BooleanSelection\")\n                    return (\n                        <BooleanSelectionProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"MultiBooleanSelection\":\n                    console.log(\"MultiBooleanSelection\")\n                    return (\n                        <MultiBooleanSelectionProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"ValueInsert\":\n                    console.log(\"ValueInsert\")\n                    return (\n                        <ValueInsertProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"VarIntervalSelection\":\n                    console.log(\"VarIntervalSelection\")\n                    return(\n                        <VarIntervalSelectionProgressDisplayer\n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"MultiTileSelect\":\n                    console.log(\"MultiTileSelect\")\n                    return(\n                        <MultiTileSelectProgressDisplayer \n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )\n                case \"GroupMultiTileSelect\":\n                    console.log(\"GroupMultiTileSelect\")\n                    return(\n                        <GroupMultiTileSelectProgressDisplayer \n                            output={progOut.values}\n                            outputKey={progOut.outputKey}\n                        />\n                    )               \n\n                default:\n                    return (<span>Esta zona sigue en desarrollo</span>)\n            }\n        }\n    })\n    }\n    </ContainerVisualizacion>\n}\n\nexport default RenderProgress\n","import React from \"react\"\n\n// MY COMPONENTS\nimport RenderProgress from '../ComponentsProgressDisplayers/RenderProgressScreenOutputs'\n\n// MODELS\nimport { SchemaProgressScreen } from \"../Models/cPackFE\"\n\n//SHARE\nimport { defBlackColor } from \"../Shared/Colors\"\n\n\nexport default function renderSelectedScreen(screenToShow: SchemaProgressScreen, componentIdxToShow?: number) {\n    if (screenToShow && componentIdxToShow && screenToShow.outputs[componentIdxToShow]) {\n        return <RenderProgress\n                progressOutput={[screenToShow.outputs[componentIdxToShow]]}\n            /> \n    } \n    else if (screenToShow) {\n        if (screenToShow.outputs.length > 0) {\n            return  <RenderProgress\n                progressOutput={[screenToShow.outputs[0]]}\n            /> \n        } else {\n            return (\n                <div style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    color: defBlackColor\n                }}>\n                    <span>\n                        Esta pantalla no tiene salidas que mostrar\n                    </span>\n                </div>\n            )\n        }\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { TreeView } from '@material-ui/lab'\nimport styled from 'styled-components'\n\n// MY COMPONENTS -  ELEMENTS\nimport { CustomTreeContainer } from '../../zComponents/CustomTree'\nimport renderSelectedScreen from '../../zComponents/RenderScreenToShow'\nimport Navbar from '../../zComponents/Navbar'\n\n// MODELS\nimport { MyModal, MyModalButton, MyModalIcon } from \"../../zComponents/MyModal\"\nimport { cPackFE } from '../../Models/cPackFE'\n\n// SHARE\nimport { Loader } from '../../Shared/GlobalStyle'\nimport { defBlackColor, defGrayColor, defMainThemeColor, defWhiteColor } from '../../Shared/Colors'\nimport { defScrollBar } from '../../Shared/Colors'\nimport { defShadow } from '../../Shared/Shadows'\n\n// API\nimport { endD2_getDatabase, endD3_loadBaseInServerCache } from '../../Services/api'\n\n\n\nconst ScrollDiv = styled.div`\n    overflow-y: scroll;\n    height: 100%;\n    &::-webkit-scrollbar {\n        width: 0.35rem !important ; \n        display: flex;\n        padding-bottom: 5rem;\n    }\n    &::-webkit-scrollbar-thumb  {\n        background: ${defScrollBar}; \n        border:none ;\n        border-radius: 0.3rem;\n    }\n`\n\n\n\nexport default function SeeDatabasePage2() {\n\n    const history = useHistory();\n    const [ssBaseName, setBaseName] = useState<string>(\"\")\n    const [ssBaseStatus, setBaseStatus] = useState<number>(-1)\n    const [ssBaseCreatedAt, setBaseCreatedAt] = useState<string>(\"\")\n    const [ssBase, setBase] = useState<cPackFE[]>([])\n    const [ssScreenToShowRef, setScreenToShowRef] = useState<{ idPack: string, idScreen: string, idxComp: number }>() // {idPack, idScreen, idComp}\n    const [ssModalState, setModalState] = useState<number>(0)\n\n    useEffect(() => {\n        let aux = history.location.pathname.split('/')\n        let databaseID = aux[aux.length - 1]\n        endD2_getDatabase(databaseID).then((res) => {\n            if (res.success <= -1) setModalState(2);\n            else {\n                const database = res.data;\n                setBase(database.packs)\n                setBaseName(database.baseName)\n                setBaseCreatedAt(database.createdAt)\n                setBaseStatus(database.status)\n            }\n        })\n    }, [])\n\n    function isBaseEditable() {\n        if (ssBaseStatus === 0 || ssBaseStatus === 2 || ssBaseStatus === 4) return true\n        return false;\n    }\n\n    function renderRightSide() {\n        return (\n            <TreeView >\n                {ssBase.filter((pck: cPackFE) => pck.linkTO === \"\").map((pck) => {\n                    return <CustomTreeContainer\n                        pack={pck}\n                        filters={ssBase.filter((pckList) => pckList.linkTO === pck.idPack)}\n                        setViewScreenCallback={(screenRef) => { setScreenToShowRef(screenRef) }}\n                        hideActions\n                    />\n                }\n                )}\n            </TreeView>\n        )\n    }\n    function renderRighVisualizacionSeeDataBase() {\n        if (ssScreenToShowRef) {\n            const scrnToRender = ssBase?.find((pck: cPackFE) => pck.idPack === ssScreenToShowRef.idPack)?.screens.find((scn) => scn.screenId === ssScreenToShowRef.idScreen);\n            if (scrnToRender) return (\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"0.5rem\",\n                    height: '100%',\n                }}>\n                    <span style={{\n                        width: \"100%\",\n                        backgroundColor: defMainThemeColor,\n                        color: defWhiteColor,\n                        fontSize: \"1.8em\",\n                        borderRadius: \"0.4rem\",\n                        padding: \"0.4rem\"\n                    }}>{scrnToRender.screenTitle}</span>\n                    {renderSelectedScreen(scrnToRender, ssScreenToShowRef.idxComp === -1 ? undefined : ssScreenToShowRef.idxComp)}\n                </div>\n            )\n        }\n        return null\n    }\n\n\n    async function goToEditMode() {\n        let aux = history.location.pathname.split('/')\n        let databaseName = aux[aux.length - 1]\n        endD3_loadBaseInServerCache(databaseName).then((response) => {\n            if (response.success === 1) history.push(\"/databases/edit/\" + databaseName)\n            else setModalState(1)\n        })\n    }\n\n    function renderModal() {\n        if (ssModalState > 0) {\n            if (ssModalState === 1) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>Elimine la \"Base en desarrollo\" para poder editar una nueva base</span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                bottomElements={\n                    <MyModalButton\n                        style={{\n                            width: '8rem', height: '2.5rem'\n                        }}\n                        displayText=\"Cerrar\"\n                        onClickCallback={() => { setModalState(0) }}\n                    />\n                }\n            />\n            if (ssModalState === 2) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\" }}>ERROR. No se ha podido cargar la base. Póngase en contacto con los desarrolladores</span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                bottomElements={\n                    <MyModalButton\n                        style={{\n                            width: '8rem', height: '2.5rem'\n                        }}\n                        displayText=\"Cerrar\"\n                        onClickCallback={() => {\n                            history.push(\"/databases\")\n                        }}\n                    />\n                }\n            />\n        }\n    }\n\n    return (\n        <div>\n            {renderModal()}\n            <Navbar />\n            {\n                ssBase && ssBase.length > 0 ?\n                    <div style={{\n                        width: \"100%\",\n                        height: \"calc(100vh - 60px)\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        padding: \"1rem\",\n                        gap: \"1.5rem\"\n                    }}>\n                        <div style={{\n                            width: \"35%\",\n                            height: \"100%\",\n                            borderRadius: \"1rem\",\n                            boxShadow: defShadow,\n                            padding: \"1rem\",\n                            color: defBlackColor,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: '0.5rem',\n                        }}>\n                            <div style={{ width: \"100%\", color: \"white\", backgroundColor: defMainThemeColor, display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", padding: \"0.75rem\", borderRadius: \"0.3rem\" }}>\n                                <span style={{ fontWeight: \"bolder\" }}>{ssBaseName}</span>\n                                <span style={{ fontWeight: \"lighter\" }}>{new Date(ssBaseCreatedAt).toLocaleDateString()}</span>\n                            </div>\n                            <ScrollDiv>\n                                {renderRightSide()}\n                            </ScrollDiv>\n                            <button style={{\n                                width: \"50%\",\n                                height: \"3rem\",\n                                borderRadius: \"1rem\",\n                                backgroundColor: !isBaseEditable() ? defGrayColor : defMainThemeColor,\n                                color: defWhiteColor,\n                                border: 0,\n                                boxShadow: defShadow,\n                                alignSelf: 'center'\n\n                            }}\n                                disabled={!isBaseEditable()}\n                                onClick={goToEditMode}\n                            >\n                                <span>Editar base</span>\n                            </button>\n                        </div>\n                        <div style={{\n                            width: \"calc(100% - 35%)\",\n                            height: \"100%\",\n                            borderRadius: \"1rem\",\n                            boxShadow: defShadow,\n                            padding: \"1rem\"\n                        }}>\n                            {\n                                ssScreenToShowRef ?\n                                    renderRighVisualizacionSeeDataBase()\n                                    :\n                                    <div style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"center\",\n                                        color: defBlackColor\n                                    }}>\n                                        <span>\n                                            Esta zona mostrará el contenido al hacer click en una pantalla final en la parte izquierda.\n                                        </span>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                    :\n                    <div style={{\n                        width: \"100%\",\n                        height: \"calc(100vh - 60px)\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                    }}>\n                        <Loader style={{\n                            width: \"7rem\",\n                            height: \"7rem\"\n                        }} />\n                    </div>\n            }\n        </div >\n    )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { BiRename } from 'react-icons/bi'\nimport {FaExclamationCircle} from 'react-icons/fa/'\n\n// MY COMPONENTS -  ELEMENTS\nimport { TooltipNAV } from '../../Elements/ElementStyledTooltip'\n\n// MODELS\n\n// SHARE\nimport * as sharedColors from '../../Shared/Colors'\n\n// API\n\n\n\n\nconst MyDivRename = styled.div` \nbackground-color: ${sharedColors.defCreateBaseNombreBaseButtonBackground}; \npadding: 0.2rem 0.5rem;\nborder-radius: 0.25rem;\ndisplay: flex;\nalign-items:center;\njustify-content: space-between;\ngap: 1rem;\n/* margin: 0 1rem; */\nmargin-bottom: 0.3rem;\nfont-size:1.2rem;\nborder: 1px solid lightgray;\nbackground-color:${sharedColors.defInfoBackground};\n\n&:hover{\n\n}\n`\nconst IconContainer = styled.div`\ncursor: pointer;\nwidth: 1.5rem;\nheight: 1.5rem;\nborder-radius: 50%;\nbackground-color: ${sharedColors.defMainThemeColor};\ncolor:${sharedColors.defWhiteColor};\ndisplay: flex;\nalign-items: center;\nalign-content: center;\njustify-content: center;\njustify-items: center;\n&:hover{\n    transform:scale(1.1);\n}\n`\n\n\ninterface Props {\n    baseName: string\n    onClickRename(): void\n}\n\nfunction CompRenameBase(props:Props) {\n    const ssBaseName = props.baseName;\n    const getRealBaseName = ()=>{\n        if(ssBaseName !== \"\" && ssBaseName[0] === \"0\" && ssBaseName[1] === \";\"){\n\n            return ssBaseName.slice(2);\n        }\n        return ssBaseName\n    }\n    return (\n        <TooltipNAV \n            title={\"Nombre de la base\"}\n            arrow\n            placement={'top'}\n            >\n        <MyDivRename style={{}}>\n            {\n                ssBaseName ?\n                    <span style={{ color: sharedColors.defCreateBaseNombreBaseButton, marginLeft:\"0.3rem\"  }}><b>{\"BASE: \"}</b> {getRealBaseName()}</span> \n                    :\n                    <div style= {{display:\"flex\" ,gap:\"0.7rem\", alignItems:\"center\"}}>\n                        <FaExclamationCircle style={{ color: sharedColors.defRedColor,  }} size={\"1.2rem\"}/>\n                        <span style={{ color: sharedColors.defCreateBaseNombreBaseButton }}>Defina un nombre para la base de datos</span>\n                    </div>\n            }\n            <IconContainer\n                onClick={props.onClickRename}\n            >\n                <BiRename size={\"70%\"}/>\n            </IconContainer>\n        </MyDivRename>\n        </TooltipNAV>\n    )\n}\n\nexport default CompRenameBase\n","import { Folder, Group } from \"./DataStructure\"\n\nexport enum GroupFilteringType {\n    Master,\n    Associated,\n    Filter\n}\n\nexport class VizGroup {\n    public readonly name: string\n    public readonly id: number\n    public readonly canBeMaster: boolean\n    public readonly canBeAssociated: boolean\n    public readonly canBeFilter: boolean\n\n    private active: boolean\n\n    constructor(name: string, id: number, canBeMaster: boolean, canBeAssociated: boolean, canBeFilter: boolean) {\n        this.active = true\n        this.name = name\n        this.id = id\n        this.canBeMaster = canBeMaster\n        this.canBeAssociated = canBeAssociated\n        this.canBeFilter = canBeFilter\n    }\n\n    public deactivate() { \n        // console.log(\"NewStructure - Group Deactivated\"); \n        this.active = false }\n    public reactivate() { this.active = true }\n    public isActive(): boolean { return this.active }\n}\n\nexport abstract class VizFolder {\n    public readonly isFather: boolean\n    public readonly isChild: boolean\n    public readonly name: string\n    public readonly id: number\n    \n    private selected: boolean\n    private active: boolean\n\n    constructor(name: string, id: number, isFather: boolean, isChild: boolean) {\n        this.selected = false\n        this.active = true\n        this.name = name\n        this.id = id\n        this.isFather = isFather\n        this.isChild = isChild\n    }\n\n    public deactivate() { this.active = false}\n    public reactivate() { this.active = true }\n    public select() { this.selected = true }\n    public deselect() { this.selected = false }\n    public isActive(): boolean { return this.active }\n    public isSelected(): boolean { return this.selected }\n}\nexport class NonLeafVizFolder extends VizFolder {\n    public readonly children: LeafVizFolder[]\n\n    constructor(name: string, id: number, children: LeafVizFolder[]) {\n        super(name, id, true, false)\n        this.children = children\n    }\n\n    public deselect() {\n        super.deselect()\n        for (let childFolder of this.children) childFolder.deselect()\n    }\n    public reactivate() {\n        super.reactivate()\n        for (let childFolder of this.children) childFolder.reactivate()\n    }\n}\nexport class LeafVizFolder extends VizFolder {\n    public readonly groups: VizGroup[]\n\n    constructor(name: string, id: number, groups: Group[], isChild: boolean) {\n        super(name, id, false, isChild)\n        this.groups = groups.map((group) => new VizGroup(group.name, group.id, group.canBeMaster, group.canBeAssociated, group.canBeFilter))\n    }\n    \n    public getActiveGroups(): VizGroup[] { return this.groups.filter((group) => group.isActive()) }\n    public filterGroupsByType(keepType: GroupFilteringType) {\n        switch (keepType) {\n            case GroupFilteringType.Master:\n                for (let group of this.groups) if (!group.canBeMaster) group.deactivate()\n            break\n            case GroupFilteringType.Associated:\n                for (let group of this.groups) if (!group.canBeAssociated) group.deactivate()\n            break\n            case GroupFilteringType.Filter:\n                for (let group of this.groups) if (!group.canBeFilter) group.deactivate()\n            break\n        }\n        if (this.getActiveGroups().length < 1) this.deactivate()\n    } \n    public reactivate() {\n        super.reactivate()\n        for (let group of this.groups) group.reactivate()\n    }\n}\n\nexport class VizFoldersStructure {\n    public folders: VizFolder[]\n\n    constructor(rawFolders: Folder[]) {\n        const getChildrenOfFatherFolder = (searchId: number): LeafVizFolder[] => {\n            let aux: LeafVizFolder[] = []\n            for (let f of rawFolders) if (f.father && f.father === searchId) aux.push(\n                new LeafVizFolder(\n                    f.name,\n                    f.id,\n                    f.groups,\n                    true\n                )\n            )\n            return aux\n        } \n\n        this.folders = []\n        for (let i=0; i < rawFolders.length; i++) {\n            let rawFolder = rawFolders[i]\n            let vizFolder: VizFolder\n\n            let children = getChildrenOfFatherFolder(rawFolder.id)\n            if (rawFolder.father === 0 && children.length !== 0) {\n                vizFolder = new NonLeafVizFolder(\n                    rawFolder.name,\n                    rawFolder.id,\n                    children\n                )\n                this.folders.push(vizFolder)\n            } else if (rawFolder.father === 0) {\n                vizFolder = new LeafVizFolder(\n                    rawFolder.name,\n                    rawFolder.id,\n                    rawFolder.groups,\n                    false\n                )\n                this.folders.push(vizFolder)\n            }\n        }\n    }\n\n    public getActiveFolders(): VizFolder[] {\n        let aux: VizFolder[] = []\n        for (let folder of this.folders) {\n            if (folder instanceof LeafVizFolder && folder.isActive() && !folder.isChild) aux.push(folder)\n            else if (folder instanceof NonLeafVizFolder) {\n                let push = false\n                for (let childFolder of folder.children) if (childFolder.isActive()) push = true\n                if (push) aux.push(folder)\n            }\n        }\n        return aux\n    }\n    public filterFoldersByType(keepType: GroupFilteringType) {\n        for (let folder of this.folders) {\n            folder.reactivate()\n            if (folder instanceof LeafVizFolder) folder.filterGroupsByType(keepType)\n            else if (folder instanceof NonLeafVizFolder) {\n                for (let childFolder of folder.children) childFolder.filterGroupsByType(keepType)\n            }\n        }\n\n        // for (let folder of this.folders) {\n        //     if (folder instanceof LeafVizFolder) for (let group of folder.groups) console.log (\"NewStructure - \", group.name, group.isActive())\n        //     else if (folder instanceof NonLeafVizFolder) {\n        //         for (let childFolder of folder.children) for (let group of childFolder.groups) console.log(\"NewStructure - \", group.name, group.isActive())\n        //     }\n        // }\n    }\n    public resetFiltering() {\n        for (let folder of this.folders) {\n            if (folder instanceof LeafVizFolder) folder.reactivate()\n            else if (folder instanceof NonLeafVizFolder) {\n                folder.reactivate()\n                for (let childFolder of folder.children) childFolder.reactivate()\n            }\n        }\n    }\n    public selectFolder(id: number) {\n        for (let folder of this.folders) {\n            if (folder instanceof NonLeafVizFolder) {\n                folder.deselect()\n                let selectFather = false\n                for (let childFolder of folder.children) {\n                    if (childFolder.id === id) {\n                        childFolder.select()\n                        selectFather = true\n                    }\n                }\n                if (selectFather) folder.select()\n            } else if (folder instanceof LeafVizFolder) {\n                folder.deselect()\n                if (folder.id === id) folder.select()\n            }\n        }\n    }\n    public getSelectedFolder(): LeafVizFolder | undefined {\n        let selectedFolder: LeafVizFolder | undefined = undefined\n        for (let folder of this.folders) {\n            if (folder.isSelected()) {\n                if (folder instanceof LeafVizFolder) {\n                    selectedFolder = folder\n                } else if (folder instanceof NonLeafVizFolder) {\n                    for (let childFolder of folder.children) {\n                        if (childFolder.isSelected()) selectedFolder = childFolder\n                    }\n                }\n            }\n        }\n        return selectedFolder\n    }\n    public getParentFolder(childId: number): NonLeafVizFolder | undefined {\n        let aux = this.folders.filter((folder) => folder instanceof NonLeafVizFolder)\n        for (let parentFolder of aux) {\n            let folder = parentFolder as NonLeafVizFolder\n            for (let children of folder.children) if (children.id === childId) return folder\n        }\n    }\n} ","import React from 'react'\nimport styled from 'styled-components'\nimport { IoMdFolder, IoMdFolderOpen } from 'react-icons/io'\n\n// MODELS\nimport { LeafVizFolder, NonLeafVizFolder, VizFolder } from '../../Models/CreateDatabaseVizStructures'\n\n// SHARE\nimport * as colorDef from '../../Shared/Colors'\n\nconst FoldersContainer = styled.div`\n    width: 20rem;\n    height: 100%;\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    display: flex;\n    flex-direction: column;\n    overflow-y: scroll;\n    padding-top: 0.3rem;\n`\ninterface Activable {\n    active: boolean;\n}\nconst FolderButton = styled.div<Activable>`\n    gap: 0.7rem;\n    height: 40px;\n    display: grid;\n    grid-template-columns: 1.5rem 1fr;\n    align-items: center;\n    justify-items: start;\n    padding: 0rem 0.5rem;\n    white-space: nowrap;\n    background-color: ${(props) => props.active? colorDef.defFolderButton: \"white\"};\n    color: ${(props) => props.active ? \"white\" : \"black\"};\n    border-radius: 0.3rem;\n    font-size: 1em;\n    margin: 0.3rem 0.7rem;\n    cursor: pointer;\n    transition: all ease-in 0.15s;\n    &:hover{\n        background-color: ${(props: Activable) => props.active ? colorDef.defFolderButton : colorDef.defFolderButtonHover};\n        color: white;\n    }\n`\n\nconst SubFolderButton = styled.div<Activable>`\n    gap: 0.7rem;\n    height: 30px;\n    display: grid;\n    grid-template-columns: 1.5rem 1fr;\n    align-items: center;\n    justify-items: start;\n    padding-left: 2rem;\n    white-space: nowrap;\n    background-color: ${(props) => props.active ? colorDef.defFolderButton : \"white\"};\n    color: ${(props) => props.active ? \"white\" : \"black\"};\n    border-radius: 0.3rem;\n    font-size: 0.8em;\n    margin: 0.3rem 0.7rem;\n    cursor: pointer;\n    transition: all ease-in 0.15s;\n    &:hover{\n        background-color: ${(props: Activable) => props.active ? colorDef.defFolderButton : colorDef.defFolderButtonHover};\n        color: white;\n    }\n`\n\n\ninterface Props {\n    folders: Array<VizFolder>\n    onSelectFolder(folderId: number): void\n    miniView?: boolean;\n}\n\nfunction FoldersPicker(props: Props) {\n\n    const renderFolderButtons = () => {\n        return props.folders.map((vizFolder) => {\n            if (vizFolder instanceof LeafVizFolder) {\n                return (\n                    <FolderButton active={vizFolder.isSelected()} onClick={() => props.onSelectFolder(vizFolder.id)}>\n                        {vizFolder.isSelected() ? <IoMdFolderOpen size={\"1.3em\"}/> : <IoMdFolder size={\"1.3em\"}/>}\n                        {vizFolder.name}\n                    </FolderButton>\n                )\n            } else if (vizFolder instanceof NonLeafVizFolder) {\n                let folder = vizFolder as NonLeafVizFolder\n                return (\n                    <>\n                        <FolderButton active={folder.isSelected()}>\n                            {folder.isSelected() ? <IoMdFolderOpen size={\"1.3em\"}/> : <IoMdFolder size={\"1.3em\"}/>}\n                            {folder.name}\n                        </FolderButton>\n                        {folder.children.map((childFolder) => {\n                            return (\n                                <SubFolderButton active={childFolder.isSelected()} onClick={() => props.onSelectFolder(childFolder.id)}>\n                                    {childFolder.isSelected() ? <IoMdFolderOpen size={\"1.3em\"}/> : <IoMdFolder size={\"1.3em\"}/>}\n                                    {childFolder.name}\n                                </SubFolderButton>\n                            )\n                        })}\n                    </>\n                )\n            }\n        })\n    }\n\n    return (\n        <FoldersContainer style={{width:props.miniView?\"100%\":\"\"}}>\n            {renderFolderButtons()}\n        </FoldersContainer>\n    )\n}\n\nexport default FoldersPicker\n","import { Modal } from '@material-ui/core'\nimport React, { ReactElement, useRef, useState } from 'react'\nimport styled from \"styled-components\"\nimport { FaSearch, FaCheck } from 'react-icons/fa'\nimport { GrFormClose } from \"react-icons/gr\"\n\n// MY COMPONENTS -  ELEMENTS\nimport { ElementBagdeTreeItem } from '../../Elements/ElementBagdeTreeItem'\n\n// MODELS\nimport { GroupMode } from '../../Models/cPackFE'\n\n// SHARE\nimport { Loader } from '../../Shared/GlobalStyle'\nimport * as colorDef from '../../Shared/Colors'\n\n// API\nimport { endpVAR2_searchFolderGroupVar } from '../../Services/api'\nimport { render } from '@testing-library/react'\nimport { MyModal, MyModalButton, MyModalIcon } from '../../zComponents/MyModal'\n\n\n// STYLES\nconst InsideModalContainer = styled.div`\n    width: calc(100vw - 6rem);\n    /* max-height: 10rem; */\n    max-height: calc(100vh - 18rem);\n    /* overflow-y: scroll; */\n    border-radius: 1rem;\n    background-color: white;\n    /* margin: auto; */\n    /* margin-top: 1rem; */\n    display: flex;\n    flex-direction: column;\n    padding: 0.5rem 1rem 0rem 1rem;\n    gap:1.2rem;\n    /* padding: 1rem; */\n`\nconst SearchInputContainer = styled.div`\n    width: 100%;\n    border-radius: 1rem;\n    border: 2px solid ${colorDef.defMainThemeColor};\n    border-right: 0;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    height: 2rem;\n\n`\n\nconst SearchInput = styled.input`\n    border: 0;\n    color: ${colorDef.defMainThemeColor};\n    border: 2px solid ${colorDef.defMainThemeColor};\n    width: 100%;\n    border-radius: 1rem;\n    padding: 0rem 0rem 0rem 1rem;\n    ::placeholder {\n        color: ${colorDef.defMainThemeColor + \"77\"};\n    }\n    /* margin:0.2rem; */\n`\nconst PerformSearchButton = styled.button`\n    height: 100%;\n    margin: 0;\n    width: 10rem;\n    background-color: ${colorDef.defMainThemeColor};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* border: solid 1px  ${colorDef.defMainThemeColor}; */\n    /* border-right: 0; */\n    /* border-radius: 0rem 1rem 1rem 0rem; */\n    /* gap: 0.5rem; */\n    border: 0;\n    border-radius: 1rem;\n    &:hover{\n        transform:scale(1.03);\n    }\n`\n\nconst ResultsContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    overflow-y: scroll;\n\n`\nconst ResultsTable = styled.table`\n    /* margin-top: 1rem; */\n    /* border: solid 1px  ${colorDef.defMainThemeColor}; */\n    border-top:0;\n    width: 100%;\n    position: relative;\n    border-collapse: collapse;     \n    thead{\n        position: sticky;\n        z-index: 999;\n        /* background-color:  \"black\"; */\n    }\n\n`\nconst TableHeader = styled.th`\n    font-weight: bold;\n    color: white;\n    background-color:  ${colorDef.defMainThemeColor};\n    position: sticky;\n    top: 1px; \n    text-align:center;\n    vertical-align: middle;\n`\n\ninterface canBeShadowed {\n    shadowed: boolean\n}\nconst TableElement = styled.td<canBeShadowed>`\n    /* cursor: pointer; */\n    background-color: ${p => p.shadowed ? colorDef.defMainThemeColor + \"33\" : \"white\"};\n    /* color: ${p => p.shadowed ? \"white\" : \"rgb(20, 149, 131)\"}; */\n    color: ${p => p.shadowed ? \"black\" : \"black\"};\n    padding: 0.5rem;\n`\n\n// --------------------------------------------------------\ninterface SearchResult {\n    idCarpeta: number,\n    idGroup: number,\n    idVariable: number,\n    nameCarpeta: string,\n    nameGroup: string,\n    nameVar: string,\n    canBe: string\n}\nenum SearchState {\n    Inintial,\n    Searching,\n    Results,\n    NoResults,\n    Error\n}\n\ninterface Props {\n    open: boolean\n    onClose: () => void\n}\n\nexport default function SearchResultModal(props: Props) {\n    const currentSeatchStr = useRef<string>(\"\")\n    const [showPerformSearchButton, setShowPerformSearchButton] = useState<boolean>(false)\n    const [searchResults, setSearchResults] = useState<SearchResult[] | undefined>(undefined)\n    const [searchState, setSearchState] = useState<SearchState>(SearchState.Inintial)\n\n    function onChangeSearchString(event: React.ChangeEvent<HTMLInputElement>) {\n        let newValue = event.target.value\n        currentSeatchStr.current = newValue\n        if (showPerformSearchButton && (!newValue || newValue === \"\")) setShowPerformSearchButton(false)\n        else if (!showPerformSearchButton) setShowPerformSearchButton(true)\n    }\n\n    async function performSearch() {\n        console.log(\"Se ha realizado una busqueda!\")\n        setSearchState(SearchState.Searching)\n        let searchStr = currentSeatchStr.current\n        let res = await endpVAR2_searchFolderGroupVar(searchStr)\n        if (res && res.success === 1) {\n            let searchRes: SearchResult[] = res.sections\n            if (searchRes.length > 0) setSearchState(SearchState.Results)\n            else setSearchState(SearchState.NoResults)\n            setSearchResults(searchRes)\n        } else {\n            setSearchResults(undefined)\n            setSearchState(SearchState.Error)\n        }\n    }\n\n    function renderVariableTypeViz(canBe: string) {\n        let booleanCanBe = [Boolean(Number(canBe[0])), Boolean(Number(canBe[1])), Boolean(Number(canBe[2]))]\n        let elements: ReactElement[] = booleanCanBe.map((possible, idx) => {\n            return (\n                <ElementBagdeTreeItem\n                    type={idx == 0 ? GroupMode.Master : idx == 1 ? GroupMode.Associated : GroupMode.Filter} size={\"1.2rem\"}\n                    desaturate={!possible}\n                />\n            )\n        })\n\n        return <div style={{\n            width: \"5rem\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            gap: \"0.5rem\"\n        }}>\n            {elements}\n        </div>\n    }\n\n\n    const renderTable = () => {\n        return (\n            <>\n                {\n                    searchResults ?\n                        searchResults.length > 0 ?\n                            <ResultsContainer>\n                                <ResultsTable>\n                                    <thead>\n                                        <tr style={{ height: \"3rem\", fontSize: \"1.2rem\"}}>\n                                            <TableHeader >Carpeta</TableHeader>\n                                            <TableHeader>Grupo</TableHeader>\n                                            <TableHeader>Variable</TableHeader>\n                                            <TableHeader>Tipo</TableHeader>\n                                        </tr>\n                                    </thead>\n                                    {\n                                        searchResults.map((res, idx) => {\n                                            let shadowed = idx % 2 !== 0\n                                            return (\n                                                <tr \n                                                    // style={{borderLeft: \"solid 1px \"  + colorDef.defMainThemeColor,borderRight: \"solid 1px \"  + colorDef.defMainThemeColor,}}\n                                                >\n                                                    <TableElement shadowed={shadowed}>\n                                                        {res.nameCarpeta}\n                                                    </TableElement>\n                                                    <TableElement shadowed={shadowed}>\n                                                        {res.nameGroup}\n                                                    </TableElement>\n                                                    <TableElement shadowed={shadowed}>\n                                                        {res.nameVar}\n                                                    </TableElement>\n                                                    <TableElement shadowed={shadowed}>\n                                                        {renderVariableTypeViz(res.canBe)}\n                                                    </TableElement>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </ResultsTable>\n                            </ResultsContainer>\n                            : null\n                        : <span style={{ color: \"black\" }}> Error contactando con el servidor </span>\n                }\n            </>\n        )\n    }\n\n    function stateRenderSwitch(state: SearchState) {\n        switch (state) {\n            case SearchState.Inintial:\n                return (\n                    <span style={{ color: colorDef.defBlackColor }}>Realize una búsqueda.</span>\n                )\n            case SearchState.Searching:\n                return (\n                    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}><Loader /></div>\n                )\n            case SearchState.Error:\n                return (\n                    <span style={{ color: colorDef.defBlackColor }}>Se ha producido un error por parte del servidor al intentar realizar la búsqueda.</span>\n                )\n            case SearchState.NoResults:\n                return (\n                    <span style={{ color: colorDef.defBlackColor }}>No se han obtenido resultados para su búsqueda.</span>\n                )\n            case SearchState.Results:\n                return (\n                    renderTable()\n                )\n        }\n    }\n    console.log(\"Current State: \", searchState)\n\n    return (\n        props.open ?\n        <MyModal\n        icon={MyModalIcon.Alert}\n            showOverEverything\n            style={{\n                width: \"calc(100vw - 4rem)\"\n            }}\n            titleText=\"Buscador Carpetas/Grupos/Variables\"\n            removeAltert\n            middleElements={\n            <InsideModalContainer>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    gap: \"0.7rem\",\n                    height: \"2rem\",\n                    // margin: \"0.5rem\"\n                }}>\n                    <FaSearch color={colorDef.defMainThemeColor} />\n                    {/* <SearchInputContainer> */}\n                    <SearchInput type=\"text\" placeholder=\"Introduzca su búsqueda\" onChange={onChangeSearchString} onKeyDown={(event) => event.key === \"Enter\" ? performSearch() : null} />                     \n                    <PerformSearchButton onClick={performSearch}\n                        disabled={!showPerformSearchButton}\n                        style={{backgroundColor:!showPerformSearchButton?\"gray\":\"\"}}\n                    >\n                        Buscar\n                        {/* <FaCheck size={\"0.8em\"} /> */}\n                    </PerformSearchButton> \n                        \n                        \n                    {/* <GrFormClose color=\"balck\" size=\"1.6em\" style={{ cursor: \"pointer\" }} onClick={props.onClose} /> */}\n                </div>\n                {stateRenderSwitch(searchState)}\n            </InsideModalContainer>}\n            bottomElements={\n                <MyModalButton\n                    style={{\n                        width: \"10rem\",\n                        color: colorDef.defCreateBaseSalirSinGuardarButton,\n                        textColor: colorDef.defWhiteColor\n                    }}\n                    displayText=\"Cerrar buscador\"\n                    onClickCallback={props.onClose}\n                />\n            }\n        /> : null\n    )\n}\n\n{/* <Modal open={props.open}>\n            <InsideModalContainer>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    gap: \"0.5rem\",\n                    margin: \"0.5rem\"\n                }}>\n                    <FaSearch color={colorDef.defMainThemeColor} />\n                    <SearchInputContainer>\n                        <SearchInput type=\"text\" placeholder=\"Introduzca su búsqueda\" onChange={onChangeSearchString} onKeyDown={(event) => event.key === \"Enter\" ? performSearch() : null} />\n                        {\n                            showPerformSearchButton ?\n                                <PerformSearchButton onClick={performSearch}>\n                                    Realizar busqueda\n                                    <FaCheck size={\"0.8em\"} />\n                                </PerformSearchButton> :\n                                null\n                        }\n                    </SearchInputContainer>\n                    <GrFormClose color=\"balck\" size=\"1.6em\" style={{ cursor: \"pointer\" }} onClick={props.onClose} />\n                </div>\n                { stateRenderSwitch(searchState) }\n            </InsideModalContainer>\n        </Modal> */}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FaFolder, FaExchangeAlt, FaSearch, FaEraser } from 'react-icons/fa'\n\n// MY COMPONENTS -  ELEMENTS\nimport { TooltipNAV } from \"../../Elements/ElementStyledTooltip\";\n\n// MODELS\nimport { LeafVizFolder, NonLeafVizFolder, VizFolder } from '../../Models/CreateDatabaseVizStructures'\nimport {  FolderSimp, GroupSimp } from '../../Models/DataStructure'\n\n// SHARE\nimport * as colorDef from '../../Shared/Colors'\n\n// API\n\nconst ChangeFolderButton = styled.button`\n    width: 70%;\n    min-height: 40px;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    border: 1px solid ${colorDef.defMainThemeColor};\n    border-radius: 2rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 0.5rem;\n    padding: 0rem 1rem;\n`\n\nconst SearchBoxContainer = styled.div`\n    width: 30%;\n    min-width: 10rem;\n    min-height: 40px;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    border-radius: 2rem;\n    border: 1px solid ${colorDef.defMainThemeColor};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0rem 1rem;\n    gap: 0.5rem;\n`\n\nconst SearchBoxInput = styled.input`\n    width: 100%;\n    border: 0;\n    margin: 0;\n    color: ${colorDef.defMainThemeColor};\n`\n\nconst TilesContainer = styled.div`\n    width: 100%;\n    /* height: calc(100% - 40px); */\n    /* height: 100%;  */\n    padding: 1rem;\n    display: grid;\n    grid-column-gap: 1rem;\n    grid-row-gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(10rem, 10rem));\n    overflow-y: scroll;\n    justify-content: center;\n`\nconst VariableTile = styled.button`\n    width: 100%;\n    height: 7rem;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    border: 1px solid ${colorDef.defMainThemeColor};\n    border-radius: 1rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    flex-direction: row;\n    padding: 0.3rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 300ms ease-in;\n    word-break: break-word;\n    &:hover{\n        background-color: ${colorDef.defMainThemeColor};\n        color: white;\n    }\n`\nconst VariableTileText = styled.p`\n    /* font-size: 0.85em; */\n    // white-space: nowrap;\n    // overflow: hidden;\n    // text-overflow: ellipsis;\n    margin: 0;\n`\n\nexport interface SearchReturnValue {\n    idCarpeta: number\n    idGroup: number\n    idVariable: number\n    nameCarpeta: string\n    nameGroup: string\n    nameVar: string\n}\n\ninterface Props {\n    onShowFolderSelector: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n    folder: LeafVizFolder\n    parentFolder?: NonLeafVizFolder\n    onSelectGroup: (folder: FolderSimp, group: GroupSimp) => void\n}\n\nexport default function SelectNewVariableDisplayer(props: Props) {\n\n    const [groupFilteringStr, setGroupFilteringStr] = useState<string | undefined>()\n\n    function shortenDisplayName(original: string, maxChars: number = 35): string {\n        let finalStr = original\n        if (original.length > maxChars) {\n            finalStr = finalStr.slice(0, maxChars).trimEnd();\n            finalStr += '...'\n        }\n        return finalStr\n    }\n\n    function cleanSearch() {\n        let searchInput = document.getElementById(\"selectNewVariableSearchBox\") as HTMLInputElement\n        searchInput.value = \"\"\n        setGroupFilteringStr(undefined)\n    }\n\n    function callSearch() {\n        let searchInput = document.getElementById(\"selectNewVariableSearchBox\") as HTMLInputElement\n        let searchText = searchInput.value\n        if (searchText && searchText.length > 0) setGroupFilteringStr(searchText)\n        else setGroupFilteringStr(undefined)\n    }\n\n    return (\n        <>\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                padding: \"0.5rem 0.75rem\",\n                gap: \"0.5rem\"\n            }}>\n                <ChangeFolderButton\n                    onClick={(event) => props.onShowFolderSelector(event)}\n                >\n                    <FaFolder />\n                    {\n                        props.parentFolder ?\n                            props.folder.name + \" (\" + props.parentFolder.name + \")\"\n                            :\n                            props.folder.name\n                    }\n                    <FaExchangeAlt style={{ marginLeft: \"auto\" }} />\n                </ChangeFolderButton>\n                <SearchBoxContainer>\n                    <FaSearch />\n                    <SearchBoxInput id=\"selectNewVariableSearchBox\" onChange={callSearch}/>\n                    <FaEraser onClick={cleanSearch} />\n                </SearchBoxContainer>\n            </div>\n            <TilesContainer>\n            {\n            props.folder.getActiveGroups().map((group) => {\n                return(\n                groupFilteringStr ? \n                    group.name.toLowerCase().includes(groupFilteringStr.toLowerCase()) ?\n                    <TooltipNAV title={group.name} arrow>\n                        <VariableTile onClick={() => props.onSelectGroup(props.folder, group)}>\n                            <VariableTileText>{shortenDisplayName(group.name)}</VariableTileText>\n                        </VariableTile>\n                    </TooltipNAV>\n                    : \n                    null\n                : \n                <TooltipNAV title={group.name} arrow>\n                    <VariableTile onClick={() => props.onSelectGroup(props.folder, group)}>\n                        <VariableTileText>{shortenDisplayName(group.name)}</VariableTileText>\n                    </VariableTile>\n                </TooltipNAV>\n                ) \n            })\n            }\n            </TilesContainer>\n        </>\n    )\n}\n","import React, {  useState } from 'react'\nimport { defBorderRadius, defMainThemeColor } from '../Shared/Colors'\nimport styled from 'styled-components'\n\ninterface Props {\n    text: string;\n    defaultInput: string;\n    inputType?: string | null\n    width?: string \n    height?: string\n\n    // canBeEmpty?: boolean\n    onChange: (number: string, valid:boolean) => void\n}\n\ninterface TextFieldProps {\n    valid:boolean\n}\n\n\nconst TextFieldCustom = styled.input<TextFieldProps>`\n    border: ${({valid}) => (valid  ? \"2px solid\" + defMainThemeColor : \"2px solid red\")};\n    color: ${defMainThemeColor};\n    padding: ${\"0.3rem 0.8rem\"};\n    border-radius: ${defBorderRadius};\n    width: ${({width}) => (width === undefined ? \"unset\" : width)};\n    height: ${({height}) => (height === undefined ? \"unset\" : height)};\n\n`;\n\n\nexport default function ElementTextInput(props:Props) {\n    \n    // const [valid, setValid] = useState<boolean>(props.canBeEmpty ? true: false);\n    let regex:RegExp;\n\n    switch(props.inputType){\n        case 'float':\n            regex = /^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$/\n            break\n\n        case 'alphabetic':\n            regex = /^[A-Za-z]+$/\n            break\n\n        case 'alphanumeric':\n            regex = /^[a-zA-Z0-9]*$/\n            break\n        \n        case 'int':\n            regex = /^[-+]?\\d+$/\n            break\n\n        default:\n            regex = /.*/\n    }\n\n    const [text, setText] = useState<string>(props.defaultInput)\n    const [valid, setValid] = useState<boolean>(regex.test(props.defaultInput));\n\n    // if (props.canBeEmpty) {\n    //     regex = RegExp(regex.source + /$/.source);\n    // }\n\n    const onChange = (newText: string) => {\n        let newValid = regex.test(newText)\n        props.onChange(newText, newValid)\n        setValid(newValid)\n        setText(newText)\n    }\n\n\n    return (\n        <div style={{display:'flex',gap:'10px',\n                justifyContent: 'center',\n                justifyItems: 'center',\n                alignItems: 'center',\n                }}>\n            <span style={{color:'black',minWidth:\"3rem\",textAlign:\"right\"}}>{props.text}</span> \n            <TextFieldCustom\n                valid={valid} \n                width={props.width} \n                height={props.height}\n                type='text' \n                value={text} \n                onChange={(e)=>onChange(e.target.value)} \n            />\n        </div>\n    )\n}","import React from 'react'\nimport { defMainThemeColor } from '../Shared/Colors'\n\ninterface Props {\n    text: string\n}\n\nfunction ElementTitleC(props: Props) {\n    const {} = props\n\n    return (\n        <div style={{\n            display: \"flex\",\n                width:'100%',\n                alignItems: \"center\",\n                alignContent:'center',\n                justifyContent:'center',\n                justifyItems:'center',\n                backgroundColor:defMainThemeColor,\n                padding:'0.5rem 0'\n        }}>\n            <span style={{fontSize:'1.2rem',color:'white'}}><b>{props.text}</b></span>            \n        </div>\n    )\n}\n\nexport default ElementTitleC\n","import React from 'react'\nimport { FaInfoCircle } from 'react-icons/fa'\nimport {TooltipNAV} from './ElementStyledTooltip';\nimport { defInfoIcon} from '../Shared/Colors'\n\n\n// \"hoverDescrip\": \"<span style='font-size:1.8rem;color:red'>Daa1234.</span> <br>Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS Descrip MAS \"\n\ninterface PropsText {\n    text:string,\n}\n\nfunction H5Html (props: PropsText) {\n    return (        \n        <>\n            <h5 style={{textAlign:'left',fontSize:'1rem',margin:\"0px\"}} dangerouslySetInnerHTML={{ __html:props.text }} />\n        </>\n    )\n}\n\ninterface Props {\n    hover:string|undefined,\n    contrast?:boolean;\n    position?:'bottom-end'\n    | 'bottom-start'\n    | 'bottom'\n    | 'left-end'\n    | 'left-start'\n    | 'left'\n    | 'right-end'\n    | 'right-start'\n    | 'right'\n    | 'top-end'\n    | 'top-start'\n    | 'top';\n}\n\n\nfunction ElementInfoIcon(props: Props) {\n    const fcn_buildHover = () => {\n        if(props.hover){\n            return(\n                <TooltipNAV\n                    title={<H5Html text={props.hover}/>}\n                    arrow={true}\n                    placement={props.position?props.position:'right-start'}\n                >\n                    <div\n                         style={{ display: \"flex\",\n                                 flexDirection: \"row\",\n                                 alignItems: \"center\",\n                                 alignContent:'center',\n                                 justifyContent: \"center\",\n                                //  paddingBottom:\"2px\"\n                                }}\n                    >\n                    <FaInfoCircle\n                        style={{color:props.contrast?\"white\":defInfoIcon}}\n                    />\n                    </div>                    \n                </TooltipNAV>\n            )\n        }\n    }\n\n\n    return (        \n        <>\n            {fcn_buildHover()}\n        </>\n    )\n}\n\n\n\nexport default ElementInfoIcon","import React from 'react'\nimport { defBlackColor } from '../Shared/Colors'\nimport ElementInfoIcon from './ElementInfoIcon';\n\ninterface Props {\n    descrip: string|undefined,\n    hover?:string|undefined,\n    display:boolean,\n}\n\n\nfunction ElementInformativeTextWithHover(props: Props) {\n \n    return (        \n        <>\n        {props.display && props.descrip && props.descrip !== \"\"?\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                alignContent:'center',\n                justifyContent: \"flex-start\",\n                padding: \"0.5rem 1rem 0.5rem 1rem\",\n                color: defBlackColor,\n                gap:\"10px\",\n                width: \"100%\",\n                fontSize:'1.2rem',\n                border: \"1px solid lightgray\",\n                // borderRadius:\"10px\",\n                backgroundColor:\"rgba(0,0,0,0.05)\",\n                // position: 'sticky',\n                // top:'0px',\n            }}        \n            >\n                <ElementInfoIcon\n                    hover={props.hover}\n                />\n                {/* <span style={{\n                    // fontWeight: \"bold\",\n                    // textDecoration: \"underline\"\n                    textAlign:\"left\",\n                }}>{props.descrip}</span> */}\n                <span style={{\n                    // fontWeight: \"bold\",\n                    // textDecoration: \"underline\"\n                    textAlign:\"left\",\n                }}\n                dangerouslySetInnerHTML={{ __html:props.descrip }} \n                />\n            </div>\n            :null\n        }\n        </>\n    )\n}\n\n\nconst biggerStyle = { \n  fontSize: \"5rem\",\n}\n\nexport default ElementInformativeTextWithHover","import React from 'react'\nimport ReactSwitch from 'react-switch'\nimport {  defSelectedElem,   defGrayColor } from '../Shared/Colors'\n\ninterface Props {\n    active: boolean\n    onChange: (active: boolean) => void\n}\n\nfunction ElementSwitch(props: Props) {\n\n    const onClick = () => {\n        props.onChange(!props.active)\n    }\n\n    return (\n        <ReactSwitch\n            checked={props.active}\n            onChange={() => onClick()}\n            onColor={defSelectedElem}\n            offColor={defGrayColor}\n        />\n    )\n}\n\nexport default ElementSwitch\n","import React, { useState } from 'react'\nimport { FaSearch, FaTimesCircle } from 'react-icons/fa'\nimport { defSeachBackground, defBorderRadius,  defWhiteColor } from '../Shared/Colors'\nimport styled from 'styled-components'\n\n\ninterface Props {\n    onChange: (text: string) => void\n    backgroundColor?: string;\n    borderRadius?: string;\n\n}\n\nexport default function ElementSearchBoxV2(props: Props) {\n    const [text, setText] = useState<string>(\"\")\n\n    const onChange = (newText: string) => {\n            props.onChange(newText)\n            setText(newText)\n    }\n\n    const backGrColor = props.backgroundColor? props.backgroundColor:defSeachBackground;\n    return (       \n            <div\n            style={{\n                display: \"flex\",\n                alignContent:\"center\",\n                alignItems:\"center\",\n                borderRadius: props.borderRadius?props.borderRadius: \"1.5rem\",\n                backgroundColor: backGrColor,\n                padding:\"0 0.5rem\",\n                height: \"100%\",\n            }}>\n            <FaSearch\n                color={defWhiteColor}\n                size=\"1.7rem\"\n            />    \n            <StyledInput\n                value={text}\n                placeholder = {\"Buscar\"}\n                onChange={(e) => onChange(e.target.value)}\n                type=\"text\"\n                style={{\n                    border: 0,\n                    width: \"100%\",\n                    backgroundColor: \"transparent\",\n                    color: defWhiteColor,\n                    padding: \"0.4rem 0.8rem\",\n                    borderRadius: defBorderRadius\n                }}\n            />                        \n            <FaTimesCircle\n                color={defWhiteColor} \n                size=\"2rem\"                 \n                onClick={()=>onChange(\"\")}\n                style={{visibility:text===\"\"?\"hidden\":\"visible\", \n                        cursor:\"pointer\"}}\n            />\n            </div>        \n    )\n}\n\n\n\nconst StyledInput = styled.input`\n  ::placeholder {\n        color: lightgray,\n  }\n  ::-webkit-input-placeholder {\n    color: lightgray;\n  }\n  :-ms-input-placeholder {\n     color: lightgray;\n  }\n`\n","import React, { ReactElement } from 'react'\nimport { defSeachBackground,  defWhiteColor } from '../Shared/Colors'\n\n\n\ninterface Props {\n    text:string;\n    element:ReactElement;\n}\n\nexport default function ElementSelectALLSwitchV3(props: Props) {\n    return (       \n            <div\n            style={{\n                display: \"flex\",\n                alignContent:\"center\",\n                alignItems:\"center\",\n                borderRadius: \"1.5rem\",\n                backgroundColor: defSeachBackground,\n                paddingRight:\"0.3rem\",\n                paddingLeft:\"0.41rem\",\n                height: \"100%\",\n                gap:\"1rem\"\n            }}> \n            {props.element}                       \n            {props.text !== \"\"?\n                    <span style={{\n                        color: defWhiteColor,\n                        fontSize:\"1.1rem\",\n                    }}>{props.text}</span>\n                    :\"\"}\n            </div>        \n    )\n}\n\n\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport ElementSwitch from \"./ElementSwitch\"\nimport ElementSearchBoxV3 from \"./ElementSearchBoxV3\"\nimport ElementSelectALLSwitchV3 from \"./ElementSelectALLSwitchV3\"\n\nconst StyledDiv = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    gap:1.2rem;\n    white-space: nowrap;\n    justify-content:center;\n    justify-items:center;\n    align-content:center;\n    align-items:center;\n   \n    /* padding:10px 10px 10px 10px; */\n    /* border:1px solid #ced4da; */\n    \n    /* border-radius:10px; */\n`\n\ninterface iElemSwitch {\n    text:string;\n    active:boolean;\n    onChange: (active: boolean) => void\n}\n\ninterface iElemSearch {\n    text:string;\n    onChange: (text: string) => void\n}\n\n\ninterface Props {\n    infoSelec?:iElemSwitch;\n    infoSearch?:iElemSearch;\n    display:boolean;\n}\n\nfunction ESelectALLBuscadorV2(props: Props) {\n    return (\n        <>\n        {props.display?\n        <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap:'wrap',\n                width: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"space-around\",\n                gap:\"1rem\"\n            }}>\n                \n                {props.infoSearch?\n                <StyledDiv\n                    style={{ width: \"15rem\",\n                    height:'2.5rem',}}\n                    >\n                    <ElementSearchBoxV3\n                                onChange={(search) => props.infoSearch?.onChange(search)}\n                    />\n\n                </StyledDiv>\n                :null\n                }    \n                {props.infoSelec?\n                <div \n                 style={{ \n                    width: \"15rem\",\n                    height:'2.5rem',}}\n                >\n                                    \n                    <ElementSelectALLSwitchV3 \n                        text={props.infoSelec.text}\n                        element={<ElementSwitch\n                            active={props.infoSelec.active}\n                            onChange={(active)=> props.infoSelec?.onChange(active)}\n                            />\n                            }                    \n                        />           \n                </div>         \n                :null                \n                }   \n        </div>\n        :null\n        }\n        </>\n    )\n}\n\nexport default ESelectALLBuscadorV2","import React, { ReactElement } from 'react'\nimport { defScrollBar } from '../Shared/Colors'\n// import { defShadow } from './Shared/Shadows'\n// import { FaArrowDown, FaArrowUp } from 'react-icons/fa'\nimport ElementInformativeTextWithHover from '../Elements/ElementInformativeTextWithHover'\nimport ESelectALLBuscadorV2 from '../Elements/ESelectALLBuscadorV2'\nimport styled from 'styled-components'\n\ninterface iElemSwitch {\n    text:string;\n    active:boolean;\n    onChange: (active: boolean) => void\n}\n\ninterface iElemSearch {\n    text:string;\n    onChange: (text: string) => void\n}\n\ninterface Props {\n    elementRender:ReactElement;\n    propsComp:any;\n    infoSelec?:iElemSwitch;\n    infoSearch?:iElemSearch;\n}\n\nfunction LayoutElement(props: Props) {\n    const propsComp = props.propsComp;\n    return (\n        <div \n            style={{\n            display: \"flex\",\n            width:'100%',\n            height: '100%',\n            maxHeight:'100%',\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            alignContent:'center',\n            padding:'10px',\n            gap:'1rem',\n            }}\n            >\n           \n            <ElementInformativeTextWithHover\n                descrip={propsComp.stringDescrip}\n                hover={propsComp.hoverDescrip}\n                display={true}\n            /> \n            {/* <ESelectARLLBuscador */}\n            <ESelectALLBuscadorV2\n                infoSelec=\n                {\n                    !props.infoSelec ||\n                    (propsComp.singleChoice && \n                    propsComp.singleChoice === true)\n                    ?\n                    undefined:props.infoSelec\n                    \n                }\n                infoSearch={\n                    props.infoSearch?\n                    props.infoSearch:undefined\n                }\n                display={propsComp.values.length > 1}\n            />\n            <ScreenContainer>\n                {props.elementRender}\n            </ScreenContainer>\n        </div>\n    )\n}\n\nconst ScreenContainer = styled.div`\n    width: 100%;\n    height: 100%;                               \n    overflow-y: scroll;\n    max-height:100%; \n    display:flex;\n    justify-content:center;\n    &::-webkit-scrollbar {\n        width: 0.35rem !important ; \n        display: flex;\n    }\n    &::-webkit-scrollbar-thumb  {\n        background: ${defScrollBar}; \n        border:none ;\n        border-radius: 0.3rem;\n    }\n`\n\nexport default LayoutElement","import React, { useEffect, useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\nimport ElementInputText from \"../../../Elements/ElementInputText\"\nimport ElementTitleC from '../../../Elements/ElementTitleC'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\nimport * as colorDef from '../../../Shared/Colors'\n\ninterface Props {\n    body: any\n    onChange: (data: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n}\n\ninterface iOutputDataComp {\n    id: any;\n    name: string;\n    condition: string;\n}\n\nfunction ValueInsert(propsComp: Props) {\n    const props = propsComp.body;\n    const values:iInputDataComp[] = props.values;\n    const previousInput = propsComp.previousInput;\n\n\n    const [ssOptionSelec, setOptionSelec] = useState<number[] >([]);\n\n    const [ssVar1, setVar1] = useState<string[] >([]);\n    const [ssVar2, setVar2] = useState<string[] >([]);\n\n    const [ssValid1, setValid1] = useState<boolean[] >([]);\n    const [ssValid2, setValid2] = useState<boolean[] >([]);\n\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        let arrayOptions:number[] = [];\n        let arrayVariable1: string[] = [];\n        let arrayVariable2: string[] = [];\n        let arrayValid1: boolean[] = [];\n        let arrayValid2: boolean[] = [];\n    \n\n        for (let val of values) \n        {\n            let el = previousInput?.find((elem:any)=>elem.id === val.id);\n            if(el === undefined){\n                arrayOptions.push(0);\n                arrayVariable1.push(\"\")\n                arrayVariable2.push(\"\")\n                arrayValid1.push(true);                \n                arrayValid2.push(true);\n            }\n            else{\n                let tOption = 0;\n                let tVar1 = \"\";\n                let tVar2 = \"\";\n                let tValid = true;             \n\n                if(el.condition.slice(0,1) === '=')\n                {\n                    tOption = 1;\n                    tVar1 = el.condition.slice(1,el.condition.length); \n                }\n                else if(el.condition.indexOf(';') >=0)\n                {\n                    let arrayVal = el.condition.split(';');\n                    tOption = 4;\n                    tVar1 = arrayVal[0].slice(1,el.condition.length);\n                    tVar2 = arrayVal[1].slice(1,el.condition.length);\n                }\n                else if(el.condition.slice(0,1) === '<')\n                {\n                    tOption = 2;\n                    tVar1 = el.condition.slice(1,el.condition.length); \n                }\n                else if(el.condition.slice(0,1) === '>')\n                {\n                    tOption = 3;\n                    tVar1 = el.condition.slice(1,el.condition.length); \n                }\n                else if(el.condition.slice(0,2) === '!=')\n                {\n                    tOption = 5;\n                    tVar1 = el.condition.slice(2,el.condition.length); \n                }\n\n                arrayOptions.push(tOption);\n                arrayVariable1.push(tVar1)\n                arrayVariable2.push(tVar2)\n                arrayValid1.push(tValid);\n                arrayValid2.push(tValid);\n            }\n        }      \n        \n        setOptionSelec([...arrayOptions])\n        setVar1([...arrayVariable1])\n        setVar2([...arrayVariable2])\n        setValid1([...arrayValid1])\n        setValid2([...arrayValid2])\n    },[])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        if(values.length === 0) propsComp.onValidate(true);\n        else{\n            let valid = [];\n\n            for (let index = 0; index < values.length; index++) { \n                let v = false;\n\n                if(ssValid1[index] && ssOptionSelec[index] != 4){\n                    v = true;\n                }\n\n                if(ssOptionSelec[index] == 4 && ssValid2[index] && ssValid1[index]){\n                    if (parseFloat(ssVar1[index]) < parseFloat(ssVar2[index])) {\n                        v = true;\n                    }\n                }\n\n                if (ssOptionSelec[index] == 0){\n                    v = true;\n                }\n                if (ssOptionSelec[index] == 0 && props.hideSinRestric ){\n                    v = false;\n                }\n\n                valid.push(v)\n            }\n            propsComp.onValidate(valid.every(v => v === true))    \n        }\n    },[ssValid1, ssValid2])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        var arrayOutputData:iOutputDataComp[] = [];\n        for (let index = 0; index < values.length; index++) { \n            let outputData:iOutputDataComp = {id:values[index].id, name:values[index].name,  condition:'undefined'};\n            \n            let output1 = \"undefined\";\n            if(ssValid1[index]){\n                output1 = ssVar1[index];\n            }\n\n            if (ssOptionSelec[index] == 1 ){\n                outputData.condition = '=' + output1;\n            } \n            else if(ssOptionSelec[index] == 2){\n                outputData.condition = '<' + output1;\n            } \n            else if(ssOptionSelec[index] == 3){\n                outputData.condition = '>' + output1;\n            } \n            else if(ssOptionSelec[index] == 4){\n                let output2 = \"undefined\";\n                if(ssValid2[index]){\n                    output2 = ssVar2[index];\n                }\n                outputData.condition = '>' + output1 + ';' + '<' + output2;\n            } \n            else if(ssOptionSelec[index] == 5){\n                outputData.condition = '!=' + output1;\n            } \n            arrayOutputData.push(outputData);\n        }\n\n        propsComp.onChange([...arrayOutputData]);       \n    },[ssOptionSelec, ssVar1, ssVar2])\n\n\n    const filter = (text: string) => {\n        let aux = []\n        for (let value of props.values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues(aux)\n    }\n    \n\n    const fcn_buildIntervalComp = (row:iInputDataComp,index:number)=>{        \n        const options = (e:any) =>{\n            let newVal = [...ssOptionSelec];\n            newVal[index] = e.target.value;\n            setOptionSelec(newVal)\n\n            // Clean Values\n            let newVar1 = [...ssVar1];\n            newVar1[index] = \"\";\n            setVar1(newVar1);\n            let newVar2 = [...ssVar2];\n            newVar2[index] = \"\";\n            setVar2(newVar2);\n\n            // Clean validations\n            let newValid = [...ssValid1];\n            newValid[index] = false;\n            setValid1(newValid);\n            let newValid2 = [...ssValid2];\n            newValid2[index] = false;\n            setValid2(newValid2);\n            \n        }     \n        const handleChange = (e:any, i:number, valid:boolean, fieldNumber:number) =>{\n            if(fieldNumber == 1){\n                let newVal = [...ssVar1];\n                let newValid = [...ssValid1];\n\n                newValid[i] = valid;\n                setValid1(newValid);\n                \n                newVal[i] = e;\n                setVar1(newVal);\n                \n            } \n            else if(fieldNumber == 2){\n                let newVal = [...ssVar2];\n                let newValid = [...ssValid2];\n                \n                newValid[index] = valid\n                setValid2(newValid);\n\n                newVal[i] = e;\n                setVar2(newVal);\n\n            } \n        }\n\n        return(\n            <div style={{\n                display: \"flex\",\n                width:'100%',\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                alignContent:'center',\n                padding:'10px',\n                border:'3px solid '+colorDef.defMainThemeColor,\n                // justifyContent: \"space-between\",\n                gap:'1rem',\n                }}>\n                <ElementTitleC\n                    text = { row.name }\n                    />\n                <Form.Control  \n                    name={'selectOption'} as=\"select\" value = {ssOptionSelec[index]} onChange={(e)=>options(e)} >\n                    <option value={0} > {props.hideSinRestric?\"Seleccione una opción\":\"1. Sin restricciones\"} </option>\n                    <option value={1} > 2. (=) Igual a ___  </option>\n                    <option value={2} > 3. (&lt;=) Menor que ___  </option>\n                    <option value={3} > 4. (&gt;=) Mayor que ___  </option>\n                    <option value={4} > 5. Entre ___ ,  y ___ </option>\n                    <option value={5} > 6. (&#8800;) Diferente a ___ </option>\n\n                </Form.Control>\n                {\n                    ssOptionSelec[index] == 1 ?\n                    <ElementInputText\n                        text=\"(=) Igual a:&nbsp;\"\n                        defaultInput ={ssVar1[index]}\n                        inputType='float'\n                        onChange={(e, valid)=>handleChange(e, index, valid, 1)}\n                    />\n                    :\n                    \"\"\n                }\n                {\n                    ssOptionSelec[index] == 2 ?\n                    <ElementInputText\n                        text=\"(&lt;=) Menor que:&nbsp;\"\n                        defaultInput ={ssVar1[index]}\n                        inputType='float'\n                        onChange={(e, valid)=>handleChange(e, index, valid, 1)}\n                    />\n                    :\n                    \"\"\n                }\n                {\n                    ssOptionSelec[index] == 3 ?\n                    <ElementInputText\n                        text=\"(&gt;=) Mayor que:&nbsp;\"\n                        defaultInput ={ssVar1[index]}\n                        inputType='float'\n                        onChange={(e, valid)=>handleChange(e, index, valid, 1)}\n                    />\n                    :\n                    \"\"\n                }\n                {\n                    ssOptionSelec[index] == 4 ?\n \n                    <>\n                        <ElementInputText\n                            text=\"Entre:&nbsp;\"\n                            defaultInput ={ssVar1[index]}\n                            inputType='float'\n                            onChange={(e, valid)=>handleChange(e, index, valid, 1)}\n                        />\n                        <ElementInputText\n                            text=\"y:&nbsp;\"\n                            defaultInput ={ssVar2[index]}\n                            inputType='float'\n                            onChange={(e, valid)=>handleChange(e, index, valid, 2)}\n                        />\n                        {\n                            parseFloat(ssVar1[index]) > parseFloat(ssVar2[index])? \n                            <p style={{color:\"red\"}}> Rango de valores incorrecto</p>\n                            :\n                            \"\"\n                        }\n                        \n                    </>\n\n                    :\n                    \"\"\n                }\n                {\n                    ssOptionSelec[index] == 5 ?\n                    <ElementInputText\n                        text=\"(&#8800;) Diferente a:&nbsp;\"\n                        defaultInput ={ssVar1[index]}\n                        inputType='float'\n                        onChange={(e, valid)=>handleChange(e, index, valid, 1)}\n                    />\n                    \n                    :\n                    \"\"\n                    \n                }\n            </div>\n        )\n    }\n\n    const fcn_renderComponent = ()=>{\n        return ( \n            <div style={{\n                display: \"flex\", flexDirection: \"column\",\n                padding: \"1rem\", gap: \"1rem\", width: \"100%\"\n            }}>  \n            {\n                values.map((row:iInputDataComp,index:number)=>{\n                    return (\n                        <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===row.id)?'':'none',width:'100%'}}>\n                            {fcn_buildIntervalComp(row,index)}\n                        </div>\n                        \n                    )\n                })\n            }\n            </div>\n        )\n        }\n\n    if(values.length ===  0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props}            \n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />   \n    )\n}\n\nexport default ValueInsert\n","import React, { ReactElement } from 'react'\nimport { defBlackColor, defWhiteColor, defSelectedElem } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\nimport { FaArrowDown, FaArrowUp } from 'react-icons/fa'\nimport ElementInfoIcon from '../Elements/ElementInfoIcon'\n\ninterface Props {\n    title: string\n    expanded: boolean\n    elements: ReactElement[]\n    onChange: (active: boolean) => void\n    onClickTitle: () => void\n    backgroundColor?:string\n    allSelected?:boolean\n    hoverInfo?:string\n}\n\nfunction ElementExpandibleTitle(props: Props) {\n    return (\n        <div style={{\n            backgroundColor:  props.backgroundColor?props.backgroundColor:defWhiteColor,\n            borderRadius: \"1rem\",\n            boxShadow: defShadow,\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n        }}>\n            <button style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: props.expanded ? \"1rem 1rem 0rem 1rem\" : '1rem 1rem 1rem 1rem' ,\n                border: 0, borderRadius: \"1rem\",\n                backgroundColor: props.backgroundColor?props.backgroundColor:defWhiteColor\n            }}\n            onClick={() => props.onClickTitle()}>\n                <div  style={{\n                        width: '100%',\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        // gap:\"1rem\",\n                        paddingRight:'1rem',\n                    }}>\n                    <div  style={{\n                        // width: '100%',\n                        display: \"flex\",\n                        justifyContent: \"flex-start\",\n                        gap:\"1rem\",\n                        // paddingRight:'1rem',\n                    }}>\n                        <ElementInfoIcon\n                            hover={props.hoverInfo}\n                            contrast={false}\n                            position={'bottom-start'}\n                        />  \n                        <span style={{color: defBlackColor, fontWeight: 'bold'}}>\n                            {props.title}\n                        </span>\n                    </div>\n                  \n                    {props.allSelected && <span style={{backgroundColor:defSelectedElem,color:\"white\",padding:\"0.2rem 0.5rem\", borderRadius:\"1rem\", fontSize:\"0.8rem\"}}>Todas Selec.</span>}\n                </div>\n                {\n                    props.expanded ? \n                    <FaArrowUp style={{color: defBlackColor}}/> :\n                    <FaArrowDown style={{color: defBlackColor}}/>\n                }\n            </button>\n            <hr style={{\n                display: props.expanded ? 'flex' : 'none',\n                width: \"calc(100% - 30px)\"\n            }}/>\n            <div style={{\n                display: props.expanded ? 'flex' : 'none',\n                flexDirection: \"column\",\n                gap: \"0.5rem\",\n                padding: \"1rem 1rem 1rem 1rem\"\n            }}>\n                {props.elements}\n            </div>\n        </div>\n    )\n}\n\nexport default ElementExpandibleTitle","import React from 'react'\nimport {  defSelectedElem,defWhiteColor, defBlackColor, defBorderRadius } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\n\ninterface Props {\n    name: string\n    description?: string\n    type: string\n    onChange: (active: boolean) => void\n    active: boolean\n    showFullText?: boolean\n}\n\nfunction ElementTile(props: Props) {\n    const onClick = () => {\n        props.onChange(!props.active)\n    }\n\n    return (\n        <>\n            <button style={{\n                border: 0,\n                width: \"11.3rem\",\n                height: \"6rem\",\n                overflowY:\"auto\",\n                color: props.active ? defWhiteColor : defBlackColor,\n                backgroundColor: props.active ? defSelectedElem : defWhiteColor,\n                boxShadow: defShadow,\n                borderRadius: defBorderRadius,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                transition: \"all 0.3s\",\n                padding: \"1rem\"\n            }}\n                onClick={() => onClick()}\n            >\n                <span style={{\n                    overflow: \"hidden\",\n                    whiteSpace: props.showFullText?\"normal\":\"nowrap\",\n                    textOverflow:  props.showFullText?\"\":\"ellipsis\"\n                }}>\n                    {props.name}                    \n                </span>\n            </button>\n        </>\n    )\n}\n\nexport default ElementTile\n","import React, { useEffect, useState } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport ElementTile from '../../../Elements/ElementTile'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\ninterface Props {\n    body: any\n    onChange: (values: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n    maxHeighTileContainer?:string\n}\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n    hoverText: string;\n}\n\ninterface iOutputDataComp {\n    id: any;\n    name: string;\n}\n\nfunction TileSelectionV3(props: Props) {\n    const values:iInputDataComp[] = props.body.values;\n\n\n    const [addedValues, setAddedValues] = useState<iOutputDataComp[]>([])\n    const [selectAllActive, setSelectAllActive] = useState<boolean>(false)\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        if(props.previousInput===undefined )\n        {        \n            if (props.body.defaultSwitchState && props.body.defaultSwitchState === true) {\n                let toAdd = []\n                for (let value of values) {\n                    toAdd.push({ id: value.id, name: value.name })\n                }\n                setAddedValues(toAdd)\n                setSelectAllActive(true)\n            }\n        }\n        else\n        {\n            let toAdd = []\n            for (let prevVal of props.previousInput) {\n                toAdd.push({ id: prevVal.id, name: prevVal.name })\n            }\n            setAddedValues(toAdd)\n            if(props.previousInput.length === values.length) setSelectAllActive(true)\n\n        }\n        // //console.log(\"previousInput\",props);\n    }, [])\n    \n    // --------------------------------------------------------------------------------\n    // DEFAULT VALUE - canProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        if (addedValues.length>0 || Object.keys(values).length === 0) props.onValidate(true);\n        else props.onValidate(false);\n    }, [addedValues])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        props.onChange([...addedValues])\n    }, [addedValues])\n\n    const isInAdded = (value: iInputDataComp): boolean => {\n        for (let currVal of addedValues) if (currVal.id === value.id) return true\n        return false\n    }\n    const addSingle = (value: iInputDataComp, active: boolean) => {\n        if (selectAllActive) setSelectAllActive(false)\n        let aux = []\n        if (active) aux.push({ id: value.id, name: value.name })\n        setAddedValues(aux)\n    }\n    const addMultiple = (value: iInputDataComp, active: boolean) => {\n        if (selectAllActive) setSelectAllActive(false)\n        let aux = [...addedValues]\n        if (active) {\n            aux.push({ id: value.id, name: value.name })\n        } else {\n            let idx = aux.findIndex((val)=>{return val.id === value.id})\n            aux.splice(idx, 1)\n        }\n        setAddedValues(aux)\n    }\n    const filter = (text: string) => {\n        let aux:iInputDataComp[] = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues(aux)\n    }\n    const selectAll = (active: boolean) => {\n        let aux = []\n        if (active) {\n            for (let value of values) {\n                aux.push({ id: value.id, name: value.name })\n            }\n        } else {\n            aux = []\n        }\n        setSelectAllActive(active)\n        setAddedValues(aux)\n    }\n\n\n\n    const fcn_renderComponent = ()=>{\n        return <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            gap: \"1rem\",\n            justifyContent:'center',\n            alignItems:'flex-start',  \n            alignContent: 'flex-start',            \n            paddingTop:\"10px\",\n            paddingBottom:\"1rem\",   \n            maxHeight:props.maxHeighTileContainer?props.maxHeighTileContainer:\"\",                \n        }}\n            \n        >       \n            <ReactTooltip effect=\"solid\" place=\"bottom\" />\n            {\n                visibleValues.map((value) => {\n                    return <div\n                        data-tip={value.hoverText ? value.hoverText : null}\n                    >\n                        <ElementTile\n                            active={isInAdded(value)}\n                            name={value.name}\n                            description={undefined}\n                            type={\"string\"}\n                            showFullText ={true}\n                            onChange={(active) => {\n                                props.body.singleChoice ?\n                                    addSingle(value, active) :\n                                    addMultiple(value, active)\n                            }}\n                        />\n                        </div>\n                })\n            }            \n        </div>\n    }\n\n\n\n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props.body}\n            infoSelec= {{\n                text:\"Seleccionar todas\",\n                active:selectAllActive,\n                onChange:(active:boolean) => selectAll(active)\n                }}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />        \n    )\n}\n\nexport default TileSelectionV3\n","import React, { useEffect, useState } from 'react'\nimport ElementExpandibleTitle from '../../../Elements/ElementExpandibleTitle'\nimport TileSelectionV3 from './TileSelectionV3'\nimport LayoutElement from '../../../Elements/LayoutElement'\nimport  {maxHeightSubComponent} from '../../../Shared/Attributes'\n \ninterface Props {\n    body: any\n    onChange: (data: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput:  any\n}\n\ninterface iList {\n    id:any;\n    name:string;\n    hoverText: string;\n}\n\ninterface iInputDataComp {\n    id:any;\n    name:string;\n    varList: iList[];\n}\n\ninterface iSelected {\n    id:any;\n    name:string;\n}\n\ninterface iOutputDataComp {\n    id:any;\n    name:string;\n    varSelected: iSelected[];\n    max:number\n}\n\n\n\nfunction MultiTileSelect(propsComp: Props) {\n    const props = propsComp.body;\n    const values:iInputDataComp[] = props.values;\n    const previousInput = propsComp.previousInput;\n\n    const [ssExpandedGroups, setExpandedGroups] = useState<boolean[]>([]);\n    const [ssOutput, setOutput] = useState<iOutputDataComp[]>([]);\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // DEFAULT VALUE - canProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        if(values.length === 0 || ssOutput.every((el:iOutputDataComp)=>el.varSelected.length>0)) propsComp.onValidate(true);\n        else propsComp.onValidate(false)\n    },[ssOutput])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        let arrayExpanded:boolean[] = [];\n        let initOutput:iOutputDataComp[] = [];  \n\n        for (let value of values) {\n            const prevValue = props.previousInput?.find((el:iInputDataComp)=>el.id===value.id);\n            arrayExpanded.push(false);\n            initOutput.push({id:value.id,name:value.name,varSelected:prevValue !== undefined?prevValue.varList:[],max:value.varList.length});\n        } \n        setOutput(initOutput);\n        setExpandedGroups(arrayExpanded);\n    }, [])\n    \n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        //console.log(\"output\",ssOutput)\n        propsComp.onChange([...ssOutput]);  \n    },[ssOutput])\n  \n\n    function expandGroup(index: number) {\n        let newVal = [...ssExpandedGroups];\n        newVal[index] = newVal[index] ? false: true\n        \n        setExpandedGroups(newVal)\n    }\n\n\n    function isExpanded(index: number){\n        return ssExpandedGroups[index]\n    }\n\n\n    const addOutput = async (index: number, output: iSelected[]) => {       \n        if(ssOutput.length>0){\n        setOutput((prev:iOutputDataComp[])=>{      \n            let newSelected = [...prev];\n            newSelected[index].varSelected = output?output:[];\n            return [...newSelected]\n            }\n        )    \n        }      \n    }\n    \n    const filter = (text: string) => {\n        let aux = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    }   \n\n    const fcn_renderComponent = ()=>{\n        return ( \n        <div style={{width: \"100%\", gap: \"1rem\",\n            display: \"flex\", flexDirection: \"column\", \n            alignItems: \"center\",\n            justifyContent: \"flex-start\",                                \n            padding:'5px',\n            }}\n        >\n        {\n            values.map((row:iInputDataComp, indexRow:number)=>{\n                return (\n                    <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===row.id)?'':'none',width:'100%'}}>\n                        <ElementExpandibleTitle\n                            key={indexRow}\n                            title={row.name}\n                            expanded={isExpanded(indexRow)}\n                            onChange={()=>{}}\n                            onClickTitle={()=>{expandGroup(indexRow)}}\n                            allSelected={ssOutput.find(oEL=>oEL.id === row.id)?.varSelected.length === row.varList.length}\n                            elements={\n                                [\n                                    <TileSelectionV3\n                                        key={indexRow}\n                                        body={{values: row.varList,\n                                            defaultSwitchState:props.defaultSwitchState,\n                                            singleChoice:props.singleChoice}}\n                                        onChange={(output) => addOutput(indexRow, output)}\n                                        onValidate={() => {}}\n                                        previousInput={previousInput?previousInput[indexRow].varSelected:undefined} \n                                        maxHeighTileContainer={maxHeightSubComponent}\n                                    />\n                                ]\n                            }\n                        />\n                    </div>\n                )\n            })\n        }\n        </div>\n        )\n        }\n    \n   \n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n\n            elementRender={fcn_renderComponent()}\n        />           \n    )\n}\n\nexport default MultiTileSelect","export const maxHeightSubComponent = \"20rem\"","import React, { useEffect, useState } from 'react'\nimport ElementExpandibleTitle from '../../../Elements/ElementExpandibleTitle'\nimport LayoutElement from '../../../Elements/LayoutElement'\nimport MultiTileSelect from './MultiTileSelectV2'\nimport {defBackGSubComp} from '../../../Shared/Colors'\n\n\ninterface Props {\n    body: any\n    onChange: (data: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iList {\n    id:any;\n    name:string;\n    hoverText: string;\n}\n\ninterface iInputDataComp {\n    id:any;\n    name:string;\n    varList: iList[];\n}\n\ninterface iSelected {\n    id:any;\n    name:string;\n}\n\ninterface iOutputDataGroupComp {\n    id:any;\n    name:string;\n    varSelected: iOutputDataComp[];\n}\n\ninterface iOutputDataComp {\n    id:any;\n    name:string;\n    varSelected: iSelected[];\n}\n\n\n\nfunction GroupMultiTileSelect(propsComp: Props) {\n    const props = propsComp.body;\n    const values:iInputDataComp[] = props.values;\n    const previousInput = propsComp.previousInput;\n\n    const [ssExpandedGroups, setExpandedGroups] = useState<boolean[]>([]);\n    const [ssOutput, setOutput] = useState<iOutputDataGroupComp[]>([]);\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        if(values.length === 0 || ssOutput.some((el:iOutputDataGroupComp)=>el.varSelected.some((el2:iOutputDataComp)=>el2.varSelected.length>0))) propsComp.onValidate(true);\n        else propsComp.onValidate(false)\n    },[ssOutput])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        let arrayExpanded:boolean[] = [];\n        let initOutput:iOutputDataGroupComp[] = [];   \n        if(previousInput===undefined)\n        {\n            for (let value of values) {\n                arrayExpanded.push(false);           \n                initOutput.push({id:value.id,name:value.name,varSelected:[]});\n            }\n        } \n        else\n        {\n            for (let el of previousInput) {\n                arrayExpanded.push(false);                \n            }\n            initOutput = [...previousInput]\n        }\n        \n\n        setOutput(initOutput);\n        setExpandedGroups(arrayExpanded);\n    }, [])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        //console.log(\"output\",ssOutput)\n        propsComp.onChange([...ssOutput]);  \n    },[ssOutput])\n\n\n    function expandGroup(index: number) {\n        let newVal = [...ssExpandedGroups];\n        newVal[index] = newVal[index] ? false: true        \n        setExpandedGroups(newVal)\n    }\n\n    function isExpanded(index: number){\n        return ssExpandedGroups[index]\n    }\n\n    const addOutput = (index: number,  output: iOutputDataComp[]) => {\n\n        if(ssOutput.length>0){\n            setOutput((prev:iOutputDataGroupComp[])=>{      \n                let newSelected = [...prev];\n                newSelected[index].varSelected = output?output:[];\n                return [...newSelected]\n                }\n            )    \n        } \n    }\n    \n\n    const filter = (text: string) => {\n        let aux = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    }   \n\n\n    const fcn_renderComponent = ()=>{\n        return ( \n        <div style={{width: \"100%\", gap: \"1rem\",\n            display: \"flex\", flexDirection: \"column\", \n            alignItems: \"center\",\n            justifyContent: \"flex-start\",                                \n            padding:'5px',\n            }}\n        >\n        {\n            values.map((rowGroup:iInputDataComp, index:number)=>{          \n            return (\n                <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===rowGroup.id)?'':'none',width:'100%'}}>\n                    <ElementExpandibleTitle\n                        title={rowGroup.name}\n                        expanded={isExpanded(index)}\n                        onChange={()=>{}}\n                        onClickTitle={()=>{expandGroup(index)}}\n                        backgroundColor = {defBackGSubComp}\n                        elements={\n                            [\n                            <MultiTileSelect\n                                key={index}\n                                body={{values: rowGroup.varList,\n                                    defaultSwitchState:props.defaultSwitchState,\n                                    singleChoice:props.singleChoice}}\n                                onChange={(output) => addOutput(index, output)}\n                                onValidate={()=>{}}\n                                previousInput={previousInput?previousInput[index].varSelected:undefined}\n                            />\n                            ]\n                        }\n                        />\n                </div>\n                )\n            })\n        }\n        </div>\n        )\n    }\n   \n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n\n            elementRender={fcn_renderComponent()}\n        />           \n    )\n}\n\nexport default GroupMultiTileSelect","import React, { useEffect, useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\nimport TextField from '@material-ui/core/TextField'; //npm install @material-ui/core\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //npm install @material-ui/lab\nimport ElementTitleC from '../../../Elements/ElementTitleC'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\n\ninterface Props {\n    body: any\n    onChange: (data: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iDate {\n    id:any;\n    name:string;\n    days: number;\n}\n\ninterface iList {\n    id:any;\n    name:string;\n}\n\ninterface iState {\n    id:any;\n    name:string;\n    ini: iDate;\n    fin: iDate;\n    frec:number;\n    ref:iList;\n}\n\ninterface iInputData {\n    id:any;\n    name:string;\n    refVar:  iList[];\n    varList: iList[];\n}\n\n\nconst listOptions = [\n    'Seleccione una opción', //0\n    'Durante todo el ingreso', //1\n    'Período de interés', //2\n    'El primer día del ingreso', //3\n    'El día de alta', //4\n    'El día de la variable máster', //5\n    'Personalizado', //6\n    'Primer día del ingreso', //7    \n    'Día del alta', //8\n    'Día de la variable máster', //9\n    \n]\n\nconst optionGroup = [\n    [0,1,2,6], // Periodicidad    \n    [0,7,8,9,6], // Día concreto\n    [0,1,2,3,4,5,6], // Periodo concreto\n]\n\n\nfunction VarIntervalSelectionV2(propsComp: Props) {\n    const props = propsComp.body;\n   \n    const values:iInputData[] = props.values;\n    const visualContrains:string = props.qProps.visualContrains;\n    const previousInput = propsComp.previousInput;\n    \n    const [ssPeriodSelected, setPeriodSelected] = useState<number[]>([]);\n    const [ssOptionSelec, setOptionSelec] = useState<number[]>([]);\n    const [ssOutput, setOutput] = useState<iState[]>([]);\n\n    const [visibleValues, setVisibleValues] = useState<iInputData[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        let arrayOptions:number[] = [];\n        let arrayPeriod:number[] = [];\n        let arrayVar:iState[] = [];\n    \n        if(previousInput===undefined)\n        {\n            for (let index = 0; index < values.length; index++) {\n                arrayVar.push({    \n                    id:values[index].id,\n                    name:values[index].name,\n                    ini: {id:null,name:\"\",days: 0},\n                    fin: {id:null,name:\"\",days: 0},\n                    frec: 0,\n                    ref:values[index].refVar[0]\n                });  \n                arrayOptions.push(0);\n            }     \n            arrayPeriod = arrayOptions;\n        }\n        else\n        {\n            for (let el of previousInput) {\n                arrayVar.push(el);  \n                arrayPeriod.push(el.frec === 0? el.ini.id === el.fin.id && el.ini.days === el.fin.days? 2:3:1);\n                arrayOptions.push(6);\n            } \n        }\n\n        setOptionSelec(arrayOptions);\n        setPeriodSelected(arrayPeriod)\n        setOutput(arrayVar);\n    },[])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        if(values.length === 0) propsComp.onValidate(true);\n        else propsComp.onValidate(ssOutput.every((outV:iState) => outV.ini.id !== null && outV.fin.id !== null))    \n    },[ssOutput])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        //console.log(ssOutput)\n        propsComp.onChange([...ssOutput]);        \n    },[ssOutput])\n\n\n    \n    const filter = (text: string) => {\n        let aux = []\n        for (let value of props.values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    } \n\n    const fcn_buildIntervalComp = (row:iInputData,indexRow:number)=>{        \n       \n        const handleKeyDown = (e:any)=>\n        {   \n            if(e.key === \"-\")\n            {\n                let newArray = [...ssOutput];\n                if(e.target.name==='dINI') newArray[indexRow].ini.days = -1*newArray[indexRow].ini.days;\n                if(e.target.name==='dFIN')  newArray[indexRow].fin.days = -1*newArray[indexRow].fin.days;\n                setOutput([...newArray])  \n            }\n        }\n\n        const handleInputChange = (e:any)=>\n        {\n            const newVal = (e.target.value);\n            if(newVal!==\"\"){\n               let newArray = [...ssOutput];\n                if(e.target.name==='dINI') newArray[indexRow].ini.days = parseInt(newVal);\n                if(e.target.name==='dFIN' || ssPeriodSelected[indexRow]===2 ) newArray[indexRow].fin.days = parseInt(newVal);\n                setOutput([...newArray])   \n            }        \n            else\n            {\n                let newArray = [...ssOutput];\n                if(e.target.name==='dINI') newArray[indexRow].ini.days = 0;\n                if(e.target.name==='dFIN' || ssPeriodSelected[indexRow]===2 ) newArray[indexRow].fin.days = 0;\n                setOutput([...newArray])   \n\n            }    \n        }\n\n        const handleInputFrecChange = (e:any)=>\n        {\n            const {  value } = e.target;\n            if(parseInt(value) > 0){\n                let newArray = [...ssOutput];\n                newArray[indexRow].frec = parseInt(value);\n                setOutput([...newArray])    \n            }\n                                   \n        }\n\n        const handleComboChange = (valOption:any,comp:string)=>{\n            let newVal:iList = {id:null,name:\"\"};\n            if(valOption!==null)\n            {\n                newVal = valOption;\n            }\n\n            let newArray = [...ssOutput];\n            if(comp==='varINI' ){\n                newArray[indexRow].ini.id = newVal.id;\n                newArray[indexRow].ini.name = newVal.name;\n            } \n            if(comp==='varFIN' || ssPeriodSelected[indexRow]===2){\n                newArray[indexRow].fin.id = newVal.id;\n                newArray[indexRow].fin.name = newVal.name;\n            } \n            setOutput([...newArray])   \n        }\n\n         const handleChangeControl = (e2:any)=>{\n            const {  value } = e2.target;\n            setOptionSelec((prev)=>{\n                let newOption = [...prev];\n                newOption[indexRow] = parseInt(value);\n                return [...newOption];\n            })\n            if(parseInt(value) === 1)\n            {      \n                const tempFECIN =  row.varList.find((vl:iList)=>vl.id === 'FECIN')    \n                const tempFECAL =  row.varList.find((vl:iList)=>vl.id === 'FECAL')       \n                if(tempFECIN && tempFECAL)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECIN.id,name:tempFECIN.name,days: 0};           \n                    newArray[indexRow].fin={id:tempFECAL.id,name:tempFECAL.name,days: 0};   \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 2)\n            {          \n                const tempFECMA =  row.varList.find((vl:iList)=>vl.id === 'FECMA')    \n                const tempFECAL =  row.varList.find((vl:iList)=>vl.id === 'FECAL')    \n                if( tempFECMA && tempFECAL)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECMA.id,name:tempFECMA.name,days: 0};           \n                    newArray[indexRow].fin={id:tempFECAL.id,name:tempFECAL.name,days: 0};   \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 3)\n            {          \n           \n                const tempFECIN =  row.varList.find((vl:iList)=>vl.id === 'FECIN')    \n                if(tempFECIN)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECIN.id,name:tempFECIN.name,days: -1};           \n                    newArray[indexRow].fin={id:tempFECIN.id,name:tempFECIN.name,days: 1};      \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 4)\n            {   \n                const tempFECAL =  row.varList.find((vl:iList)=>vl.id === 'FECAL')    \n                if( tempFECAL)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECAL.id,name:tempFECAL.name,days: -1};           \n                    newArray[indexRow].fin={id:tempFECAL.id,name:tempFECAL.name,days: 1};      \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 5)\n            {     \n                const tempFECMA =  row.varList.find((vl:iList)=>vl.id === 'FECMA')\n                if(tempFECMA)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECMA.id,name:tempFECMA.name,days: -1};           \n                    newArray[indexRow].fin={id:tempFECMA.id,name:tempFECMA.name,days: 1};      \n                    setOutput([...newArray])  \n                }            \n            }     \n            else if(parseInt(value) === 7)\n            {          \n           \n                const tempFECIN =  row.varList.find((vl:iList)=>vl.id === 'FECIN')    \n                if(tempFECIN)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECIN.id,name:tempFECIN.name,days: 0};           \n                    newArray[indexRow].fin={id:tempFECIN.id,name:tempFECIN.name,days: 0};      \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 8)\n            {   \n                const tempFECAL =  row.varList.find((vl:iList)=>vl.id === 'FECAL')    \n                if( tempFECAL)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECAL.id,name:tempFECAL.name,days: 0};           \n                    newArray[indexRow].fin={id:tempFECAL.id,name:tempFECAL.name,days: 0};      \n                    setOutput([...newArray])  \n                }            \n            }\n            else if(parseInt(value) === 9)\n            {     \n                const tempFECMA =  row.varList.find((vl:iList)=>vl.id === 'FECMA')\n                if(tempFECMA)\n                {\n                    let newArray = [...ssOutput];\n                    newArray[indexRow].ini={id:tempFECMA.id,name:tempFECMA.name,days: 0};           \n                    newArray[indexRow].fin={id:tempFECMA.id,name:tempFECMA.name,days: 0};      \n                    setOutput([...newArray])  \n                }            \n            }          \n            else \n            {          \n\n                let newArray = [...ssOutput];\n                newArray[indexRow].ini={id:null,name:\"\",days: 0};           \n                newArray[indexRow].fin={id:null,name:\"\",days: 0};\n                setOutput([...newArray])  \n                       \n            }\n            \n         }\n        const handleChangeOpPeriod = (e2:any)=>{\n            const {  value } = e2.target;\n            setPeriodSelected((prev)=>{\n                let newOption = [...prev];\n                newOption[indexRow] = parseInt(value);\n                return [...newOption];\n            })\n            setOptionSelec((prev)=>{\n                let newOption = [...prev];\n                newOption[indexRow] = 0;\n                return [...newOption];\n            })\n            let newArray = [...ssOutput];      \n            newArray[indexRow].ini={id:null,name:\"\",days: 0};           \n            newArray[indexRow].fin={id:null,name:\"\",days: 0};\n            newArray[indexRow].frec = 0;\n            newArray[indexRow].ref = row.refVar[0];\n            setOutput([...newArray])  \n\n        } \n        const handleFormRefVal = (e2:any)=>{\n            const {  value } = e2.target;\n\n            let newArray = [...ssOutput]; \n            newArray[indexRow].ref = row.refVar[value];\n            setOutput([...newArray])  \n        } \n\n        \n        \n         \n        const fcn_ListOptions = (indR:number)=>{\n            if(ssPeriodSelected[indR] > 0){\n                return optionGroup[ssPeriodSelected[indR]-1].map((numOp:number)=><option value={numOp} > {listOptions[numOp]}</option>)\n                \n            }            \n        } \n\n        return(\n            <div \n                style={{\n                    display: \"flex\",\n                    width:'100%',\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    alignContent:'center',\n                    padding:'10px',\n                    border:'3px solid rgb(20, 149, 131)',\n                    gap:'10px'\n                }}\n                key={indexRow}\n            >\n                <ElementTitleC\n                    text = { row.name }\n                />\n                <div style={{display:\"flex\",justifyContent:\"start\",justifyItems:\"start\", alignContent:'center', alignItems:'center',width:\"100%\",maxWidth:'730px',gap:\"15px\",}}>\n                    <span style={{justifySelf:'flex-start',color:'black'}}>{\"Intervalo de captación:\"}</span>\n                    <Form.Control  \n                        name={'selectOPeriod'} as=\"select\" value = {ssPeriodSelected[indexRow]} onChange={handleChangeOpPeriod} \n                        style={{width:\"200px\"}}>\n                        <option value={0} >  </option>                       \n                        {(visualContrains === \"\" || visualContrains[0] === \"1\")&&<option value={2} > Día concreto </option>}\n                        {(visualContrains === \"\" || visualContrains[1] === \"1\")&&<option value={3} > Periodo concreto </option>}\n                        {false &&(visualContrains === \"\" || visualContrains[2] === \"1\")&&!props.hidePeriodicidad&&<option value={1} > Con periodicidad </option>}\n                    </Form.Control>\n                </div>  \n                {ssPeriodSelected[indexRow] === 1?\n                <div style={{display:\"flex\",justifyContent:\"start\",justifyItems:\"start\", alignItems:'center',width:\"100%\",maxWidth:'730px',  padding:'10px 10px 10px 10px',\n                        border:'1px solid #ced4da', borderRadius:\"10px\"}}>\n                    <span style={{color:'black'}}> Defina la frecuencia: </span>\n                    <input \n                        style={{width:'60px',textAlign:'right',marginLeft:'20px'}}\n                        type=\"number\" name=\"deltaP\" id=\"deltaP\" onKeyDown={(e)=>handleKeyDown(e)} value={ssOutput[indexRow]?.frec} onChange={(e)=>handleInputFrecChange(e)} />\n                    <span style={{paddingLeft:\"10px\",color:'black'}}>{\"días\"}</span>\n                </div>\n                :\"\"}\n                {(ssPeriodSelected[indexRow] >= 2 || (ssPeriodSelected[indexRow] === 1 && ssOutput[indexRow].frec>0))?\n                    <div style={{\n                        display: \"flex\",\n                        width:'100%',\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        alignContent:'center',\n                        gap:'10px'\n                        }}>\n                     <div style={{display:\"flex\",justifyContent:\"start\",justifyItems:\"start\",width:\"100%\",maxWidth:'730px',gap:\"15px\",}}>\n                        <span style={{justifySelf:'flex-start',color:'black'}}>{\"Defina el periodo de estudio de [\"+ row.name+\"]\"}</span>\n                    </div> \n                    \n                    <Form.Control  \n                        name={'selectOption'} as=\"select\" value = {ssOptionSelec[indexRow]} onChange={handleChangeControl} \n                        style={{maxWidth:\"730px\"}}>\n                            {fcn_ListOptions(indexRow)}\n                    </Form.Control>\n                    </div>\n                    :\"\"\n                }\n                {ssOptionSelec[indexRow] > 0 && (ssPeriodSelected[indexRow] >= 2 || (ssPeriodSelected[indexRow] === 1 && ssOutput[indexRow].frec>0))?   \n                    <div\n                        style={{\n                            display:'flex',\n                            flexWrap:'wrap',\n                            justifyItems:'center',\n                            justifyContent:'center',                        \n                            gap:'10px',\n                            width:'100%',\n                            maxWidth:'730px',\n                            }}\n                        >                   \n                    \n                        <div\n                            style={{\n                                display:'flex',\n                                gap:'10px',\n                                whiteSpace: 'nowrap',\n                                justifyContent:'center',\n                                justifyItems:'center',\n                                alignContent:'center',\n                                alignItems:'center',\n                                border:'1px solid #ced4da',\n                                padding:'10px 10px 10px 10px',\n                                flexWrap:'wrap',\n                                borderRadius:'10px'\n\n                            }}\n                        >\n                        <span style={{justifySelf:'flex-start',color:'black'}}>{ssPeriodSelected[indexRow] === 2?\"Fecha:  \":\"Desde: \"}</span>\n                        <Autocomplete\n                            id={\"combo-ini\"+indexRow}\n                            disableClearable={true}\n                            size=\"small\"\n                            onChange={(event: any, newValue: iList | null)=>handleComboChange(newValue,'varINI')}\n                            options={row.varList}\n                            getOptionLabel={(option:any) => option.name}\n                            style={{ width: 180 }}\n                            value={ssOutput[indexRow].ini.id === null? undefined:row.varList.find((lElm:any)=>lElm.id === ssOutput[indexRow].ini.id)}\n                            renderInput={(params) => <TextField {...params}  label=\"Variable\" variant=\"outlined\" />}\n                            disabled={ssOptionSelec[indexRow]!==6}\n                        />\n                        <span style={{color:'black'}}>{\"+\"}</span>\n                        <input \n                            style={{width:'60px',textAlign:'right'}}\n                            type=\"number\" name=\"dINI\" id=\"dINI\" onKeyDown={(e)=>handleKeyDown(e)} value={ssOutput[indexRow].ini.days} onChange={(e)=>handleInputChange(e)} />\n                        <span style={{color:'black'}}>{\"días\"}</span>\n                        </div>\n                        {ssPeriodSelected[indexRow] === 2?\"\":\n                        <div\n                        style={{\n                            display:'flex',\n                            gap:'10px',\n                            whiteSpace: 'nowrap',\n                            justifyContent:'center',\n                            justifyItems:'center',\n                            alignContent:'center',\n                            alignItems:'center',\n                            padding:'10px 10px 10px 10px',\n                            border:'1px solid #ced4da',\n                            flexWrap:'wrap',\n                            borderRadius:'10px'\n\n                        \n                        }}\n                        >                            \n                        <span style={{justifySelf:'flex-start',color:'black'}}>{\"Hasta: \"}</span>\n                        <Autocomplete\n                                id={\"combo-fin\"+indexRow}\n                                disableClearable={true}\n                                size=\"small\"\n                                onChange={(event: any, newValue: iList | null)=>handleComboChange(newValue,'varFIN')}\n                                options={row.varList}\n                                getOptionLabel={(option:any) => option.name}\n                                style={{ width: 180 }}\n                                value={ssOutput[indexRow].fin.id === null? undefined:row.varList.find((lElm:any)=>lElm.id === ssOutput[indexRow].fin.id)}\n                                renderInput={(params) => <TextField {...params} label=\"Variable\" variant=\"outlined\" />}\n                                disabled={ssOptionSelec[indexRow]!==6}\n                            />\n                            <span style={{color:'black'}}>{\"+\"}</span>\n                            <input \n                                style={{width:'60px',textAlign:'right'}}\n                                type=\"number\" name=\"dFIN\" id=\"dFIN\" onKeyDown={(e)=>handleKeyDown(e)} value={ssOutput[indexRow].fin.days} onChange={(e)=>handleInputChange(e)} />\n                            <span style={{color:'black'}}>{\"días\"}</span>\n\n                        </div>\n                        }\n                       \n                    </div>\n                    \n                    :\"\"\n                }\n                {ssOptionSelec[indexRow]>0 && (ssPeriodSelected[indexRow] >= 2 || (ssPeriodSelected[indexRow] === 1 && ssOutput[indexRow].frec>0))?   \n                <div style={{display:\"flex\",justifyContent:\"start\",justifyItems:\"start\",width:\"100%\",maxWidth:'730px',  padding:'10px 10px 10px 10px',\n                        border:'1px solid #ced4da', borderRadius:\"10px\"}}\n                        >\n                    {row.refVar.length >1    ?\n                    <div \n                    style={{display:\"flex\",justifyContent:\"start\",justifyItems:\"start\",gap: '15px',alignItems:'center'}}\n                    >\n                        <span style={{whiteSpace: 'nowrap',color:'black'}}>{\"El intervalo debe contener:\"}</span>\n                        <Form.Control  \n                            name={'selectRef'} as=\"select\" value = {row.refVar.findIndex((vl:iList)=> vl.id === ssOutput[indexRow].ref.id)} onChange={(e)=>handleFormRefVal(e)} >\n                            {row.refVar.map((refL:any,indexRef:number)=>{\n                                return <option value={indexRef} > {refL.name} </option>\n                            })\n                            }\n                        </Form.Control>\n                    </div>\n                    \n                    :\n                    <span style={{color:'black'}}>{\"El estudio se realizará respecto a: [\"+ row.refVar.find((vl:iList)=>vl.id === ssOutput[indexRow].ref.id)?.name+\"]\"}</span>\n                    }\n                 </div> \n                 :\"\"\n                }\n            </div>\n        )\n    }\n\n    const fcn_renderComponent = ()=>{\n        return ( \n            <div\n            style={{width: \"100%\", gap: \"1rem\",\n                    display: \"flex\", flexDirection: \"column\", \n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",                                \n                    }}\n            >\n            {\n                values?.map((row:iInputData,index:number)=>{\n                    return (\n                        <div style={{display:visibleValues.find((el:iInputData)=>el.id===row.id)?'':'none',width:'100%'}}>\n                            {fcn_buildIntervalComp(row,index)}\n                        </div>\n                        \n                    )\n                })\n            }\n            </div>\n    \n        )\n        }\n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props}\n\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />           \n    )\n}\n\nexport default VarIntervalSelectionV2\n","import React from 'react'\nimport { defSelectedElem, defWhiteColor, defBlackColor, defBorderRadius, defGrayLightColor } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\n\nimport styled from 'styled-components';\nimport ElementInfoIcon from '../Elements/ElementInfoIcon'\nimport { TooltipNAV } from \"../Elements/ElementStyledTooltip\";\n\nconst BooleanSelectionTile = styled.button<ButtonProps>`\nborder: 0;\nwidth: 100%;\nmax-height: 6rem;\ncolor: ${({ active }) => (active ? defWhiteColor : defBlackColor)};\nbackground-color: ${({ active }) => (active ? defSelectedElem : defWhiteColor)};\nbox-shadow: ${defShadow};\nborder-radius: ${defBorderRadius};\ndisplay: flex;\nalign-items: center;\njustify-content: start;\ntransition: all 0.3s;\npadding: 1rem;\ngap: 1rem;\n&:hover {\n  background: ${({ active }) => (active ? \"\" : defGrayLightColor)};;\n  transition: all 0.2s ease 0s;\n}\n`;\nconst MySpan = styled.span`\n   overflow: hidden;\n   text-overflow: ellipsis;\n   display: -webkit-box;\n   -webkit-line-clamp: 2; /* number of lines to show */\n           line-clamp: 2; \n   -webkit-box-orient: vertical;\n`;\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n    defaultValue?: boolean;\n    hoverInfo?: string;\n}\n\ninterface Props {\n    value: iInputDataComp\n    description?: string\n    type?: string\n    onChange: (active: boolean) => void\n    active: boolean\n}\n\ninterface ButtonProps {\n    active: boolean\n}\n\n\n\nfunction ElementHorizontalTile(props: Props) {\n    const value = props.value;\n    const onClick = () => {\n        props.onChange(!props.active)\n    }\n\n    return (\n        <>\n            <TooltipNAV title={value.name} arrow>\n                <BooleanSelectionTile\n                    active={props.active}\n                    onClick={() => onClick()}\n                >\n                    <ElementInfoIcon\n                        hover={value.hoverInfo}\n                        contrast={props.active}\n                    />\n                    <MySpan\n                        style={{\n                            //     overflow: \"hidden\",\n                            //     whiteSpace: \"nowrap\",\n                            //     textOverflow: \"ellipsis\"\n                            textAlign: \"left\",\n                        }}\n\n                    >\n                        {value.name}\n                        {/* {value.name.croppedVersion(130)} */}\n                    </MySpan>\n                </BooleanSelectionTile>\n            </TooltipNAV>\n        </>\n    )\n}\n\nconst Tile = styled.button<ButtonProps>`\n    border: 0;\n    width: 100%;\n    height: 3rem;\n    color: ${({ active }) => (active ? defWhiteColor : defBlackColor)};\n    background-color: ${({ active }) => (active ? defSelectedElem : defWhiteColor)};\n    box-shadow: ${defShadow};\n    border-radius: ${defBorderRadius};\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    transition: all 0.3s;\n    padding: 1rem;\n    gap: 1rem;\n    &:hover {\n      background: ${({ active }) => (active ? \"\" : defGrayLightColor)};;\n      transition: all 0.2s ease 0s;\n    }\n  `;\n\nexport default ElementHorizontalTile\n","import React, { useEffect, useState } from 'react'\nimport ElementHorizontalTile from '../../../Elements/ElementHorizontalTile'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\ninterface Props {\n    body: any\n    onChange: (output: any) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n    defaultValue: boolean;\n    hoverInfo:string;\n}\n\ninterface iOutputDataComp {\n    id:any;\n    name:string;\n}\n\nfunction BooleanSelectionV2(props: Props) {\n    const values:iInputDataComp[] = props.body.values;\n    const previousInput = props.previousInput;\n\n    const [addedValues, setAddedValues] = useState<iOutputDataComp[]>([])\n    const [selectAllActive, setSelectAllActive] = useState<boolean>(false)\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        let aux:iOutputDataComp[] = []\n        if(previousInput===undefined)\n        {\n            for (let value of values) {\n                if (value.defaultValue === true){\n                    aux.push(value)\n                } \n            }   \n        }     \n        else aux = previousInput;\n        setAddedValues(aux)\n        setVisibleValues(values)        \n    }, [])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        if(addedValues.length>0 || Object.keys(props.body.values).length === 0)  props.onValidate(true)  \n        else  props.onValidate(false)  \n    }, [addedValues])\n\n    /// --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        props.onChange(addedValues)\n        // console.log(\"addedValues\", addedValues)\n    }, [addedValues])\n    \n    const isInAdded = (value: iInputDataComp): boolean => {\n        for (let currVal of addedValues) if (currVal.id === value.id) return true\n        return false\n    }\n    const addSingle = (value: iInputDataComp, active: boolean) => {\n        if (selectAllActive) setSelectAllActive(false)\n        let aux = []\n        if (active) aux.push({ id: value.id, name: value.name })\n        setAddedValues(aux)\n    }\n    const addMultiple = (value: iInputDataComp, active: boolean) => {\n        if (selectAllActive) setSelectAllActive(false)\n        let aux = [...addedValues]\n        if (active) {\n            aux.push({ id: value.id, name: value.name })\n        } else {\n            let idx = aux.findIndex((val)=>{return val.id === value.id})\n            aux.splice(idx, 1)\n        }\n        setAddedValues(aux)\n    }\n\n    const filter = (text: string) => {\n        let aux = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues(aux)\n    }\n\n    const selectAll = (active: boolean) => {\n        setSelectAllActive(active)\n        let aux = [...values]\n        if (!active) aux = []\n        setAddedValues(aux)\n    }\n\n    const fcn_renderComponent = ()=>{\n    return ( \n            <div style={{\n                display: \"flex\", flexDirection: \"column\",\n                padding: \"1rem\", gap: \"1rem\", width: \"100%\"\n            }}>                  \n            {\n                visibleValues.map((value: iInputDataComp) => {\n                    return <ElementHorizontalTile\n                                value={value}\n                                active={isInAdded(value)}\n                                onChange={(active) => {\n                                    props.body.singleChoice ?\n                                        addSingle(value, active) \n                                        :\n                                        addMultiple(value, active)\n                                }}\n                            />\n                        \n                    \n                })\n            }\n            </div>  \n    )\n    }\n\n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props.body}\n            infoSelec= {{\n                text:\"Seleccionar todas\",\n                active:selectAllActive,\n                onChange:(active:boolean) => selectAll(active)\n                }}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />          \n    )\n}\n\nexport default BooleanSelectionV2","import React, { ReactElement } from 'react'\nimport { defBlackColor, defBorderRadius, defMainThemeColor} from '../Shared/Colors'\nimport { TooltipNAV } from './ElementStyledTooltip';\n\nimport styled from 'styled-components'\n\nconst CustomFieldset = styled.fieldset`\n    border: 2px solid ${defMainThemeColor};\n    border-radius: ${defBorderRadius};\n    margin-bottom: 0.35rem;\n`\n\nconst CustomLegend = styled.legend`\n    color: ${defBlackColor};\n    /* color: black; */\n    font-weight: bold;\n    width: auto;\n    font-size:0.7rem;\n    padding:0rem 0.2rem;\n    text-align: right;\n    margin-right: 1.5rem;\n    margin-bottom: 0px;\n    max-width: 10rem;\n    /* max-width: 70%; */\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow:  ellipsis;\n    cursor: default;\n    \n`\n\n\ninterface Props {\n    legendFontSize?:string;\n    legendText?: string\n    children: ReactElement\n}\n\n\nfunction ElementMyFieldset(props: Props) {\n    const getLegendText= ()=>{\n        return props.legendText?props.legendText:'unknown'\n    }\n   \n    return (     \n            <CustomFieldset\n                style={{\n                    marginBottom:props.legendFontSize?\"calc(\"+props.legendFontSize+\"/2)\":\"\",\n                }}\n            >  \n                <TooltipNAV\n                    title={getLegendText()}\n                    arrow={true}\n                    placement={'top'}\n\n                >   \n                    <CustomLegend\n                        style={{\n                            fontSize:props.legendFontSize?props.legendFontSize:\"\",\n                        }}\n                        >{getLegendText()}\n                    </CustomLegend>\n                </TooltipNAV>\n\n                {props.children}\n\n            </CustomFieldset> \n    )\n}\n\nexport default ElementMyFieldset\n","import React, { useState } from 'react'\nimport { defBlackColor, defBorderRadius, defMainThemeColor, defWhiteColor,defBackGSubComp } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\nimport {TooltipNAV} from './ElementStyledTooltip';\nimport { BiText } from 'react-icons/bi'\nimport TextField from '@material-ui/core/TextField'; //npm install @material-ui/core\n\nimport ElementMyFieldset from './ElementMyFieldset'\nimport styled from 'styled-components'\n\nconst CustomFieldset = styled.fieldset`\n    border: 2px solid ${defMainThemeColor};\n    border-radius: ${defBorderRadius};\n    margin-bottom: 0.35rem;\n`\n\nconst CustomLegend = styled.legend`\n    color: ${defBlackColor};\n    /* color: black; */\n    font-weight: bold;\n    width: auto;\n    font-size:0.7rem;\n    padding:0rem 0.2rem;\n    text-align: right;\n    margin-right: 1.5rem;\n    margin-bottom: 0px;\n`\n\n\ninterface Props {\n    defaultText: string\n    leftText?: string\n    maxLenght: number | null\n    negColor?:boolean\n    onChange: (text: string) => void\n}\n\n\nfunction ElementTextField(props: Props) {\n    const [text, setText] = useState<string>(props.defaultText)\n    function validateInput(input: string): boolean {\n        let isValid = true\n        if (props.maxLenght && input.length > props.maxLenght) isValid = false\n        return isValid\n    }\n    const onChange = (newText: string) => {\n        if (validateInput(newText)) {\n            props.onChange(newText)\n            setText(newText)\n        }\n    }\n    return (\n        <div style={{\n            height: \"3rem\",\n            display: \"flex\",\n            gap: \"0.5rem\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        }}>\n            {/* OPCIÓN 1 */}\n            {/* {props.leftText?      \n            <TooltipNAV title={props.leftText} arrow={true} placement={'bottom'} >   \n            <div style={{\n                color:'black',\n                width: \"8rem\",\n                maxWidth: \"8rem\",\n                minWidth: \"8rem\",   \n\n                // backgroundColor:defBackGSubComp,\n                border: \"2px solid lightgray\",\n\n                fontWeight: 'bold', \n                height: \"3rem\", \n                // display:\"block\",\n                // alignItems: \"center\",\n                // justifyContent: \"center\"\n                display: \"inline-flex\",alignItems: \"center\",\n                borderRadius:\"0.5rem\",\n                justifyContent: \"center\",\n                boxShadow: defShadow,\n                padding: '0 0.6rem',\n                marginRight:\"1rem\",\n                cursor: 'default',\n                }}>                       \n                    <span style={{   overflow: \"hidden\",whiteSpace: \"nowrap\",textOverflow:\"ellipsis\", }}>\n                        {props.leftText} \n                    </span>\n                     \n            </div>    \n            </TooltipNAV>        \n            :null\n            }\n            \n            <BiText\n                color={defBlackColor}\n                size=\"2rem\"\n            />     \n            <input\n                value={text}\n                onChange={(e) => onChange(e.target.value)}\n                type=\"text\"\n                style={{\n                    // border: 0,\n                    width: \"100%\",\n                    backgroundColor: props.negColor !==undefined && props.negColor ===true ? defWhiteColor:defMainThemeColor,\n                    color: props.negColor !==undefined && props.negColor ===true ? defMainThemeColor:defWhiteColor,\n                    padding: \"0.4rem 0.8rem\",\n                    borderRadius: defBorderRadius,\n                    border:props.negColor !==undefined && props.negColor ===true ? \"2px solid \"+ defMainThemeColor:0,\n                }}\n            />   */}\n            {/* OPCIÓN 2 */}\n            <BiText\n                color={defBlackColor}\n                size=\"1.5rem\"\n            />   \n            <ElementMyFieldset\n                legendFontSize = {'0.8rem'}\n                legendText={props.leftText?props.leftText:'unknown'}\n                >                  \n                <input\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    type=\"text\"\n                    style={{\n                        // border: 0,\n                        width: \"90%\",\n                        backgroundColor: props.negColor !==undefined && props.negColor ===true ? defWhiteColor:defMainThemeColor,\n                        color: props.negColor !==undefined && props.negColor ===true ? defMainThemeColor:defWhiteColor,\n                        // padding: \"0.4rem 0.8rem\",\n                        padding: \"0rem 0.8rem 0.5rem 0rem\",\n                        // borderRadius: defBorderRadius,\n                        // border:props.negColor !==undefined && props.negColor ===true ? \"2px solid \"+ defMainThemeColor:0,\n                        border:0,                \n                        // paddingBottom:'0.7rem',\n                    }}\n                />                 \n            </ElementMyFieldset>           \n        </div>\n    )\n}\n\nexport default ElementTextField\n","import React, { useEffect, useState } from 'react'\nimport ElementTextField from '../../../Elements/ElementTextField'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\ninterface Props {\n    body: any\n    onChange: (output: any) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iInputDataComp {\n    id: number;\n    name: string;\n    realName: string;\n}\n\ninterface iOutputDataComp {\n    id: number;\n    name: string;\n    realName: string;\n}\n\nfunction InputString(props: Props) {    \n    // TEXTO SUPERIOR (PROPS)\n    const [values, setValues] = useState<iInputDataComp[]>([])\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        const defaultRealName = () => 'unknown'\n        let aux:iInputDataComp[] = [];\n        for (let value of props.body.values) {\n            let newValue = value\n            const prevValue = props.previousInput?.find((el:iInputDataComp)=>el.id===value.id);\n            if(prevValue !== undefined) newValue = prevValue;\n            if (!newValue.realName) newValue.realName = defaultRealName();\n            aux.push(newValue)\n        }\n        setVisibleValues([...aux])        \n        setValues([...aux])       \n    }, [])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        if(Object.keys(props.body.values).length === 0) props.onValidate(true);\n        else if(props.body.canBeEmpty !== undefined && props.body.canBeEmpty === true ) props.onValidate(true);\n        else{\n            if(values.every((tempAux:iOutputDataComp)=>tempAux.name.length>0)) props.onValidate(true);\n            else props.onValidate(false);\n        }   \n\n    }, [values])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() => {\n        props.onChange([...values])  \n    }, [values])\n\n\n    const changeInput = (idx: number, input: string) => {\n        let aux:iOutputDataComp[] = [...values]\n        aux[idx].name = input\n        setValues(aux)            \n    }\n\n    const filter = (text: string) => {\n        let aux = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    }   \n\n    const fcn_renderComponent = ()=>{\n    return ( \n        <div style={{\n            display: \"flex\", flexDirection: \"column\",\n            padding: \"1rem\", gap: \"1rem\", \n        }}>  \n        {\n        values.map((value: iInputDataComp, idx: number) => {\n            return (\n            <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===value.id)?'':'none'}}>\n                <ElementTextField\n                    defaultText={value.name}\n                    leftText={value.realName}\n                    maxLenght={null}\n                    negColor={true}\n                    onChange={(input) => changeInput(idx, input)}\n                />\n            </div>\n            )\n        })\n        }\n        </div>\n    )\n    }\n            \n    if(values.length === 0) return null\n    return (      \n        <LayoutElement        \n            propsComp = {props.body}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />  \n    )\n}\n\nexport default InputString\n","import React, { useEffect, useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\nimport ElementTitleC from '../../../Elements/ElementTitleC'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\nimport * as colorDef from '../../../Shared/Colors'\n\ninterface Props {\n    body: any\n    onChange: (data: any[]) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n}\n\ninterface iOutputDataComp {\n    id:any;\n    name:string;\n    dateINI: string|undefined;\n    dateEND: string|undefined;\n}\n\nfunction IntervalTimeSelection(propsComp: Props) {\n    const props = propsComp.body;\n    const values:iInputDataComp[] = props.values;\n    const previousInput = propsComp.previousInput;\n    \n    const today = new Date().toISOString().slice(0,10);    \n    \n    const [ssOptionSelec, setOptionSelec] = useState<number[]>([]);\n    const [ssDateIni, setDateIni] = useState<string[]>([]);\n    const [ssDateEnd, setDateEnd] = useState<string[]>([]);\n\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {           \n        \n        let arrayDateIni:string[] = [];\n        let arrayDateFin:string[] = [];\n        let arrayOptions:number[] = [];    \n        if(previousInput===undefined )\n        {\n            let defaultOp = 1;       \n            if(props.defaultOptionValue && typeof(props.defaultOptionValue) === 'number'\n                && props.defaultOptionValue>=1 && props.defaultOptionValue<=4){\n                defaultOp = props.defaultOptionValue;\n\n            }\n            \n            for (let index = 0; index < values.length; index++) {\n                arrayDateIni.push(today);  \n                arrayOptions.push(defaultOp);\n            }\n            arrayDateFin =  arrayDateIni;\n        }\n        else{\n            for(let prevIn of previousInput)\n            {\n                if(prevIn.dateINI === 'undefined' && prevIn.dateEND === 'undefined')\n                {\n                    arrayOptions.push(1);\n                    arrayDateIni.push(today); \n                    arrayDateFin.push(today); \n                }\n                else if(prevIn.dateEND === 'undefined')\n                {\n                    arrayOptions.push(2);\n                    arrayDateIni.push(prevIn.dateINI); \n                    arrayDateFin.push(prevIn.dateINI); \n\n                }\n                else if(prevIn.dateINI === 'undefined')\n                {\n                    arrayOptions.push(3);\n                    arrayDateIni.push(prevIn.dateEND); \n                    arrayDateFin.push(prevIn.dateEND); \n                }\n                else\n                {\n                    arrayOptions.push(4);\n                    arrayDateIni.push(prevIn.dateINI); \n                    arrayDateFin.push(prevIn.dateEND); \n                }\n            }\n        }\n        setOptionSelec(arrayOptions)\n        setDateIni(arrayDateIni)\n        setDateEnd(arrayDateFin)\n    },[])\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // -------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        propsComp.onValidate(ssOptionSelec.every((el,idxE)=>el<4 || (el === 4 && new Date(ssDateIni[idxE]) <= new Date(ssDateEnd[idxE]))))    \n    },[ssOptionSelec,ssDateIni,ssDateEnd])\n   \n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {   \n        var arrayOutputData:iOutputDataComp[] = [];\n        for (let index = 0; index < values.length; index++) { \n            let outputData:iOutputDataComp = {id:values[index].id, name:values[index].name, dateINI:'undefined', dateEND: 'undefined'};\n            if(ssOptionSelec[index] === 2 || ssOptionSelec[index] === 4) outputData.dateINI = ssDateIni[index];\n            if(ssOptionSelec[index] > 2) outputData.dateEND = ssDateEnd[index];\n            arrayOutputData.push(outputData );\n        }\n\n        propsComp.onChange([...arrayOutputData]);        \n    },[ssOptionSelec,ssDateIni,ssDateEnd])\n\n    //---------------------------------------------------------------------------------\n   const filter = (text: string) => {\n        let aux = []\n        for (let value of props.values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    }   \n\n    const fcn_buildIntervalComp = (row:iInputDataComp,index:number)=>{        \n        const handleChange = (e:any, index:number) =>{\n            if(e.target.name === 'startDate'){\n                let newVal = [...ssDateIni];\n                let value = e.target.value\n                if(value !== ''){\n                    value= new Date(e.target.value) > new Date(ssDateEnd[index])?ssDateEnd[index]:e.target.value;                         \n                    newVal[index] = value\n                    setDateIni(newVal)\n                }\n            } \n            if(e.target.name === 'endDate'){\n                let value = e.target.value\n                let newVal = [...ssDateEnd];\n                if(value !== ''){                    \n                    value = new Date(e.target.value) > new Date(today)?today:e.target.value;\n                    if(ssDateIni[index] !== today && new Date(value)<new Date(ssDateIni[index]))value=ssDateIni[index]\n                    newVal[index] =  value\n                    setDateEnd(newVal)\n                }\n            }     \n            if(e.target.name === 'selectOption'){\n                let newVal = [...ssOptionSelec];\n                newVal[index] = parseInt(e.target.value);\n                setOptionSelec(newVal)\n                let newVal1 = [...ssDateIni];\n                newVal1[index] = today;\n                setDateIni(newVal1)\n                let newVal2 = [...ssDateEnd];\n                newVal2[index] = today;\n                setDateEnd(newVal2)\n            } \n        }\n\n        const handleKeydownEvent = (e:any)=>{\n            // console.log(e.key === \"ArrowUp\")\n            if(!(e.key === \"ArrowUp\" || e.key === \"ArrowDown\" || e.key === \"ArrowLeft\" || e.key === \"ArrowRight\"))e.preventDefault()\n        }\n\n        return(\n            <div style={{\n                    display: \"flex\",\n                    width:'100%',\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    alignContent:'center',\n                    padding:'10px',\n                    border:'3px solid '+colorDef.defMainThemeColor,\n                    gap:'10px'\n                }}>\n                <ElementTitleC\n                    text = { row.name }\n                />\n                <Form.Control  \n                    name={'selectOption'} as=\"select\" value = {ssOptionSelec[index]} onChange={(e)=>handleChange(e,index)} >\n                    <option value={1} >  sin restricciones </option>\n                    <option value={2} >  desde ... </option>\n                    <option value={3} >  hasta ... </option>\n                    <option value={4} >  desde ... hasta ... </option>\n                </Form.Control>\n                {ssOptionSelec[index] > 1?\n                    <div style={{\n                        display: \"flex\",\n                        width:'100%',\n                        flexDirection: \"row\",\n                        flexWrap:'wrap',\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        gap:'25px',\n                        paddingTop:\"10px\",\n                    }}>  \n                    {(ssOptionSelec[index] === 2 || ssOptionSelec[index] === 4)?         \n                            <div style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                flexWrap:'wrap',\n                                alignItems: \"center\",\n                                justifyContent:'center',\n                                gap:'20px',\n                                padding:\"0px 10px 0px 10px\",\n                            }}>\n                            <span style={{color:'black', width:\"6rem\"}}>Fecha inicial</span>\n                            <input name={'startDate'} type='date' value={ssDateIni[index]} onChange={(e)=>handleChange(e,index)} \n                                max={ssOptionSelec[index] === 4? ssDateEnd[index]:today}\n                                style={{ textAlign: 'right' ,width:'150px'}} \n                                onKeyDown={(e) => handleKeydownEvent(e)} \n                                />\n                            </div> \n                            :\"\"\n                        }\n                        {(ssOptionSelec[index] > 2)?  \n                        <div  style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            flexWrap:'wrap',\n                            alignItems: \"center\",\n                            justifyContent:'center',\n                            gap:'20px',            \n                            padding:\"0px 10px 0px 10px\",                \n                            }}>\n                                <span style={{color:'black', width:\"6rem\"}}>Fecha final </span>\n                                <input name={'endDate'} type='date' value={ssDateEnd[index]} onChange={(e)=>handleChange(e,index)}\n                                min={ssOptionSelec[index] === 3?\"\":ssDateIni[index]} max={today}\n                                style={{ textAlign: 'right' ,width:'150px'}}\n                                // onKeyDown={(e) => e.preventDefault()} \n                                />\n                        </div> \n                        :\"\"\n                        }\n                    </div>\n                    :\n                    \"\"\n                }\n                \n            </div>\n        )\n    }\n    const fcn_renderComponent = ()=>{\n    return ( \n        <>\n        <div style={{width:\"100%\",display:\"grid\",gridTemplateRows:\"1fr 40px\"}}>\n        {\n        values.map((row:iInputDataComp,index:number)=>{\n            return (\n                <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===row.id)?'':'none',width:'100%'}}>\n                    {fcn_buildIntervalComp(row,index)}\n                </div>\n            )\n        })\n        }\n        {/* Elininar en la versión final */}\n        {ssOptionSelec[0]===4 &&\n            <button  style={{width:\"10rem\",justifySelf: 'center', backgroundColor:colorDef.defGreenColor, border:0, color:'white'}}\n                onClick={()=>{               \n                let arrayIni:string[] = [];\n                let arrayFin:string[] = [];\n                ssDateIni.forEach(el => {\n                        arrayIni.push(new Date('2021-07-01').toISOString().slice(0,10) );\n                        arrayFin.push(new Date('2021-07-07').toISOString().slice(0,10));\n                });\n                    \n                    setDateIni([...arrayIni]); setDateEnd([...arrayFin])}}\n            >\n                Default date\n            </button>\n        }\n        </div>\n        </>\n    )\n    }\n\n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />          \n    )\n}\n\nexport default IntervalTimeSelection\n","import React from 'react'\nimport { defWhiteColor, defBlackColor } from '../Shared/Colors'\nimport { defShadow } from '../Shared/Shadows'\n\ninterface Props {\n    text: string\n}\n\nfunction ElementInfoCard(props: Props) {\n    return (\n            <span style={{\n                backgroundColor: defWhiteColor,\n                color: defBlackColor,\n                borderRadius: \"1rem\",\n                boxShadow: defShadow,\n                padding: \"1rem\",\n                width: \"100%\"\n            }}>\n                { props.text }\n            </span>\n    )\n}\n\nexport default ElementInfoCard\n","import React, { useEffect } from 'react'\nimport ElementInfoCard from '../../../Elements/ElementInfoCard'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\ninterface Props {\n    body: any\n    onChange: (output: any) => void\n    onValidate: (validationWasCorrect: boolean) => void\n}\n\nfunction InfoScreen(props: Props) {\n\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n    useEffect(() =>\n    {      \n        props.onValidate(true);        \n    },[])\n\n    const fcn_renderComponent = ()=>{\n        return ( \n        <div style={{width: \"100%\", gap: \"1rem\",\n            display: \"flex\", flexDirection: \"column\", \n            alignItems: \"center\",\n            justifyContent: \"flex-start\",                                \n            padding:'5px',\n            }}\n        >\n            {\n            props.body.values.map((valueText: any) => {\n            return <ElementInfoCard text={valueText.text}/>\n            })\n            }\n        </div>\n        )\n    }\n\n    return (\n        <LayoutElement        \n                    propsComp = {props.body}  \n                    elementRender={fcn_renderComponent()}\n                />   \n\n    )\n}\n\nexport default InfoScreen\n","import React, { ReactElement } from 'react'\nimport { defBlackColor } from '../Shared/Colors'\n\ninterface Props {\n    text: string\n    boldText: boolean\n    element: ReactElement\n}\n\nfunction ElementTextSide(props: Props) {\n    return (\n        <div style={{\n            display: \"flex\",\n            gap: \"1rem\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n        }}>\n            {props.text !== \"\"?\n            <span style={{\n                fontWeight: props.boldText ? \"bold\" : \"normal\",\n                color: defBlackColor\n            }}>{props.text}</span>\n            :null}\n            {props.element}\n        </div>\n    )\n}\n\nexport default ElementTextSide\n","import React, { useEffect, useState } from 'react'\nimport ElementExpandibleTitle from '../../../Elements/ElementExpandibleTitle'\nimport ElementSwitch from '../../../Elements/ElementSwitch'\nimport ElementTextSide from '../../../Elements/ElementTextSide'\nimport LayoutElement from '../../../Elements/LayoutElement'\n\ninterface Props {\n    body: any\n    onChange: (output: any) => void\n    onValidate: (validationWasCorrect: boolean) => void\n    previousInput: any\n}\n\ninterface iList {\n    id: any;\n    name: string;\n    activeByDefault: boolean;\n}\n\ninterface iInputDataComp {\n    id: any;\n    name: string;\n    hoverInfo?:string;\n    expandedByDefault: boolean;\n    varList:iList[];\n}\n\ninterface iSelected {\n    id: any;\n    name: string;\n}\n\ninterface iOutputDataComp {\n    id: any;\n    name: string;\n    varSelected:iSelected[];\n}\n\n\n\nfunction MultiBooleanSelection(props: Props) {\n    const values:iInputDataComp[] = props.body.values;\n    const previousInput  = props.previousInput;\n\n    // TEXTO SUPERIOR (PROPS)\n    const [currentOutput, setCurrentOutput] = useState<iOutputDataComp[]>([])\n    const [expandedGroups, setExpandedGroups] = useState<string[]>([])\n    const [visibleValues, setVisibleValues] = useState<iInputDataComp[]>([...values])\n\n    \n    // --------------------------------------------------------------------------------\n    // INITIAL VALUES \n    // --------------------------------------------------------------------------------\n    useEffect(() => {        \n        let expandedGroups: string[] = []\n        if(previousInput!==undefined)\n        {\n            const arrayOutput:iOutputDataComp[] = [...previousInput];\n            for (let el of previousInput)\n            {\n                expandedGroups.push(el.id)\n            }\n            setCurrentOutput(arrayOutput)\n        }\n        setExpandedGroups(expandedGroups)    \n         \n    }, [])\n    // --------------------------------------------------------------------------------\n    // CanProceed? \n    // --------------------------------------------------------------------------------\n     useEffect(() =>\n     {   \n        if(currentOutput.length>0 || Object.keys(props.body.values).length === 0)  props.onValidate(true)    \n        else  props.onValidate(false)    \n     },[currentOutput])\n\n    // --------------------------------------------------------------------------------\n    // UPDATE OUTPUT\n    // -------------------------------------------------------------------------------- \n    useEffect(() =>\n    {   \n        props.onChange([...currentOutput]) \n    },[currentOutput])\n\n\n    function addVar(varGroupId: number, varGroupName: string, varId: string, varName: string) {\n        let aux =  props.body.singleChoice? []:[...currentOutput]\n        let groupIdx = aux.findIndex((group) => group.id === varGroupId)\n        if (groupIdx < 0) {\n            aux.push({\n                id: varGroupId,\n                name: varGroupName,\n                varSelected: [{id: varId, name: varName}]\n            })\n        } else {\n            let varIdx = aux[groupIdx].varSelected.findIndex((varia: iSelected) => varia.id === varId)\n            if (varIdx < 0) {\n                aux[groupIdx].varSelected.push({id: varId, name: varName})\n            } else {\n                aux[groupIdx].varSelected.splice(varIdx, 1)\n                if (aux[groupIdx].varSelected.length  === 0) {\n                    aux.splice(groupIdx, 1)\n                }\n            }\n        }\n        setCurrentOutput(aux)\n    }\n\n    \n\n    const expandGroup = (expanded: boolean, groupId: string) => {\n        //console.log(\"EXPANDING\")\n        let aux = [...expandedGroups]\n        if (expanded) {\n            aux.push(groupId)\n        }\n        else {\n            let idx = aux.indexOf(groupId)\n            aux.splice(idx, 1)\n        }\n        setExpandedGroups(aux)\n    }\n\n    const inExpandedGroups = (groupId: string) => {\n        return expandedGroups.indexOf(groupId) >= 0\n    }\n\n    const inSelectedOptions = (groupId: string, optionId: string) => {\n        let groupIdx = currentOutput.findIndex((group: iOutputDataComp) => group.id === groupId)\n        if (groupIdx < 0) return false\n        else {\n            let varIdx = currentOutput[groupIdx].varSelected.findIndex((varia: iSelected) => varia.id === optionId)\n            if (varIdx < 0) return false\n        }\n        return true\n    }\n           \n    const filter = (text: string) => {\n        let aux = []\n        for (let value of values) {\n            if (value.name.toLowerCase().includes(text.toLowerCase())) aux.push(value)\n        }\n        setVisibleValues([...aux])\n    }   \n\n    const fcn_renderComponent = ()=>{\n        return ( \n            <div style={{width: \"100%\", gap: \"1rem\",\n            display: \"flex\", flexDirection: \"column\", \n            alignItems: \"center\",\n            justifyContent: \"flex-start\",                                \n            padding:'5px',\n            paddingBottom:'15px',\n            }}\n            >\n            {\n                values.map((group: iInputDataComp, groupIdx: number) => {\n                    return(\n                        <div style={{display:visibleValues.find((el:iInputDataComp)=>el.id===group.id)?'':'none',width:'100%'}}>\n                        <ElementExpandibleTitle\n                        title={group.name}\n                        hoverInfo = {group.hoverInfo}\n                        expanded={inExpandedGroups(group.id)}\n                        onChange={()=>{}}\n                        onClickTitle={() => {expandGroup(!inExpandedGroups(group.id), group.id)}}\n                        elements={[\n                            props.body.values[groupIdx].varList.map((option: iList, optionIdx: number) => {\n                                return <ElementTextSide\n                                    text={option.name}\n                                    boldText={false}\n                                    element={\n                                        <ElementSwitch\n                                            active={inSelectedOptions(group.id, option.id)}\n                                            onChange={() => {addVar(group.id, group.name, option.id, option.name)}}                                            \n                                        />\n                                    }\n                                />\n                            })\n                        ]}\n                        />\n                        </div>\n                    )    \n                })\n            }\n            </div>\n        )\n        }\n\n    if(values.length === 0) return null\n    return (\n        <LayoutElement        \n            propsComp = {props.body}\n            infoSearch={{\n                text:\"\",\n                onChange:(search) => filter(search)\n            }}\n    \n            elementRender={fcn_renderComponent()}\n        />         \n    )\n}\n\nexport default MultiBooleanSelection\n\n","import React, { ReactElement, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { BiX } from 'react-icons/bi'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n// MY COMPONENTS -  ELEMENTS\nimport RenderProgress from '../../ComponentsProgressDisplayers/RenderProgressScreenOutputs'\nimport { ElementBagdeTreeItem} from '../../Elements/ElementBagdeTreeItem';\nimport { TooltipNAV } from \"../../Elements/ElementStyledTooltip\";\n\n// SCREENS\nimport ValueInsert from './ScreenComponents/ValueInsert'\nimport MultiTileSelect from './ScreenComponents/MultiTileSelectV2'\nimport GroupMultiTileSelect from './ScreenComponents/GroupMultiTileSelectV2'\nimport VarIntervalSelection from './ScreenComponents/VarIntervalSelectionV3'\nimport BooleanSelectionV2 from './ScreenComponents/BooleanSelectionV2'\nimport InputString from './ScreenComponents/InputString'\nimport IntervalTimeSelection from './ScreenComponents/IntervalTimesSelection'\nimport InfoScreen from './ScreenComponents/InfoScreen'\nimport TileSelectionV3 from './ScreenComponents/TileSelectionV3'\nimport MultiBooleanSelection from './ScreenComponents/MultiBooleanSelection'\n\n// MODELS\nimport { cPackFE,SchemaProgressOutput} from '../../Models/cPackFE'\nimport SchemaScreen from '../../Models/SchemaScreen'\nimport SchemaScreenComponent from '../../Models/SchemaScreenComponent'\n\n// SHARE\nimport {defInfoBackground,defFilterColor,defButtonCancel,defButtonCancelText} from \"../../Shared/Colors\"\nimport  * as colorDef from '../../Shared/Colors'\n\n// API\n\nconst GeneralContainer = styled.div`\n    width: 100vw;\n    max-height: 100vh;\n    height: 100vh;\n    position: absolute;\n    top:0;\n    left:0;\n    background-color: rgba(0,0,0,0.5);\n    backdrop-filter: blur(0.3rem);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    z-index: 600;\n    padding: 1rem;\n`\n\nconst CancelButton = styled.button`\n    border: 0;\n    border-radius: 0.7rem;\n    background-color: ${defButtonCancel};\n    color: ${defButtonCancelText};\n    height: 2.7rem;\n    width: 9rem;\n    padding: 1rem;\n    padding-right: 1.5rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 0.2rem;\n`\nconst CardsContainer = styled.div`\n    width: 100%;\n    max-height: 52rem;\n    height: 52rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n`\n\nconst LeftCardContainerV2 = styled.div`\n    width: 53rem;\n    height: 100%;\n    max-height: 85vh;\n    border-radius: 1rem;\n    background-color: white;\n    display: grid;\n    grid-template-rows: 3.5rem minmax(0,1fr);\n    padding: 1rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    overflow-y: auto;\n`\n\nconst RightCardContainer = styled.div`\n    width: 30rem;\n    height: 100%;\n    max-height: 85vh;\n    border-radius: 1rem;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n`\nconst NavigationButtonsContainer = styled.div`\n    width: 100%;\n    max-width:53rem;\n    display: grid;\n    grid-template-columns: repeat(3,1fr);\n    padding-top: 1rem;\n    justify-items: center;\n`\n\n\nconst NavigationButton = styled.button`\n    height: 2.7rem;\n    width: 9rem;\n    background-color: white;\n    color: black;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content:center;\n    border: 0;\n    border-radius: 1rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    font-weight: bold;\n    gap: 0.5rem;\n`\n\nconst TitleContainer = styled.div`\n    width: 100%;\n    background-color: #149583;\n    border-radius: 1rem;\n    color: white;\n    padding: 0.7rem;\n    font-size: 1.5em;\n    z-index: 800;\n`\nconst TitleContainerV2 = styled.div`\n    width: 100%;\n    background-color: #149583;\n    border-radius: 1rem;\n    color: white;\n    font-size: 1.5em;\n    z-index: 800;\n    display: flex;\n    height: 100%;\n    justify-items: center;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n`\nconst ProgressValuesContainer = styled.div`\n    width: 100%;\n    max-height: 15rem;\n    gap:1rem;\n`\n\n\ninterface Props {\n    screen: SchemaScreen\n    progress: cPackFE\n    editingMode:boolean\n    onHide: () => void\n    onSave: (currentScreen: SchemaScreen, output: any) => Promise<any>\n    onBack: () => void\n}\n\nfunction Popup(props: Props) {\n    const [currentOutput, setCurrentOutput] = useState<any[]>([]);\n    // Esta variable de estado determina si se puede avanzar a la siguiente\n    // página. Es decir, si el input que ha realizado (o no realizar ninguno)\n    // es admisible.\n    // Su valor por defecto es \"false\", por lo tanto si un componente puede\n    // aceptar el no recivir input puede poner en \"true\" esta variable en el\n    // useEffect.\n    // En el resto de casos, se debe poner en \"true\" cuando el input del usuario\n    // sea correcto y volver a poner en \"false\" cuando no lo sea.\n    const [canProceed, setCanProceed] = useState<boolean[]>();\n    const [ssCurrentCompIndex, setCurrentCompIndex] = useState<number>(0);\n\n    useEffect(() => {\n        let arrayFalse = []\n        for (let i = 0; i < props.screen.components.length; i++) {\n            arrayFalse.push(false)\n        }\n        setCanProceed(arrayFalse)\n        const idxComp = props.screen.components.findIndex((comp: any) => comp.props.values.length > 0);\n        setCurrentCompIndex(idxComp === -1 ? props.screen.components.length - 1 : idxComp)\n    }, [props.screen])\n\n    const fcn_RestartCanProceeed = () => {\n        setCanProceed(undefined);\n    }\n\n    const fcn_UpdateCanProceeed = (procComp: boolean, idK: number) => {\n        setCanProceed((prev) => {\n            if (prev !== undefined) {\n                let newArray = [...prev];\n                newArray[idK] = procComp;\n                return [...newArray]\n            }\n        }\n        )\n    }\n\n    const addOutput = (outputKey: string, componentType:string, id: string, output: any) => {\n        let aux: any[] = [...currentOutput]\n        let outputIndex = -1\n        currentOutput.forEach((outputInner, idx) => {\n            if (outputInner.output_key === outputKey) outputIndex = idx;\n        })\n        if (outputIndex >= 0) {\n            aux[outputIndex].values = output\n        } else {\n            aux.push({\n                output_key: outputKey,\n                componentId: id,\n                componentType:componentType,\n                values: output\n            })\n        }\n        setCurrentOutput(aux)\n    }\n\n    const fcn_Siguiente = () => {\n        if(canProceed){\n            let auxCompIndex = ssCurrentCompIndex;\n            let isNewComp = false;\n            while (auxCompIndex < props.screen.components.length - 1 && !isNewComp) {\n                if (props.screen.components[auxCompIndex + 1].props.values.length > 0) isNewComp = true;\n                else auxCompIndex++;\n            }\n            if (isNewComp) {\n                setCurrentCompIndex(auxCompIndex + 1);\n            }\n            else {\n                props.onSave(props.screen, currentOutput)\n                fcn_RestartCanProceeed();\n                setCurrentOutput([])\n            }\n        }\n    }\n\n    const fcn_Anterior = () => {\n        if(canProceed){\n            let auxCompIndex = ssCurrentCompIndex;\n            let isNewComp = false;\n            while (auxCompIndex > 0 && !isNewComp) {\n                if (props.screen.components[auxCompIndex - 1].props.values.length > 0) isNewComp = true;\n                else auxCompIndex--;\n            }\n            if (isNewComp) {\n                setCurrentCompIndex(auxCompIndex - 1);\n            }\n            else {\n                props.onBack()\n                fcn_RestartCanProceeed()\n                setCurrentOutput([])\n            }\n        }\n    }\n\n    const fcn_StringCurrentComponent = () => {\n        let idxComp = 0;\n        let maxComp = 0;\n        props.screen.components.forEach((comp: any, idx: number) => {\n            if (comp.props.values.length > 0) maxComp++;\n            if (idx === ssCurrentCompIndex) idxComp = maxComp;\n\n        })\n        if (maxComp > 1) {\n            return \" (\" + idxComp + \"/\" + maxComp + \")\"\n        }\n        return \"\"\n    }\n\n    const renderComponent = (component: SchemaScreenComponent, key: number): ReactElement => {\n        let outputKey = component.outputKey\n        let id = component.id\n        let propsComp = component.props\n        let prevInputsBE = component.prevValues.length>0?component.prevValues:undefined;\n\n        if (canProceed !== undefined) {\n            switch (component.type) {\n                case \"InfoScreen\":\n                    return <InfoScreen\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                    />\n                case \"TileSelection\":\n                    return <TileSelectionV3\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"MultiBooleanSelection\":\n                    return <MultiBooleanSelection\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"BooleanSelection\":\n                    return <BooleanSelectionV2\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"InputString\":\n                    return <InputString\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"IntervalTimeSelection\":\n                    return <IntervalTimeSelection\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"VarIntervalSelection\":\n                    return <VarIntervalSelection\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"ValueInsert\":\n                    return <ValueInsert\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"MultiTileSelect\":\n                    return <MultiTileSelect\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n                case \"GroupMultiTileSelect\":\n                    return <GroupMultiTileSelect\n                        key={key}\n                        body={propsComp}\n                        onChange={(output) => addOutput(outputKey, component.type, id, output)}\n                        onValidate={(validationWasCorrect) => fcn_UpdateCanProceeed(validationWasCorrect, key)}\n                        previousInput={prevInputsBE}\n                    />\n\n                default:\n                    return <span style={{ color: \"black\" }}>Este componente no existe todavía!</span>\n            }\n        }\n        return <span style={{ color: \"black\" }}>Loading...</span>\n    }\n    const renderProgress = (progOuts: SchemaProgressOutput[]) => {\n        return <RenderProgress\n                    progressOutput={progOuts}\n                />      \n    }\n    \n    const getColorTitleContainer = () => {\n        let colorTitle = \"\"\n        switch(props.progress.type) {\n            case \"Filtro\":\n                colorTitle = colorDef.defFilterColor\n              break;\n            case \"Master\":\n                colorTitle = colorDef.defMasterColor\n              break;\n            case \"Asociada\":\n                colorTitle = colorDef.defAsociadaColor  \n                break;  \n          } \n        return colorTitle\n    }\n\n    return (\n        <GeneralContainer>\n            <CardsContainer>\n                <LeftCardContainerV2\n                    onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => e.stopPropagation()}\n                >\n                    <TitleContainerV2                         \n                    ><span dangerouslySetInnerHTML={{ __html: props.screen?.title + fcn_StringCurrentComponent() }} /></TitleContainerV2>\n\n                    {\n  \n                        props.screen.components[ssCurrentCompIndex] ?\n                            renderComponent(props.screen.components[ssCurrentCompIndex], ssCurrentCompIndex)\n                            : \"error\"\n                    }\n                </LeftCardContainerV2>\n                <RightCardContainer\n                    onClick={(event) => {\n                        event.stopPropagation()\n                    }}\n                >\n                    <TitleContainer\n                        style={{backgroundColor:getColorTitleContainer()}}\n                        >\n                        Resumen\n                    </TitleContainer>\n                    <Accordion\n                        style={{\n                            borderRadius: \"1rem\",\n                            boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                            marginTop: \"1rem\",\n                            marginBottom: \"0.8rem\",\n                            height:\"3.2rem\",\n                            display:\"flex\",\n                            alignItems:'center',\n                            justifyContent:'center',\n                            backgroundColor:defInfoBackground,\n                            border: \"1px solid lightgray\",\n                        }}>\n                        <div style={{\n                            display:\"flex\",\n                            alignItems:'center',\n                            justifyContent:'center',\n                            gap:'1rem',\n                            padding: \"0.5rem 1rem\",\n                            width: \"100%\",\n                            \n                        }}>\n                            <ElementBagdeTreeItem\n                                type={props.progress.type}\n                                size={'1.3rem'}\n                            />\n                             <TooltipNAV title={props.progress.group.name} arrow>       \n                                <div style={{ fontWeight: \"bold\",\n                                        textAlign:\"left\" , \n                                        fontSize:\"1.2rem\",\n                                        overflowX: \"hidden\",\n                                        whiteSpace: \"nowrap\",\n                                        textOverflow: \"ellipsis\",\n                                        width: \"100%\",                                        \n                                    }}>\n                                        {props.progress.type===\"Filtro: \"?\"\":\"Grupo: \"} {props.progress.group.name}\n                                </div>                \n                            </TooltipNAV >                            \n                        </div>\n                    </Accordion>\n                    <div\n                        style={{overflowY:\"scroll\", padding:\"0.2rem 0.3rem 0.5rem 0.3rem\",  gap:\"1rem\", display:\"flex\", flexDirection:\"column\"}}\n                    >\n                    {\n                        props.progress.screens.map((progScreen) => {\n                            if (progScreen.outputs.values != null) {\n                                return (\n                                    progScreen.outputs.length > 0 ?\n                                        <Accordion style={{\n                                            borderRadius: \"1rem\",\n                                            boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px\",\n                                            margin: \"0rem\",\n                                        }}>\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls=\"acc-content\"\n                                                id=\"acc-header\"\n                                            >\n                                                <span style={{ fontWeight: \"bold\",textAlign: \"left\" }}>{progScreen.screenTitle}</span>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                <ProgressValuesContainer>                                                   \n                                                    {renderProgress(progScreen.outputs)}\n                                                </ProgressValuesContainer>\n                                            </AccordionDetails>\n                                        </Accordion>\n                                        : null\n                                )\n                            }\n                        })\n                    }\n                    </div>\n                </RightCardContainer>\n            </CardsContainer>\n            <NavigationButtonsContainer>\n                <NavigationButton\n                    onClick={(event) => {\n                        event.stopPropagation()\n                        fcn_Anterior();\n                    }}\n                    style={{\n                        visibility: props.progress.screens.length > 1 ?\n                            \"visible\" : \"hidden\",\n                        paddingRight: '1.5rem',\n                    }}\n                >\n                    <FaChevronLeft />\n                    Anterior\n                </NavigationButton>\n                <CancelButton \n                    onClick={() => props.onHide()}\n                    style={{visibility: !props.editingMode? \"visible\" : \"hidden\"}}\n                    >\n                    <BiX size=\"1.5em\" />\n                    Cancelar\n                </CancelButton>\n                <NavigationButton\n                    onClick={(event) => {\n                        event.stopPropagation()\n                        fcn_Siguiente();\n                    }}\n                    disabled={\n                        canProceed ?\n                            !canProceed[ssCurrentCompIndex] ?\n                                true : false\n                            : false\n                    }\n                    style={{\n                        paddingLeft: '1.5rem',\n                        backgroundColor: canProceed ?\n                            !canProceed[ssCurrentCompIndex] ?\n                                \"gray\" : \"\"\n                            : \"gray\",\n                    }}\n                >\n                    {props.screen.id===\"screen_FIN\"? \"Finalizar\":\"Siguiente\"}\n                    <FaChevronRight />\n                </NavigationButton>\n            </NavigationButtonsContainer>\n        </GeneralContainer>\n    )\n}\n\nexport default Popup\n","import React, { useEffect, useRef, useState } from 'react'\nimport { defMainThemeColor, defRedColor, defWhiteColor } from '../Shared/Colors'\n\ninterface PropsInputName {\n    initialName?: string\n    onChangeName: (newName: string) => void\n}\n\nexport function CompInputName(props: PropsInputName) {\n\n    const [ssCurrentName,setCurrentName] = useState<string>(\"\")\n\n    useEffect(() => {\n        if (props.initialName) setCurrentName(props.initialName)\n    },[])\n\n    useEffect(() => {\n        props.onChangeName(ssCurrentName)\n    },[ssCurrentName])\n\n    const sanitizeNameAndCallback = (name: string) => {\n        let sanitizedName = name.replace(/[`~!@#$%^&*()|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '').replace(\" \", \"_\")\n        setCurrentName(sanitizedName)\n        \n    }\n\n    return (    \n        <div style={{\n            width: \"calc(100% - 2rem)\",\n            height: \"2.5rem\",\n            backgroundColor: defWhiteColor,\n            border: \"solid 2px rgb(20,149,131)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"start\",\n            borderRadius: \"20rem\",\n            padding: \"0rem 1.1rem\",\n            // marginTop:\"0.5rem\",\n   \n        }}>\n        <input\n            type=\"text\"\n            value={ssCurrentName}\n            onChange={(event) => sanitizeNameAndCallback(event.target.value)}\n            style={{\n                width: \"100%\",\n                border: 0,\n                margin: 0,\n                backgroundColor: \"transparent\",\n                color: defMainThemeColor,\n            }}\n        />\n        </div>\n    )\n}\n","import React, { useState,useEffect } from 'react'\nimport styled from 'styled-components'\n\n// MY COMPONENTS -  ELEMENTS\nimport {CompInputName} from '../../Elements/ElementInputDefineBaseName'\n\n// MODELS\n\n// SHARE\nimport * as colorDef from '../../Shared/Colors'\nimport { defShadow } from '../../Shared/Shadows'\n\n// API\n\n\nconst FinishPopupBackground = styled.div`\n    width: 100vw;\n    max-height: 100vh;\n    height: 100vh;\n    position: absolute;\n    top:0;\n    left:0;\n    background-color: rgba(0,0,0,0.5);\n    backdrop-filter: blur(0.3rem);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    z-index: 600;\n    padding: 1rem;\n`\nconst FinishPopupContainer = styled.div`\n    min-height: 19rem;\n    background-color: white;\n    display: grid;\n    grid-template-rows: 5rem 1fr 5rem;\n    justify-content: space-between;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n`\n\nconst FinishPopupButtonAccept = styled.button`\n    border: 0;\n    color: ${colorDef.defButtonAcceptText};\n    height: 2.5rem;\n    width: 10rem;\n    border-radius: 0.2rem;\n    background-color:${colorDef.defButtonAccept};\n    display: flex;\n    flex-direction: row;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    box-shadow: ${defShadow};\n    &:hover{\n            transform:scale(1.07);\n        }\n`\nconst FinishPopupButtonCancel = styled.button`\n    border: 0;\n    color: ${colorDef.defButtonCancelText};\n    height: 2.5rem;\n    width: 10rem;\n    border-radius: 0.2rem;\n    background-color: ${colorDef.defButtonCancel};\n    box-shadow: ${defShadow};\n    display: flex;\n    flex-direction: row;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    &:hover{\n            transform:scale(1.07);\n        }\n`\ninterface Props {\n    initialName?:string\n    status:number\n    closePopup: () => void\n    onSaveDatabase: (name: string) => void\n    onClearMessage: () => void\n    errorString: string\n}\n\nexport default function FinishCreationPopUp(props: Props) {\n\n    const [databaseName, setDatabaseName] = useState<string>(\"\")\n    const [canProceed, setCanProceed] = useState<boolean>(false)\n   \n    useEffect(() => {\n        if(props.status === 2) props.onClearMessage()\n        if(databaseName.length>0) setCanProceed(true)\n        else setCanProceed(false)\n    }, [databaseName])\n\n\n    return (\n        <FinishPopupBackground>\n            <FinishPopupContainer>\n                <div\n                    style={{\n                        color:  \"white\",\n                        backgroundColor:colorDef.defMainThemeColor,\n                        fontSize:  \"2rem\",\n                        fontWeight:600,\n                        display: \"inline-flex\",\n                        justifyContent:\"flex-start\",\n                        alignItems:'center',\n                        gap: '1.5rem',                    \n                        padding:\"0rem 1.5rem\",\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                    }}\n                >\n                    <span>Guardar Base</span>\n                </div>\n                \n                <div style={{\n                    color: colorDef.defBlackColor,\n                    fontSize:  \"1.3rem\",\n                    display: \"flex\",\n                    flexDirection:\"column\",\n                    gap: '1rem',\n                    justifyContent:\"center\",\n                    alignItems:'flex-start',\n                    borderBottom:\"1px solid \"+colorDef.defLineSeparatorColor,\n                    padding:\"1rem 1.5rem\",\n                    margin: \"0 1rem\",\n                }}>\n                    <span>Introduzca un nombre para la base de datos antes de finalizar su creación</span>\n                    <div style={{width:\"90%\", display:\"flex\", justifyContent:\"center\", alignSelf:\"center\"}}>\n                        <CompInputName\n                            initialName={props.initialName}\n                            onChangeName={(newName) => {setDatabaseName(newName)}}                  \n                        />\n                    </div>                                       \n                </div>   \n\n                <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\", height:'100%',alignItems:'center', justifyContent: \"space-around\"}}>\n                    <FinishPopupButtonAccept disabled={!canProceed} onClick={() => props.onSaveDatabase(databaseName)}>\n                        Aceptar\n                    </FinishPopupButtonAccept>\n                    <FinishPopupButtonCancel onClick={() => props.closePopup()}>\n                        Cancelar\n                    </FinishPopupButtonCancel>                                      \n                </div>\n                    \n                {props.status === 2?\n                    <span style={{color: \"#721c24\", width:'100%',fontSize: \"1em\", padding:\"0.5rem 0rem\",backgroundColor:\"#f5c6cb\",border:\"1px #f5c6cb solid\",marginTop:'0rem'}}>\n                        {props.errorString}\n                    </span>\n                    : null\n                }\n                    \n            </FinishPopupContainer>\n        </FinishPopupBackground>\n    )\n}\n","export interface GroupConstructorData {\n    id: number,\n    name: string,\n    canBe: number\n}\n\nexport class Group {\n    public readonly id: number\n    public readonly name: string\n    public readonly canBeMaster: boolean\n    public readonly canBeAssociated: boolean\n    public readonly canBeFilter: boolean\n\n    constructor(data: GroupConstructorData) {\n        this.id = data.id\n        this.name = data.name\n        let aux = data.canBe.toString()\n        this.canBeMaster = Boolean(Number(aux[0]))\n        this.canBeAssociated = Boolean(Number(aux[1]))\n        this.canBeFilter = Boolean(Number(aux[2]))\n    }\n}\n\nexport interface FolderConstructorData {\n    id: number,\n    name: string,\n    father: number,\n    groups: GroupConstructorData[]\n}\n\nexport class Folder {\n    public readonly id: number\n    public name: string\n    public readonly father: number\n    public groups: Group[]\n\n    constructor(data: FolderConstructorData) {\n        this.id = data.id\n        this.name = data.name\n        this.father = data.father\n        this.groups = data.groups.map((groupConstructData) => new Group(groupConstructData))\n    }\n}\n\nexport interface GroupSimp {\n    id: number\n    name: string\n}\n\nexport interface FolderSimp {\n    id: number\n    name: string\n}","export default class SchemaScreenComponent {\n    id: string\n    type: string\n    outputKey: string\n    props: any\n    prevValues:any\n\n    constructor(componentJson: any) {\n        // console.log(\"JSON HERE: \", componentJson)\n        this.id = componentJson.id\n        this.type = componentJson.type\n        this.outputKey = componentJson[\"output_key\"] ? componentJson[\"output_key\"] : \"no_output_key\"\n        this.props = componentJson.props\n        this.prevValues = componentJson.prevValues;\n    }\n}","import SchemaScreenComponent from \"./SchemaScreenComponent\"\n\nexport default class SchemaScreen {\n    id: string\n    title: string\n    components: SchemaScreenComponent[]\n\n    constructor(screenJson: any) {\n        this.id = screenJson.id\n        this.title = screenJson.title\n        let components: SchemaScreenComponent[] = []\n        screenJson.components.forEach((componentJson: any) => {\n            let component = new SchemaScreenComponent(componentJson)\n            components.push(component)\n        })\n        this.components = components\n    }\n}","import React, { ReactElement, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport Popover from '@material-ui/core/Popover'\nimport { TreeView } from '@material-ui/lab'\nimport { MdClear } from 'react-icons/md'\nimport { IoMdExit } from 'react-icons/io'\nimport { IoMdSend } from 'react-icons/io'\nimport { FaSearch } from 'react-icons/fa'\nimport { FaExchangeAlt } from 'react-icons/fa/'\nimport { IoIosCloseCircleOutline } from 'react-icons/io'\n\n// MY COMPONENTS\nimport Navbar from '../../zComponents/Navbar'\nimport CompRenameBase from './CompRenameBase'\nimport FoldersPicker from './FoldersPicker'\nimport SearchResultModal from './SearchResultModal'\nimport SelectNewVariableDisplayer from './SelectNewVariableDisplayer'\nimport Popup from './Popup'\nimport renderSelectedScreen from '../../zComponents/RenderScreenToShow'\nimport FinishCreationPopUp from './FinishCreationPopUp'\n\nimport { CustomTreeContainer } from '../../zComponents/CustomTree'\n\n// ELEMENTS\nimport { TooltipNAV } from '../../Elements/ElementStyledTooltip'\nimport { CompInputName } from '../../Elements/ElementInputDefineBaseName'\n\n// MODELS\nimport { Folder, FolderConstructorData, FolderSimp, GroupSimp } from '../../Models/DataStructure'\nimport { cPackFE } from '../../Models/cPackFE'\nimport { GroupFilteringType, LeafVizFolder, VizFolder, VizFoldersStructure } from '../../Models/CreateDatabaseVizStructures'\nimport SchemaScreen from '../../Models/SchemaScreen'\nimport { MyModal, MyModalButton, MyModalIcon } from '../../zComponents/MyModal'\n\n//SHARE\nimport { Loader } from '../../Shared/GlobalStyle'\nimport * as colorDef from '../../Shared/Colors'\n\n// API\nimport * as apiBE from '../../Services/api'\nimport { isConstructorTypeNode } from 'typescript'\nimport { NavItemProps } from 'reactstrap'\nimport { red } from '@material-ui/core/colors'\nimport { CheckboxClassKey } from '@material-ui/core'\n\n\n\ninterface GeneralLayoutProps {\n    blurred: boolean\n}\n\nconst GeneralLayout = styled.div<GeneralLayoutProps>`\n    width: 100vw;\n    height: 100vh;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    display: flex;\n    flex-direction: column;\n    filter: ${p => p.blurred ? \"blur(1rem)\" : \"0\"};\n    transition: filter 100ms ease-in;\n`\n\nconst BottomButtonsContainer = styled.div`\n    width: 100%;\n    height: 60px;\n    position: absolute;\n    bottom: 0px;\n    background-color: ${colorDef.defMainThemeColor};\n    // border-radius: 1rem 1rem 0rem 0rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0rem 1rem;\n`\nconst BottomButton = styled.button`\n    height: 45px;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    border-radius: 1rem;\n    border: 2px solid ${colorDef.defMainThemeColor};\n    padding: 0rem 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    &:hover{\n            transform:scale(1.07);\n        }\n`\n\nconst CentralDisplayContainer = styled.div`\n    width: 100%;\n    height: calc(100vh - 60px - 60px);\n    padding: 0.7rem 0.7rem;\n`\nconst TreeDisplayContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0.7rem 0.7rem;\n`\nconst ComponentDisplayContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0.7rem 0.7rem ;\n    padding-top: 0.2rem;\n`\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    border-radius: 1.5rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: column;\n    color: black;\n    /* margin: 0 1rem; */\n`\nconst Header = styled.div`\n    width: 100%;\n    min-height: 60px;\n    background-color: ${colorDef.defMainThemeColor};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    color: white;\n    font-size: 1.4rem;\n`\n\nconst FloatingChangeViewButton = styled.button`\n    padding: 0.5rem;\n    border-radius: 100%;\n    width: 3.5rem;\n    height: 3.5rem;\n    position: absolute;\n    bottom: 4.5rem;\n    right: 0.5rem;\n    border: solid 1px ${colorDef.defMainThemeColor};\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n`\nconst CloseComponentViewButton = styled.button`\n    width: 100%;\n    height: 3rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n    border: 0;\n    color: gray;\n    border-radius: 1rem 1rem 0rem 0rem;\n`\n\nconst SearchInfoButton = styled.button`\n    width: 2rem;\n    height: 2rem;\n    border-radius: 1rem;\n    background-color: white;\n    color: ${colorDef.defMainThemeColor};\n    padding: 0.5rem;\n    margin-left: 1rem;\n    border: 0;\n    font-size: 0.7em;\n    /* margin-right: 1rem; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    justify-items: center;\n    /* position:absolute; */\n    /* left: 40px; */\n`\n\ninterface SelectFolderFloatingContainerProps {\n    visible: boolean\n}\nconst SelectFolderFloatingContainer = styled.div<SelectFolderFloatingContainerProps>`\n    width: 80vw;\n    margin-left: calc(50vw - 40vw);\n    height: calc(100vh - 10rem);\n    border-radius: 1rem;\n    box-shadow: rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 2px 6px 2px;\n    background-color: white;\n    position: absolute;\n    top: 1rem;\n    z-index: 500;\n    transform: translateY(${p => p.visible ? \"0rem\" : \"calc((100vh + 10rem) * -1)\"});\n    transition: transform 300ms ease-in-out;\n    border: 2px solid ${colorDef.defMainThemeColor};\n    overflow-x: hidden;\n    overflow-y: scroll;\n`\n\n\nexport default function V2_CreateDatabasePage() {\n    let history = useHistory();\n    const screenWidthBorder = 1010 // En píxeles\n\n    const [miniView, setMiniView] = useState<boolean>(window.innerWidth < screenWidthBorder);\n    const [miniViewShowTree, setMiniViewShowTree] = useState<boolean>(false);\n\n    const [groupFilteringString, setGroupFilteringString] = useState<string | undefined>(undefined)\n    const [showSearchResultModal, setShowSearchResultModal] = useState<boolean>(false)\n\n    const [showFinishPopup, setShowFinishPopup] = useState<number>(0);\n    const [ssErrorFinishPopup, setErrorFinishPopup] = useState<string>(\"\");\n    const [ssModalState, setModalState] = useState<number>(0);\n    const [showDailyInfoModal, setShowDailyInfoModal] = useState<boolean>(false)\n    const [textDailyInfoModal, setTextDailyInfoModal] = useState<any | undefined>(undefined)\n\n    const [ssScreenToShowRef, setScreenToShowRef] = useState<{ idPack: string, idScreen: string, idxComp: number }>() // {idPack, idScreen, idComp}\n    const [ssBase, setBase] = useState<cPackFE[]>([])\n    const [ssCurrentPack, setCurrentPack] = useState<cPackFE>()\n    const [ssCurrentScreen, setCurrentScreen] = useState<SchemaScreen>()\n    const [ssEditingMode, setEditingMode] = useState<boolean>(false)\n    const [ssBaseName, setBaseName] = useState<string>(\"\")\n    const [ssNewBaseName, setNewBaseName] = useState<string>(\"\")\n\n    function handleClickOnChangeFolder(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        miniView ?\n            setShowFolderSelector(true)\n            :\n            setAnchorEl(event.currentTarget)\n    }\n\n    async function editPack(idPack: string, idScreen: string) {\n        let response: string | any\n        try {\n            let editPack = ssBase.find((pck) => pck.idPack === idPack)\n\n            if (editPack !== undefined) {\n                let indxScreen = editPack?.screens.findIndex((scr) => scr.screenId === idScreen);\n                if (indxScreen >= 0) {\n                    response = await apiBE.endC3_changeScreen(idPack, idScreen)\n                    if (response.success !== undefined && response.success === 1) {\n                        let responseScreen = await apiBE.endC4_getScreen(idPack)\n                        if (responseScreen.success !== undefined && responseScreen.success === 1) {\n                            let nextScreen = new SchemaScreen(responseScreen.res)\n\n                            editPack.screens = editPack.screens.filter((scr, idx) => idx < indxScreen)\n                            editPack.createScreen(nextScreen)\n\n                            setEditingMode(true)\n                            setCurrentPack(editPack)\n                            setCurrentScreen(nextScreen)\n                        }\n                        else {\n\n                            setModalState(-1)\n                            setErrorFinishPopup(responseScreen.msg ? responseScreen.msg : \"Error\")\n                        }\n                    }\n                    else {\n                        setModalState(-1)\n                        setErrorFinishPopup(response.msg ? response.msg : \"\")\n                    }\n                }\n            }\n\n        } catch (err) {\n            console.error(err)\n            return\n        }\n    }\n\n    async function deletePack(idPackDelete: string) {\n        try {\n            let responseScreen = await apiBE.endB2_deletePack(idPackDelete)\n            if (responseScreen.success === 1) {\n                setBase((prev) => {\n                    let tempBase: cPackFE[] = prev.filter((pck) => !(pck.idPack === idPackDelete || pck.linkTO === idPackDelete));\n                    // if (tempBase.length == 0) filterFoldersByType(GroupFilteringType.Master)\n                    // else filterFoldersByType(GroupFilteringType.Associated)\n                    return [...tempBase];\n                })\n            }\n            else {\n                setModalState(3)\n                setErrorFinishPopup(responseScreen.msg ? responseScreen.msg : \"Error\")\n            }\n        } catch (err) {\n            console.error(err)\n            return\n        }\n    }\n\n    async function startCreation(folder: FolderSimp, group: GroupSimp, type: string, link: string) {\n        try {\n            // NEW BEnd\n            let responseCreation = await apiBE.endB1_createPack(group.id, type, link)\n\n            if (responseCreation.success >= 0) {\n                const newPack: cPackFE = new cPackFE(responseCreation.idPack, { id: folder.id, name: folder.name }, { id: group.id, name: group.name }, responseCreation.tipologia, responseCreation.linkTO, [])\n                let responseScreen = await apiBE.endC4_getScreen(newPack.idPack)\n                if (responseScreen.success !== undefined && responseScreen.success === 1) {\n                    let firstScreen = new SchemaScreen(responseScreen.res)\n                    newPack.createScreen(firstScreen)\n                    setCurrentPack(newPack)\n                    setCurrentScreen(firstScreen)\n                    return firstScreen\n                }\n                else {\n                    setModalState(-1)\n                    setErrorFinishPopup(responseScreen.msg ? responseScreen.msg : \"Error\")\n                }\n            }\n            else {\n\n                // EN DESARROLLO \n                //CASO: existe un PACK editandose (debería salir un mensaje informativo y preguntará si quiere acabar el pack que se estaba editando)\n                //console.log('Hay un PACK que se está editando')\n                setModalState(3)\n                setErrorFinishPopup(responseCreation.msg ? responseCreation.msg : \"Error creation\")\n                return;\n            }\n        }\n        catch {\n            setCurrentPack(undefined)\n            //console.log(\"No se pudo cargar la screen inical\")\n            return null\n        }\n    }\n\n    function cancelCreation() {\n        const getResponse = async () => {\n            const responseB2 = await apiBE.endB2_deletePack(ssCurrentPack!.idPack);\n            if (responseB2.success !== 1) {\n                setModalState(3)\n                setErrorFinishPopup(responseB2.msg ? responseB2.msg : \"Error endB2\")\n            }\n        }\n        if (ssCurrentPack) {\n            getResponse();\n            // apiBE.endB2_deletePack(ssCurrentPack.idPack);\n            setCurrentPack(undefined)\n        }\n        setCurrentScreen(undefined)\n\n    }\n\n    async function postNextScreen(currentScreen: SchemaScreen, output: any): Promise<void> {\n        let response: string | any\n        try {\n            if (ssCurrentPack !== undefined) {\n                ssCurrentPack.addOnlyOutputToScreen(currentScreen!, output)\n\n                response = await apiBE.endC1_nextScreen(ssCurrentPack.idPack, currentScreen.id, output)\n\n                if (response.success === 1) {\n                    let responseScreen = await apiBE.endC4_getScreen(ssCurrentPack.idPack)\n                    if (responseScreen.success !== undefined && responseScreen.success === 1) {\n                        let nextScreen = new SchemaScreen(responseScreen.res)\n                        ssCurrentPack.createScreen(nextScreen)\n                        setCurrentScreen(nextScreen)\n                    }\n                    else {\n\n                        setModalState(-1)\n                        setErrorFinishPopup(responseScreen.msg ? responseScreen.msg : \"Error\")\n                    }\n                } else if (response.success === 2) {\n                    let aux = [...ssBase]\n                    let indxBase = aux.findIndex((pck) => pck.idPack === ssCurrentPack.idPack);\n                    let newFinishedPack = new cPackFE(ssCurrentPack!.idPack, ssCurrentPack!.folder, ssCurrentPack!.group, ssCurrentPack!.type, ssCurrentPack!.linkTO ? ssCurrentPack!.linkTO : \"\", [...ssCurrentPack!.screens])\n                    if (indxBase === -1) aux.push(newFinishedPack)\n                    else aux[indxBase] = newFinishedPack\n                    setBase([...aux]);\n                    setCurrentScreen(undefined);\n                    setEditingMode(false);\n                    // filterFoldersByType(GroupFilteringType.Associated)       \n                } else {\n                    setCurrentScreen(undefined);\n                    setEditingMode(false);\n                    setModalState(-1)\n                    setErrorFinishPopup(response.msg ? response.msg : \"Error\")\n                }\n            }\n        } catch (err) {\n            console.error(err)\n            return\n        }\n    }\n    async function getPreviousScreen() {\n        let response: string | any\n        try {\n            if (ssCurrentPack !== undefined && ssCurrentScreen !== undefined) {\n                response = await apiBE.endC2_previousScreen(ssCurrentPack.idPack)\n                let successDeleteScreen = ssCurrentPack.goPreviousScreen(ssCurrentScreen.id)\n                if (response.success === 1 && successDeleteScreen) {\n                    let responseScreen = await apiBE.endC4_getScreen(ssCurrentPack.idPack)\n                    if (responseScreen.success !== undefined && responseScreen.success === 1) {\n                        let nextScreen = new SchemaScreen(responseScreen.res)\n                        setCurrentScreen(nextScreen)\n                    }\n                    else {\n                        setModalState(-1)\n                        setErrorFinishPopup(responseScreen.msg ? responseScreen.msg : \"Error\")\n                    }\n                } else {\n                    setCurrentScreen(undefined);\n                    setEditingMode(false);\n                    setModalState(-1)\n                    setErrorFinishPopup(response.msg ? response.msg : \"Error\")\n                }\n            }\n        } catch (err) {\n            console.error(err)\n            return\n        }\n    }\n    async function cleanCreation(goToMainPage?: boolean) {\n        await apiBE.endA2_deleteBase();\n        setCurrentPack(undefined);\n        setBase([]);\n        if (goToMainPage) history.push(\"/databases\")\n        else window.location.reload()\n        // filterFoldersByType(GroupFilteringType.Master)\n    }\n    async function saveDataBase(name: string) {\n        let res = await apiBE.endD1_finishBase(name);\n        if (res.success === 1) {\n            setShowFinishPopup(0)\n            history.push(\"/databases\")\n        }\n        else {\n            if (showFinishPopup > 0) setShowFinishPopup(2);\n            else setModalState(3)\n            setErrorFinishPopup(res.msg ? res.msg : \"Error finish base\")\n        }\n    }\n\n    async function fcn_saveNewDBName() {\n        const getNewBaseName = () => {\n            let newText = \"\";\n            if (ssNewBaseName !== \"\") {\n                if (ssBaseName === \"\" || (ssBaseName[0] === \"0\" && ssBaseName[1] === \";\")) newText = \"0;\" + ssNewBaseName\n                else newText = ssNewBaseName\n            }\n\n            return newText;\n        }\n        let res = await apiBE.endA3_setNameBase(getNewBaseName());\n        setModalState(3)\n        setErrorFinishPopup(res.msg ? res.msg : \"Se ha producido un error. No se ha podido contactar con el servidor\")\n    }\n\n    function renderRighVisualizacion() {\n        if (ssScreenToShowRef) {\n            const scrnToRender = ssBase?.find((pck: cPackFE) => pck.idPack === ssScreenToShowRef.idPack)?.screens.find((scn) => scn.screenId === ssScreenToShowRef.idScreen);\n            if (scrnToRender) return renderSelectedScreen(scrnToRender, ssScreenToShowRef.idxComp === -1 ? undefined : ssScreenToShowRef.idxComp);\n        }\n        return null\n    }\n    function renderModal() {\n        if (ssModalState > 0) {\n            if (ssModalState === 1) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '48rem', height: '18rem', zIndex: 1500 }}\n                middleElements={\n                    <span>Se ha detectado un base de datos no finalizada. ¿Desea continuar o crear una nueva (se eliminará la base en desarrollo)?</span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                // onCloseButtonCallback={()=>{}}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"Continuar\"\n                            onClickCallback={() => { setModalState(0) }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '8rem', height: '2.5rem'\n                            }}\n                            displayText=\"Nueva Base\"\n                            onClickCallback={() => { cleanCreation(); setModalState(0) }}\n                        />\n                    </>\n                }\n            />\n\n            if (ssModalState === 2) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>¿Desea sobrescribir la base o guardarla con otro nombre?</span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { setModalState(0) }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '10rem', height: '2.5rem'\n                            }}\n                            displayText=\"Sobrescribir\"\n                            onClickCallback={() => { saveDataBase(\"!default\"); setModalState(0) }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '10rem', height: '2.5rem'\n                            }}\n                            displayText=\"Guardar como...\"\n                            onClickCallback={() => { setModalState(0); setShowFinishPopup(1); }}\n                        />\n                    </>\n                }\n            />\n            if (ssModalState === 3) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                middleElements={\n                    <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>{ssErrorFinishPopup}</span>\n                }\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { setModalState(0); window.location.reload() }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '10rem', height: '2.5rem'\n                            }}\n                            displayText=\"Cerrar\"\n                            onClickCallback={() => { setModalState(0); window.location.reload() }}\n                        />\n                    </>\n                }\n            />\n            if (ssModalState === 4) return <MyModal\n                icon={MyModalIcon.Alert}\n                style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n                middleElements={\n                    <>\n                        <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>Defina el nombre de la base</span>\n                        <CompInputName\n                            initialName={ssBaseName !== \"\" && ssBaseName[0] === \"0\" && ssBaseName[1] === \";\" ? ssBaseName.slice(2) : ssBaseName}\n                            onChangeName={(newName) => { setNewBaseName(newName) }}\n                        />\n                    </>\n                }\n                removeAltert\n                titleText={\"Definición Nombre Base\"}\n                onCloseCallback={() => { }}\n                onOpenCallback={() => { }}\n                onCloseButtonCallback={() => { setModalState(0) }}\n                bottomElements={\n                    <>\n                        <MyModalButton\n                            style={{\n                                width: '10rem', height: '2.5rem', color: colorDef.defButtonAccept, textColor: colorDef.defButtonAcceptText\n                            }}\n                            displayText=\"Aceptar\"\n                            onClickCallback={() => { fcn_saveNewDBName() }}\n                        />\n                        <MyModalButton\n                            style={{\n                                width: '10rem', height: '2.5rem'\n                            }}\n                            displayText=\"Cerrar\"\n                            onClickCallback={() => { setModalState(0) }}\n                        />\n                    </>\n                }\n            />\n\n        }\n        else if (ssModalState < 0) return <MyModal\n            icon={MyModalIcon.Alert}\n            style={{ width: '37rem', height: '16rem', zIndex: 1500 }}\n            middleElements={\n                <>\n                    <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>{\"Se ha detectado un error. \"}</span>\n                    {ssModalState === -1 &&\n                        <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>{\"Error en los datos enviados al servidor. Vuélvalo a intentar más tarde. Si el problema persiste póngase en contacto con el equipo de desarrollo.\"}</span>\n                    }\n                    {ssModalState === -2 &&\n                        <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>{\"Error recibiendo los datos del servidor.\"}</span>\n                    }\n                    {ssErrorFinishPopup !== \"\" && <span style={{ fontSize: \"1.3rem\", whiteSpace: 'normal' }}>{ssErrorFinishPopup}</span>}\n                </>\n            }\n            onCloseCallback={() => { }}\n            onOpenCallback={() => { }}\n            onCloseButtonCallback={() => {\n                setModalState(0);\n                { ssModalState === -1 && window.location.reload() }\n                { ssModalState === -2 && cleanCreation(true) }\n            }}\n            bottomElements={\n                <>\n                    <MyModalButton\n                        style={{\n                            width: '10rem', height: '2.5rem'\n                        }}\n                        displayText=\"Cerrar\"\n                        onClickCallback={() => {\n                            setModalState(0);\n                            { ssModalState === -1 && window.location.reload() }\n                            { ssModalState === -2 && cleanCreation(true) }\n                        }}\n                    />\n                </>\n            }\n        />\n    }\n\n\n\n    // ---\n    const [foldersStructure, setFoldersStructure] = useState<VizFoldersStructure>()\n    const [activeFolders, setActiveFolders] = useState<VizFolder[]>([])\n    const [selectedFolder, setSelectedFolder] = useState<LeafVizFolder>()\n\n    const [showFolderSelector, setShowFolderSelector] = useState<boolean>(false)\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n    const [showRename, setShowRename] = useState<boolean>(false)\n\n    async function loadFolders() {\n        let res = await apiBE.endpVAR1_getAllVariables();\n        if (res && res.success === 1) {\n            let aux: Folder[] = res.sections.map((data: FolderConstructorData) => new Folder(data))\n\n            let foldersStructure = new VizFoldersStructure(aux)\n            foldersStructure.filterFoldersByType(GroupFilteringType.Master)\n            foldersStructure.selectFolder(1)\n            setActiveFolders(foldersStructure.getActiveFolders())\n            setSelectedFolder(foldersStructure.getSelectedFolder())\n            setFoldersStructure(foldersStructure)\n        }\n        else {\n            setModalState(3)\n            setErrorFinishPopup(res.msg ? res.msg : \"Se ha producido un error\")\n        }\n    }\n    function selectFolder(folderId: number) {\n        foldersStructure!.selectFolder(folderId)\n        setSelectedFolder(foldersStructure!.getSelectedFolder())\n        setShowFolderSelector(false)\n        setAnchorEl(null)\n    }\n    function filterFoldersByType(type: GroupFilteringType) {\n        foldersStructure!.filterFoldersByType(type)\n        setActiveFolders(foldersStructure!.getActiveFolders())\n    }\n    // ---\n\n    useEffect(() => {\n        const checkBaseInCache = async () => {\n            const resBase = (await apiBE.endA1_getBase());\n            //console.log('resBase',resBase  )\n            if (resBase && resBase.success >= 0) {\n                if (resBase !== undefined && resBase.packs !== undefined) {\n                    setBaseName(resBase.baseName)\n                    // if(resBase.baseName === \"\")\n                    // setModalState(1);\n                    const trueBase = resBase.packs.map((pck: cPackFE) => new cPackFE(pck.idPack, pck.folder, pck.group, pck.type, pck.linkTO ? pck.linkTO : \"\", pck.screens));\n                    const resScreen = await apiBE.endC4_getScreen();\n                    if (resScreen.success !== undefined && resScreen.success === 1) {\n                        const resPackep = resScreen.res;\n                        if (resPackep.idPack !== \"none\") {\n                            let curPack = trueBase.find((pck: cPackFE) => pck.idPack === resPackep.idPack);\n                            if (curPack !== undefined) {\n                                setCurrentPack(curPack)\n                                setBase([...trueBase])\n                                let currScreen = new SchemaScreen(resPackep)\n                                setCurrentScreen(currScreen)\n                                setEditingMode(true)\n                                return\n                            }\n                            else console.log('No se ha encontrado el pack de la screen')\n                        }\n                        else {\n                            setModalState(-1)\n                            setErrorFinishPopup(resScreen.msg ? resScreen.msg : \"Error\")\n                        }\n                    }\n                    else {\n                        setCurrentPack(undefined)\n                        setBase([...trueBase])\n                        setCurrentScreen(undefined)\n                        return\n                    }\n                }\n                else {\n                    setCurrentPack(undefined)\n                    setBase([])\n                    setCurrentScreen(undefined)\n                }\n            }\n            // Handle Error\n            else {\n                setCurrentScreen(undefined);\n                setEditingMode(false);\n                setModalState(-2)\n                setErrorFinishPopup(resBase.msg ? resBase.msg : \"\")\n            }\n\n        }\n\n        checkBaseInCache();\n        loadFolders();\n        window.addEventListener('resize', () => {\n            window.innerWidth < screenWidthBorder ?\n                setMiniView(true)\n                :\n                setMiniView(false)\n        })\n\n        /* let showModal = false\n        let acceptedPreviouslyStr: string | null\n        acceptedPreviouslyStr = localStorage.getItem(\"infoAccepted\")\n        if (acceptedPreviouslyStr) {\n            showModal = false\n            // let dateAccepted = new Date(acceptedPreviouslyStr)\n            // let dateNow = new Date()\n            // let sameDay = dateAccepted.getDay() == dateNow.getDay()\n            // if (!sameDay) showModal = true\n        } else showModal = true\n        if (showModal) setShowDailyInfoModal(showModal) */\n        async function loadTextInfoDaily() {\n            let res = await apiBE.endI1_loadTextInfoMessage();\n            console.log(\"res\", res)\n            if (res && res.success === 1) {\n                let dateInMsg = new Date(res.data.date)\n                let dateInStg = localStorage.getItem(\"infoAccepted\") || null\n                console.log(\"res\", dateInStg ,dateInMsg, dateInStg?new Date(dateInStg) >= dateInMsg:'error')\n                if (dateInStg && (new Date(dateInStg) >= dateInMsg)) {\n                    setShowDailyInfoModal(false)                    \n                }\n                else{\n                    setTextDailyInfoModal(res.data)\n                    setShowDailyInfoModal(true)\n                }\n            }\n            else {\n                setModalState(3)\n                setErrorFinishPopup(res.msg ? res.msg : \"Se ha producido un error\")\n            }\n        }\n        loadTextInfoDaily()\n\n    }, [])\n\n    /* useEffect(() => {\n        async function loadTextInfoDaily() {\n            let res = await apiBE.endI1_loadTextInfoMessage();\n            console.log(\"res\",res)\n            if (res && res.success === 1) {\n                let dateInMsg = new Date(res.date)\n                let dateInStg = localStorage.getItem(\"infoAccepted\") || null\n                if (dateInStg) console.log(dateInMsg, new Date(dateInStg))\n                if (dateInStg) if (new Date(dateInStg) > dateInMsg) return\n                setTextDailyInfoModal(res.data)\n            }\n            else {\n                setModalState(3)\n                setErrorFinishPopup(res.msg ? res.msg : \"Se ha producido un error\")\n            }\n        }\n\n\n        if (showDailyInfoModal) {\n            loadTextInfoDaily();\n        }\n    }, [showDailyInfoModal]) */\n\n    useEffect(() => {\n        if (foldersStructure) {\n            if (ssBase.length === 0) filterFoldersByType(GroupFilteringType.Master)\n            else filterFoldersByType(GroupFilteringType.Associated)\n        }\n    }, [foldersStructure, ssBase])\n\n    function StandardRenderer() {\n        return (\n            <GeneralLayout\n                blurred={(showFolderSelector || (miniViewShowTree && (ssScreenToShowRef !== undefined && ssScreenToShowRef !== null)))}\n            >\n                <Navbar />\n                {\n                    <div style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"2fr minmax(35rem, 40rem)\"\n                    }}>\n                        <CentralDisplayContainer>\n                            <Container>\n                                <Header>\n                                    <TooltipNAV title=\"Buscar en Carpetas/Grupos/Variables por nombre\" arrow>\n                                        <SearchInfoButton onClick={() => setShowSearchResultModal(true)}>\n                                            <FaSearch />\n                                        </SearchInfoButton>\n                                    </TooltipNAV>\n                                    <div style={{ width: \"100%\" }}>  Selección de nueva variable</div>\n\n                                </Header>\n                                <SelectNewVariableDisplayer\n                                    onShowFolderSelector={(event) => handleClickOnChangeFolder(event)}\n                                    folder={selectedFolder!}\n                                    onSelectGroup={(folder, group) => startCreation(folder, group, \"\", \"\")}\n                                />\n                            </Container>\n                            <Popover\n                                id=\"selectFolderPopover\"\n                                open={anchorEl ? true : false}\n                                anchorEl={anchorEl}\n                                onClose={() => setAnchorEl(null)}\n                                anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                }}\n                            >\n                                <FoldersPicker\n                                    folders={activeFolders}\n                                    onSelectFolder={(id) => selectFolder(id)}\n                                />\n                            </Popover>\n                        </CentralDisplayContainer>\n                        <div style={{\n                            height: \"calc(100vh - 60px - 60px)\",\n                            display: \"grid\",\n                            gridTemplateRows: \"50% 50%\",\n\n                        }}>\n                            <TreeDisplayContainer>\n                                <Container>\n                                    <Header>\n                                        Visualización del progreso\n                                    </Header>\n                                    <TreeView id={\"treeview\"} style={{ padding: \"0.3rem\", overflow: \"scroll\", margin: \"0 0.7rem\" }}>\n                                        {ssBase.length > 0 &&\n                                            <CompRenameBase\n                                                baseName={ssBaseName}\n                                                onClickRename={() => { setModalState(4) }}\n                                            />\n                                        }\n                                        {ssBase.filter((pck) => !pck.isFilter()).map((pck) => {\n                                            return <CustomTreeContainer\n                                                pack={pck}\n                                                filters={ssBase.filter((pckList) => pckList.linkTO === pck.idPack)}\n                                                setViewScreenCallback={(screenRef) => { setScreenToShowRef(screenRef) }}\n                                                setEditingFunctionCallback={(id: string, screen: string) => editPack(id, screen)}\n                                                setFilteringFunctionCallback={() => {\n                                                    startCreation(\n                                                        { id: -1, name: \"Filtro\" },\n                                                        { id: -1, name: \"Filtro\" },\n                                                        \"Filtro\", pck.idPack\n                                                    )\n                                                }}\n                                                setDeletingFunctionCallback={(id) => deletePack(id)}\n                                            />\n                                        }\n                                        )}\n                                    </TreeView>\n                                </Container>\n                            </TreeDisplayContainer>\n                            <ComponentDisplayContainer>\n                                <Container>\n                                    <Header>\n                                        Visualización del componente\n                                    </Header>\n                                    {renderRighVisualizacion()}\n                                </Container>\n                            </ComponentDisplayContainer>\n                        </div>\n                    </div>\n                }\n                <BottomButtonsContainer>\n                    <BottomButton\n                        onClick={() => cleanCreation()}\n                    >\n                        Limpiar\n                        <MdClear color={colorDef.defMainThemeColor} />\n                    </BottomButton>\n                    <BottomButton\n                        style={{ backgroundColor: colorDef.defCreateBaseSalirSinGuardarButton, color: \"white\" }}\n                        onClick={() => cleanCreation(true)}\n                    >\n                        Salir sin guardar\n                        <IoMdExit color={\"white\"} />\n                    </BottomButton>\n                    <BottomButton\n                        style={{\n                            backgroundColor: colorDef.defCreateBaseFinalizarButton, color: \"white\",\n                            visibility: ssBase.length === 0 ? \"hidden\" : \"visible\",\n                        }}\n                        // onClick={() => ssBaseName === \"\" ? setShowFinishPopup(1) : setModalState(2)}\n                        onClick={() => {\n                            if (ssBaseName === \"\" || (ssBaseName[0] === \"0\" && ssBaseName[1] === \";\")) {\n                                setShowFinishPopup(1);\n                                setNewBaseName(ssBaseName === \"\" ? \"\" : ssBaseName.slice(2))\n                            }\n                            else {\n                                setNewBaseName(ssBaseName)\n                                setModalState(2)\n                            }\n                        }}\n\n                    >\n                        Finalizar\n                        <IoMdSend color={\"white\"} />\n                    </BottomButton>\n                </BottomButtonsContainer>\n            </GeneralLayout>\n        )\n    }\n\n    function MiniViewRenderer() {\n        return (\n            <>\n                <GeneralLayout\n                    blurred={(showFolderSelector || (miniViewShowTree && (ssScreenToShowRef !== undefined && ssScreenToShowRef !== null)))}\n                >\n                    <Navbar />\n                    <CentralDisplayContainer>\n                        {\n                            miniViewShowTree ?\n                                <div style={{ color: \"black\" }}>\n                                    {ssBase.length > 0 &&\n                                        <CompRenameBase\n                                            baseName={ssBaseName}\n                                            onClickRename={() => { setModalState(4) }}\n                                        />\n\n                                    }\n                                    <TreeView >\n                                        {ssBase.filter((pck) => !pck.isFilter()).map((pck) => {\n                                            return <CustomTreeContainer\n                                                pack={pck}\n                                                filters={ssBase.filter((pckList) => pckList.linkTO === pck.idPack)}\n                                                setViewScreenCallback={(screenRef) => { setScreenToShowRef(screenRef) }}\n\n                                                setEditingFunctionCallback={(id: string, screen: string) => editPack(id, screen)}\n                                                setFilteringFunctionCallback={() => {\n                                                    startCreation(\n                                                        { id: -1, name: \"Filtro\" },\n                                                        { id: -1, name: \"Filtro\" },\n                                                        \"Filtro\", pck.idPack\n                                                    )\n                                                }}\n                                                setDeletingFunctionCallback={(id) => deletePack(id)}\n                                            />\n                                        }\n                                        )}\n                                    </TreeView>\n                                </div>\n                                :\n                                <>\n                                    <SelectNewVariableDisplayer\n                                        onShowFolderSelector={(event) => handleClickOnChangeFolder(event)}\n                                        folder={selectedFolder!}\n                                        onSelectGroup={(folder, group) => startCreation(folder, group, \"\", \"\")}\n                                    />\n                                    <Popover\n                                        id=\"selectFolderPopover\"\n                                        open={anchorEl ? true : false}\n                                        anchorEl={anchorEl}\n                                        onClose={() => setAnchorEl(null)}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left',\n                                        }}\n                                    >\n                                        <FoldersPicker\n                                            folders={activeFolders}\n                                            onSelectFolder={(id) => selectFolder(id)}\n                                        />\n                                    </Popover>\n                                </>\n                        }\n                    </CentralDisplayContainer>\n                    <BottomButtonsContainer>\n                        <BottomButton\n                            onClick={() => cleanCreation()}\n                        >\n                            Limpiar\n                            <MdClear color={colorDef.defMainThemeColor} />\n                        </BottomButton>\n                        <BottomButton\n                            style={{ backgroundColor: colorDef.defCreateBaseSalirSinGuardarButton, color: \"white\" }}\n                            onClick={() => cleanCreation(true)}\n                        >\n                            Salir sin guardar\n                            <IoMdExit color={\"white\"} />\n                        </BottomButton>\n                        <BottomButton\n                            style={{\n                                backgroundColor: colorDef.defCreateBaseFinalizarButton, color: \"white\",\n                                visibility: ssBase.length === 0 ? \"hidden\" : \"visible\",\n                            }}\n                            onClick={() => {\n                                if (ssBaseName === \"\" || (ssBaseName[0] === \"0\" && ssBaseName[1] === \";\")) {\n                                    setShowFinishPopup(1);\n                                    setNewBaseName(ssBaseName === \"\" ? \"\" : ssBaseName.slice(2))\n                                }\n                                else {\n                                    setNewBaseName(ssBaseName)\n                                    setModalState(2)\n                                }\n                            }}\n\n                        >\n                            Finalizar\n                            <IoMdSend color={\"white\"} />\n                        </BottomButton>\n                    </BottomButtonsContainer>\n                </GeneralLayout>\n                {\n                    !ssScreenToShowRef && !showFolderSelector ? <FloatingChangeViewButton\n                        onClick={() => setMiniViewShowTree(!miniViewShowTree)}\n                    >\n                        <FaExchangeAlt />\n                    </FloatingChangeViewButton>\n                        : null\n                }\n            </>\n        )\n    }\n\n    function ModalDailyInfo() {\n        return (\n            <MyModal\n                noTop\n                showOverEverything\n                titleText={\"Información\"}\n                middleElements={\n                    // <div style={{\n                    //     display: \"flex\",\n                    //     flexDirection: \"column\",\n                    //     justifyContent: \"center\",\n                    //     width: \"100%\",\n                    //     height: \"100%\",\n                    // }}>\n                    //     <h1 style={{ color: colorDef.defBlackColor }}>Bienvenido/a a SILD</h1>\n                    //     <div style={{ textAlign: \"justify\" }}>\n                    //         <span>El proceso de construcción de la Base se divide en dos partes:</span>\n                    //         <br />\n                    //         <span>1. Vas a decidir la variable que va a relacionar toda tu base de datos, que recibe el nombre VARIABLE MASTER.</span>\n                    //         <br />\n                    //         <span>2. Una vez construida la VARIABLE MASTER, vas a seleccionar aquellas variables que quieres relacionar con dicha variable, que recibe el nombre de variable asociada.</span>\n                    //         <br />\n                    //         <span>Para construir cada una de las variables se va a realizar  a partir de un conjunto de pasos guiados.</span>\n                    //     </div>\n                    //     <label><input type=\"checkbox\" id=\"infoCheckbox\" value=\"first_checkbox\"/> No volver a mostrar</label>\n                    //     {/* <span style={{ color: colorDef.defRedColor, fontSize: \"0.6em\" }}>*Tras aceptar este aviso, no se mostrará de nuevo durante el día de hoy</span> */}\n                    // </div>\n                    <div style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        textAlign: \"left\",\n                        paddingLeft: \"0.5rem\",\n                        paddingRight: \"0.5rem\",\n\n                    }}>\n                        <h2 style={{ textAlign: \"center\", fontSize: \"1.8rem\", marginBottom: \"1rem\", marginTop: \"1rem\" }}>{textDailyInfoModal ? textDailyInfoModal.title : \" \"}</h2>\n                        <div style={{ textAlign: \"justify\" }} dangerouslySetInnerHTML={{ __html: textDailyInfoModal ? textDailyInfoModal.message : \"Error cargando el mensaje...\" }} />\n                        <label style={{ justifySelf: \"center\" }}><input type=\"checkbox\" id=\"infoCheckbox\" value=\"first_checkbox\" /> No volver a mostrar</label>\n                    </div>\n                }\n                bottomElements={\n                    <MyModalButton\n                        displayText={\"Cerrar\"}\n                        onClickCallback={() => {\n                            let cbox: any = document.getElementById(\"infoCheckbox\")!\n                            if (cbox.checked) localStorage.setItem(\"infoAccepted\", new Date().toString())\n                            setShowDailyInfoModal(false)\n                        }}\n                    />\n                }\n            />\n        )\n    }\n\n\n    return (\n        <>\n            <>\n                {showDailyInfoModal ? ModalDailyInfo() : null}\n                <SearchResultModal open={showSearchResultModal} onClose={() => setShowSearchResultModal(false)} />\n                {\n                    showFinishPopup > 0 ?\n                        <FinishCreationPopUp\n                            initialName={ssNewBaseName}\n                            status={showFinishPopup}\n                            closePopup={() => setShowFinishPopup(0)}\n                            onClearMessage={() => setShowFinishPopup(1)}\n                            onSaveDatabase={saveDataBase}\n                            errorString={ssErrorFinishPopup}\n                        />\n                        : null\n                }\n                {renderModal()}\n                {\n                    ssCurrentScreen ?\n                        <Popup\n                            progress={ssCurrentPack!}\n                            screen={ssCurrentScreen}\n                            editingMode={ssEditingMode}\n                            onHide={() => cancelCreation()}\n                            onSave={postNextScreen}\n                            onBack={getPreviousScreen}\n                        /> : null\n                }\n                <SelectFolderFloatingContainer\n                    visible={showFolderSelector}\n                >\n                    <CloseComponentViewButton onClick={() => setShowFolderSelector(false)}>\n                        <IoIosCloseCircleOutline size=\"1.5rem\" />\n                    </CloseComponentViewButton>\n                    <FoldersPicker\n                        folders={activeFolders}\n                        onSelectFolder={(id) => selectFolder(id)}\n                        miniView\n                    />\n                </SelectFolderFloatingContainer>\n                <SelectFolderFloatingContainer\n                    visible={miniView && ssScreenToShowRef !== null && ssScreenToShowRef !== undefined}\n                >\n                    <CloseComponentViewButton onClick={() => setScreenToShowRef(undefined)}>\n                        <IoIosCloseCircleOutline size=\"1.5rem\" />\n                    </CloseComponentViewButton>\n                    {\n                        ssScreenToShowRef ?\n                            <div style={{\n                                color: \"white\",\n                                backgroundColor: colorDef.defMainThemeColor,\n                                width: \"100%\",\n                                padding: \"1rem\",\n                                fontWeight: \"bold\"\n                            }}>\n                                <span>{ssBase.find((pack) => pack.idPack === ssScreenToShowRef.idPack)?.screens.find((screen) => screen.screenId === ssScreenToShowRef.idScreen)?.screenTitle}</span>\n                            </div>\n                            : null\n                    }\n                    {renderRighVisualizacion()}\n                </SelectFolderFloatingContainer>\n            </>\n            {\n                foldersStructure && activeFolders.length > 0 ?\n                    miniView ? MiniViewRenderer() : StandardRenderer()\n                    :\n                    <div style={{\n                        display: \"flex\",\n                        width: \"100vw\",\n                        height: \"100vh\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                    }}>\n                        <Loader />\n                    </div>\n            }\n        </>\n    )\n}\n\n","import React, {  useEffect } from 'react'\nimport * as  colorDef from '../../Shared/Colors'\nimport {  FaExclamationTriangle} from \"react-icons/fa\"\nimport {  MyModalButton } from '../../zComponents/MyModal'\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function ErrorPage() {\n    const history = useHistory();\n\n    const getMiddleText = () =>{\n        let aux = history.location.pathname.split('/')\n        let errorID = aux[aux.length - 1]\n\n        if(errorID === \"1\"){\n            return \"ERROR: servidor no responde\"\n        }\n\n        if(errorID === \"2\"){\n            return \"ERROR: la respuesta proporcionada por el servidor no es interpretable\"\n        }\n        \n        if(errorID === \"3\"){\n            return \"ERROR: Su acceso ha caducado. Vuelva a entrar en la aplicación si desea continuar utilizándola.\"\n        }\n\n        return \"ERROR: desconocido\"\n    }\n\n    const onClosePage = () =>{\n        history.push(\"/\");\n    }\n\n    useEffect(() => {\n\n    }, [])\n\n    return (\n        <div style={{\n            position: \"absolute\",\n            width: \"100vw\",\n            height: \"100vh\",\n            display: 'flex',\n            justifyContent:'center',\n            alignItems:'center',\n            backdropFilter: \"blur(1rem) brightness(70%)\",\n            zIndex:  1500\n        }}>\n            <div style={{\n                width:  \"40rem\",\n                minHeight: \"18rem\",\n                backgroundColor: colorDef.defWhiteColor,\n                zIndex:  1500,\n                display: \"grid\",\n                gridTemplateRows :\"5rem 1fr 5rem\",\n            }}>\n                <div\n                    style={{\n                        color:  \"white\",\n                        backgroundColor:colorDef.defRedColor,\n                        fontSize:  \"2rem\",\n                        fontWeight:600,\n                        display: \"inline-flex\",\n                        justifyContent:\"flex-start\",\n                        alignItems:'center',\n                        gap: '1.5rem',\n                        padding:\"0rem 1.5rem\",\n                        minWidth: '100%',\n                        height: '100%',\n                        position: 'relative',\n                    }}\n\n                >\n                     <FaExclamationTriangle  style={{  color: \"white\" }} />\n                    <span>ALERTA</span>\n                </div>\n                <div style={{\n                        color:  colorDef.defBlackColor,\n                        fontSize: \"1.2em\",\n                        display: \"flex\",\n                        flexDirection:\"column\",\n                        justifyContent:\"center\",\n                        alignItems:'center',\n                        borderBottom:\"1px solid \"+colorDef.defLineSeparatorColor,\n                        padding:\"1rem 0rem\",\n                        margin: \"0 1.3rem\",\n                        maxWidth: '100%',\n                        gap:\"0.7rem\"\n                    }}>\n                    {getMiddleText()}\n                </div>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-evenly\",\n                    width: \"100%\"\n                }}>\n                    <MyModalButton\n                        style={{\n                            width: '10rem', height: '2.5rem'\n                        }}\n                        displayText=\"Cerrar\"\n                        onClickCallback={onClosePage}\n                      />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef, useState } from 'react'\n\n/*namespace CustomSpreadSheet {\n    type ColumnValidationResult = {\n        valid: boolean\n        errorMessage?: string\n    }\n\n    export type Column = {\n        name: string\n        validator: (value: string) => ColumnValidationResult\n    }\n\n    export namespace DefaultColumns {\n        export const Text: Column = {\n            name: \"Texto\",\n            // En este caso la validación siempre pasa correctamente\n            validator: (value: string) => { return { valid: true } }\n        }\n\n        export const Numeric: Column = {\n            name: \"Número\",\n            validator: (value: string) => {\n                if (Number(value)) return { valid: true }\n                else return { valid: false, errorMessage: \"No se ha introducido un valor numérico\" }\n            }\n        }\n\n        export const NHC: Column = {\n            name: \"NHC\",\n            validator: (value: string) => {\n                let num = Number(value)\n                if (!num) return { valid: false, errorMessage: \"El valor introducido no es numérico\" }\n                else if (num.toString().length > 7) return { valid: false, errorMessage: \"El valor es demasiado largo\" }\n                else return { valid: true }\n            }\n        }\n    }\n\n    type ValuePosition = {\n        row: number,\n        column: number\n    }\n\n    type AddValueResult = {\n        succeded: boolean,\n        errorMessage?: string\n    }\n\n    export class CustomSpreadSheet {\n        private _values: any[][] = [[]]\n        private _columns: Column[] = []\n        private _nRows: number = 0\n        private _nPossibleValues: number = 0\n        private _nSetValues: number = 0\n        private _nNullValues: number = 0\n\n        private _onNewSizeCallback: (size: { rows: number, cols: number }) => void\n        private _onValueAddedCallback: (newValues: any[][], size: { rows: number, cols: number }) => void\n        private _onAddNewColumnCallback: (columns: Column[]) => void\n        private _onErrorAddingValueCallback?: (errorMessage?: string) => void\n\n        constructor(\n            onNewSizeCallback: (size: { rows: number, cols: number }) => void,\n            onValueAddedCallback: (newValues: any[][], size: { rows: number, cols: number }) => void,\n            onAddNewColumnCallback: (columns: Column[]) => void,\n            onErrorAddingValueCallback?: (errorMessage?: string) => void\n        ) {\n            this._onNewSizeCallback = onNewSizeCallback\n            this._onValueAddedCallback = onValueAddedCallback\n            this._onAddNewColumnCallback = onAddNewColumnCallback\n            this._onErrorAddingValueCallback = onErrorAddingValueCallback\n        }\n\n        private _valuesCopy(): any[][] {\n            let val: any[][] = [[]]\n            for (let i = 0; i < this._nRows; i++) {\n                for (let j = 0; j < this._columns.length; j++) {\n                    val[i][j] = this._values[i][j]\n                }\n            }\n            return val\n        }\n        private _recalculateValues() {\n            this._nPossibleValues = this._nRows * this._columns.length\n            this._nNullValues = this._nPossibleValues - this._nSetValues\n        }\n        private _getSizeObject(): { rows: number, cols: number } {\n            return {\n                rows: this._nRows,\n                cols: this._columns.length\n            }\n        }\n\n        public addNewValue(value: any, position: ValuePosition): AddValueResult {\n            let result: AddValueResult\n            if (position.row >= this._nRows || position.column >= this._columns.length) result = { succeded: false, errorMessage: \"Posición del valor fuera de rango\" }\n            else {\n                let validation = this._columns[position.column].validator(value)\n                if (!validation.valid) {\n                    if (validation.errorMessage) result = { succeded: false, errorMessage: validation.errorMessage }\n                    else result = { succeded: false }\n                } else result = { succeded: true }\n            }\n            if (!result.succeded && this._onErrorAddingValueCallback) this._onErrorAddingValueCallback(result.errorMessage)\n            else {\n                this._values[position.row][position.column] = value\n                this._nSetValues++\n                this._onValueAddedCallback(this._valuesCopy(), this._getSizeObject())\n            }\n            return result\n        }\n\n        public addNewColumn(column: Column) {\n            this._columns.push(column)\n            if (this._nRows === 0) {\n                this.addNewRow()\n                this._onAddNewColumnCallback([...this._columns])\n                return\n            }\n            this._recalculateValues()\n            this._onNewSizeCallback(this._getSizeObject())\n            this._onAddNewColumnCallback([...this._columns])\n        }\n\n        public addNewRow() {\n            if (this._columns.length < 1) {\n                return\n            }\n            this._nRows++\n            this._recalculateValues()\n            this._onNewSizeCallback(this._getSizeObject())\n        }\n    }\n}\n\nexport default function ElementCustomSpreadsheet() {\n\n    const [size, setSize] = useState<{ rows: number, cols: number }>({ rows: 0, cols: 0 })\n    const [columns, setColumns] = useState<CustomSpreadSheet.Column[]>([])\n    const [values, setValues] = useState<any[][]>([[]])\n    const [errors, setErrors] = useState<string[]>([])\n\n    const spreadSheet = useRef(new CustomSpreadSheet.CustomSpreadSheet(\n        (size) => { setSize(size) },\n        (values) => { setValues(values) },\n        (columns) => { setColumns(columns) },\n        // (errMsg) => { errMsg ? setErrors([...errors, errMsg]) : null }\n    ))\n\n    function renderTable() {\n        return (\n            <table>\n                <tr>\n                    {columns.map((col) => <th>{col.name}</th>)}\n                </tr>\n                {\n                    Array.from(Array(size.rows).keys()).map((_) => {\n                        return (\n                            <tr>\n                                {\n                                    Array.from(Array(size.cols).keys()).map((_) => {\n                                        return (\n                                            <td>\n                                                <input type=\"text\" defaultValue=\"---\" />\n                                            </td>\n                                        )\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </table>\n        )\n    }\n\n    return (\n        <div>\n            <div style={{color: \"black\"}}>\n                <span>Number of rows: </span>\n                <span>{size.rows}</span>\n                <button onClick={() => spreadSheet.current.addNewRow()}>+</button>\n            </div>\n            <div style={{color: \"black\"}}>\n                <span>Number of columns: </span>\n                <span>{size.cols}</span>\n                <button onClick={() => spreadSheet.current.addNewColumn(CustomSpreadSheet.DefaultColumns.Numeric)}>+</button>\n            </div>\n            <div style={{color: \"black\"}}>\n                {renderTable()}\n            </div>\n        </div>\n    )\n}*/\n\ntype SpreadsheetCellPosition = {\n    row: number,\n    col: number\n}\nfunction arePositionsEqual(pos1: SpreadsheetCellPosition, pos2: SpreadsheetCellPosition) {\n    return pos1.row == pos2.row && pos1.col == pos2.col\n}\n\nfunction ElementSpreadsheetCell(props: {\n    position: SpreadsheetCellPosition,\n    selected: boolean,\n    value: any,\n    onValueChange: (position: SpreadsheetCellPosition, newValue: any) => void,\n    onSelect: (position: SpreadsheetCellPosition) => void\n}) {\n    const {\n        position,\n        selected,\n        value,\n        onValueChange,\n        onSelect\n    } = props\n\n    return (\n        <div style={{\n            backgroundColor: selected ? \"rgba(20,149,131,0.08)\" : \"white\",\n            border: selected ? \"solid 2px rgb(20,149,131)\" : \"solid 0.5px gray\",\n            // backgroundColor: \"rgba(20,149,131,0.08)\",\n            color: \"black\",\n            width: \"6rem\",\n            height: \"2rem\",\n            margin: 0\n        }}\n            onClick={() => onSelect(position)}\n        >\n            <span>\n                {value}\n            </span>\n            {/* <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => onValueChange(position, e.target.value,)}\n                onSelect={() => onSelect(position)}\n            /> */}\n        </div>\n    )\n}\n\n\nexport default function ElementSpreadsheet() {\n    const [selectedPosition, setSelectedPosition] = useState<SpreadsheetCellPosition>()\n    console.log(selectedPosition)\n\n    function renderCells(rows: number, columns: number) {\n        let r = []\n        for (let i = 0; i < rows; i++) {\n            let c = []\n            for (let j = 0; j < columns; j++) {\n                c.push(\n                    <td style={{ padding: 0 }}>\n                        <ElementSpreadsheetCell\n                            position={{ row: i, col: j }}\n                            selected={selectedPosition ? arePositionsEqual(selectedPosition, { row: i, col: j }) : false}\n                            value={0}\n                            onValueChange={(pos, val) => { console.log(pos, val) }}\n                            onSelect={(pos) => setSelectedPosition(pos)}\n                        />\n                    </td>\n                )\n            }\n            r.push(\n                <tr>\n                    {c}\n                </tr>\n            )\n        }\n        return r\n    }\n\n    return (\n        <div>\n            <table>\n                {renderCells(20, 10)}\n            </table>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport './App.css';\n\n//SHARE\nimport { GlobalStyles } from \"./Shared/GlobalStyle\";\nimport { lightTheme } from \"./Shared/Themes\"\n\n// MY PAGES\nimport MainPage from './zPages/MainPage/zMainPage';\nimport LoginPage from './zPages/LoginPage/LoginPage';\nimport SeeDatabasePage2 from './zPages/SeeDatabasePage/zSeeDatabasePage2';\nimport V2_CreateDatabasePage from './zPages/V2_CreateDatabasePage/zV2_CreateDatabasePage';\nimport ErrorPage from './zPages/ErrorPage/zErrorPage';\nimport ElementSpreadsheet from './Elements/ElementSpreadsheet';\n\n\ndeclare global {\n    interface String {\n        croppedVersion(cropAt: number): string;\n    }\n}\n\nString.prototype.croppedVersion = function (this: string, cropAt: number): string {\n    let aux = this\n    if (aux.length <= cropAt) return aux\n    else {\n        aux = aux.slice(0, cropAt).trimEnd()\n        aux = aux + \"...\"\n        return aux\n    }\n}\n\nexport default class App extends React.Component {\n    render() {\n\n        let token = localStorage.getItem(\"token\")\n\n        return (\n            < ThemeProvider theme={lightTheme} >\n                <GlobalStyles />\n                <Switch>\n                    <Route exact path=\"/new_elements/spreadsheet\" component={ElementSpreadsheet} />\n                    <Route exact path=\"/databases\" component={MainPage} />\n                    <Route exact path=\"/databases/new\" component={V2_CreateDatabasePage} />\n                    <Route exact path=\"/databases/edit/:name\" component={V2_CreateDatabasePage} />\n                    <Route exact path=\"/databases/:id\" component={SeeDatabasePage2} />\n                    <Route exact path=\"/error/:id\" component={ErrorPage} />\n                    <Route exact path=\"/error\" component={ErrorPage} />\n                    <Route exact path=\"/\" component={LoginPage} />\n                </Switch>\n            </ThemeProvider >\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}